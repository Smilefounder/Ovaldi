@model Ovaldi.Core.SiteImport.ISiteDownloader
@{
    ViewBag.Title = "Results";
    Layout = "~/Views/Shared/Blank.cshtml";
}

<h1 class="title">Site import</h1>
<div class="wizard">
    <div class="container">
        <span>Select a site</span>
        <span class="active">Results<b></b></span>
    </div>
</div>

@if (Model.IsCompleted)
{
    <div class="block message success content">
        <ul>
            @foreach (var item in Model.DownloadedPages)
            {
                <li>@item.Url</li>
            }
        </ul>
    </div>
    <div class="wizard-buttons">
        <a class="button gray" href="@Url.Action("Index")">&laquo; Import another</a>
        <a class="button" href="@ViewBag.PreviewUrl" target="_blank">View the site &raquo;</a>
    </div>
}
else
{
    <div class="block message success content">
        <ul id="results"></ul>
    </div>
    <div class="wizard-buttons hide">
        <a class="button gray" href="@Url.Action("Index")">&laquo; Import another</a>
        <a class="button" href="@ViewBag.PreviewUrl" target="_blank">View the site &raquo;</a>
    </div>

    <!--Script references. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--Add script to update the page and send messages.-->
    <script type="text/javascript">
        $(function () {
            // Declare a proxy to reference the hub.
            var chat = $.connection.chatHub;

            chat.client.onPageDownloaded = function (result) {
                $('#results').append('<li>' + result.DownloadedPages + ':&nbsp;&nbsp;<strong>' + result.CurrentPage.Url
                     + '</strong>:&nbsp;&nbsp;Current level:' + result.CurrentPage.Level + '&nbsp;&nbsp;Remain pages:' + result.Remains + '</li>');
            };
            chat.client.onDownloadCompleted = function (result) {
                $('#results').append('<li><strong>' + 'Downloaded pages'
                   + '</strong>:&nbsp;&nbsp;' + result.length + '</li>');

                $('.wizard-buttons').removeClass('hide');

                $.connection.hub.stop();
            };
            // Start the connection.
            $.connection.hub.start().done(function () {
                //console.log($.connection.hub.id);
            });
        });
    </script>
}
