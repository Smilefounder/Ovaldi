<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-kenshincui-p-3931948.html</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html&gt;
&lt;html lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;iOS开发系列--UITableView全面解析 - KenshinCui - 博客园&lt;/title&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/bundles/blog-common.css"&gt;
&lt;link id="MainCss" type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/skins/Minyx2_Lite/bundle-Minyx2_Lite.css"&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/blog/customcss/79371.css"&gt;
&lt;link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/kenshincui/rss"&gt;
&lt;link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/kenshincui/rsd.xml"&gt;
&lt;link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/kenshincui/wlwmanifest.xml"&gt;
&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;  
&lt;script type="text/javascript"&gt;var currentBlogApp = 'kenshincui', cb_enable_mathjax=false;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/blog-common.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/skins/Minyx2_Lite/bundle-Minyx2_Lite.js" language="javascript" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a name="top"&gt;&lt;/a&gt;
&lt;!--PageBeginHtml Block Begin--&gt;
&lt;link href="http://files.cnblogs.com/kenshincui/CNBlogsNavigation-0.5.2.min.css" rel="stylesheet"&gt;
&lt;!--PageBeginHtml Block End--&gt;


&lt;div id="container"&gt;
    &lt;a class="minyx" href="http://www.cnblogs.com/"&gt;代码改变世界&lt;/a&gt;
    &lt;ul id="topMnu"&gt;
        &lt;!-- 统计数据 --&gt;
        &lt;li&gt;
            
                
Posts - 61, 
Articles - 0, 
Comments - 438
&lt;!----&gt;
            
        &lt;/li&gt;
        &lt;!-- 这边可以增加一些链接 --&gt;
        &lt;!-- 博客园 --&gt;
        &lt;li&gt;&lt;a href="http://www.cnblogs.com"&gt;Cnblogs&lt;/a&gt;&lt;/li&gt;
        &lt;!-- 管理 --&gt;
        &lt;li id="topMnu-dashboard"&gt;
            &lt;a id="lnkDashboard" href="http://www.cnblogs.com/kenshincui/admin/EditPosts.aspx"&gt;Dashboard&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;
            &lt;a id="lnkLogin" href="http://passport.cnblogs.com/login.aspx?ReturnUrl=http://www.cnblogs.com/kenshincui/p/3931948.html"&gt;Login&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;script type="text/javascript"&gt;
        var m = window.__blog.topMenuRendered;
        if (m) { m(__$("topMnu")); }
    &lt;/script&gt;

    &lt;div id="header"&gt;
        &lt;ul id="menu"&gt;
            &lt;!-- 首页，当前section加上current类 --&gt;
            &lt;li id="menu-home" class="current"&gt;
                &lt;a id="lnkHome" href="http://www.cnblogs.com/kenshincui/"&gt;Home&lt;/a&gt;&lt;/li&gt;
            &lt;!-- 联系 --&gt;
            &lt;li id="menu-contact"&gt;
                &lt;a id="lnkContact" href="http://space.cnblogs.com/msg/send/KenshinCui"&gt;Contact&lt;/a&gt;&lt;/li&gt;
            &lt;!-- 相册 --&gt;
            &lt;li id="menu-gallary"&gt;
                &lt;a id="lnkGallery" href="http://www.cnblogs.com/kenshincui/gallery.html"&gt;Gallery&lt;/a&gt;&lt;/li&gt;
            &lt;!-- Rss订阅 --&gt;
            &lt;li id="rss"&gt;
                &lt;a id="lnkRss" href="http://www.cnblogs.com/kenshincui/rss"&gt;RSS&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;div id="newmsg"&gt;&lt;/div&gt;
        &lt;h1&gt;
            &lt;!-- 主标题 --&gt;
            &lt;a id="lnkBlogTitle" href="http://www.cnblogs.com/kenshincui/"&gt;Kenshin Cui's Blog&lt;/a&gt;
            &lt;!-- 子标题 --&gt;
            &lt;small&gt;
                CODING 完美世界...&lt;/small&gt;
        &lt;/h1&gt;
    &lt;/div&gt;

    &lt;script type="text/javascript"&gt;
        var m = window.__blog.headerRendered;
        if (m) { m(__$("header")); }
    &lt;/script&gt;

    &lt;div id="wrapper"&gt;
        &lt;div id="content"&gt;
            &lt;script type="text/javascript"&gt;
                var m = window.__blog.preRenderPosts;
                if (m) { m(); }
            &lt;/script&gt;
            

&lt;div class="post" id="post"&gt;
    &lt;a name="top"&gt;&lt;/a&gt;
    &lt;h2&gt;&lt;a id="cb_post_title_url" href="http://www.cnblogs.com/kenshincui/p/3931948.html"&gt;iOS开发系列--UITableView全面解析&lt;/a&gt;&lt;/h2&gt;
    &lt;small&gt;2014-08-23 23:20 by KenshinCui, &lt;span id="post_view_count"&gt;...&lt;/span&gt; 阅读, &lt;span id="post_comment_count"&gt;...&lt;/span&gt; 评论, &lt;a href="#" onclick="AddToWz({0});return false;"&gt;收藏&lt;/a&gt;,  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3931948" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/small&gt;
    &lt;div class="entry"&gt;
        &lt;div id="cnblogs_post_body"&gt;&lt;p align="right"&gt;&lt;strong&gt;--UIKit之UITableView&lt;/strong&gt;&lt;/p&gt; &lt;h1 id="overview"&gt;概述&lt;/h1&gt; &lt;p&gt;在iOS开发中UITableView可以说是使用最广泛的控件，我们平时使用的软件中到处都可以看到它的影子，类似于微信、QQ、新浪微博等软件基本上随处都是UITableView。当然它的广泛使用自然离不开它强大的功能，今天这篇文章将针对UITableView重点展开讨论。今天的主要内容包括：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a href="#introduction"&gt;基本介绍&lt;/a&gt;  &lt;li&gt;&lt;a href="#dataSource"&gt;数据源&lt;/a&gt;  &lt;li&gt;&lt;a href="#delegate"&gt;代理&lt;/a&gt;  &lt;li&gt;&lt;a href="#performance"&gt;性能优化&lt;/a&gt;  &lt;li&gt;&lt;a href="#uiTableViewCell"&gt;UITableViewCell&lt;/a&gt;  &lt;li&gt;&lt;a href="#operate"&gt;常用操作&lt;/a&gt;  &lt;li&gt;&lt;a href="#uiTableViewController"&gt;UITableViewController&lt;/a&gt;  &lt;li&gt;&lt;a href="#mvc"&gt;MVC模式&lt;/a&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ol&gt; &lt;h1 id="introduction"&gt;基本介绍&lt;/h1&gt; &lt;p&gt;UITableView有两种风格：UITableViewStylePlain和UITableViewStyleGrouped。这两者操作起来其实并没有本质区别，只是后者按分组样式显示前者按照普通样式显示而已。大家先看一下两者的应用：&lt;/p&gt; &lt;p&gt;1&amp;gt;分组样式&lt;/p&gt; &lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232318440491185.png"&gt;&lt;img title="UITableViewStyleGrouped1" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewStyleGrouped1" src="http://images.cnitblog.com/blog/62046/201408/232318443782284.png" width="270" height="480"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://images.cnitblog.com/blog/62046/201408/232318447533098.png"&gt;&lt;img title="UITableViewStyleGrouped2" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewStyleGrouped2" src="http://images.cnitblog.com/blog/62046/201408/232318450818898.png" width="270" height="480"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;2&amp;gt;不分组样式&lt;/p&gt; &lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232318453621685.png"&gt;&lt;img title="UITableViewStylePlain1" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewStylePlain1" src="http://images.cnitblog.com/blog/62046/201408/232318457064256.png" width="270" height="480"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://images.cnitblog.com/blog/62046/201408/232318460032813.png"&gt;&lt;img title="UITableViewStylePlain2" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewStylePlain2" src="http://images.cnitblog.com/blog/62046/201408/232318462379585.png" width="270" height="480"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;大家可以看到在UITableView中数据只有行的概念，并没有列的概念，因为在手机操作系统中显示多列是不利于操作的。UITableView中每行数据都是一个UITableViewCell，在这个控件中为了显示更多的信息，iOS已经在其内部设置好了多个子控件以供开发者使用。如果我们查看UITableViewCell的声明文件可以发现在内部有一个UIView控件（contentView，作为其他元素的父控件）、两个UILable控件（textLabel、detailTextLabel）、一个UIImage控件（imageView），分别用于容器、显示内容、详情和图片。使用效果类似于微信、QQ信息列表：&lt;/p&gt; &lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232318465964629.png"&gt;&lt;img title="UITableViewCell1" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewCell1" src="http://images.cnitblog.com/blog/62046/201408/232318468933187.png" width="270" height="480"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://images.cnitblog.com/blog/62046/201408/232318472532529.png"&gt;&lt;img title="UITableViewCell2" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewCell2" src="http://images.cnitblog.com/blog/62046/201408/232318476591587.png" width="270" height="480"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;当然，这些子控件并不一定要全部使用，具体操作时可以通过UITableViewCellStyle进行设置，具体每个枚举表示的意思已经在代码中进行了注释：&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;typedef &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NS_ENUM(NSInteger, UITableViewCellStyle) {
    UITableViewCellStyleDefault,    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;// 左侧显示textLabel（不显示detailTextLabel），imageView可选（显示在最左边）
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellStyleValue1,        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;// 左侧显示textLabel、右侧显示detailTextLabel（默认蓝色），imageView可选（显示在最左边）
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellStyleValue2,        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;// 左侧依次显示textLabel(默认蓝色)和detailTextLabel，imageView可选（显示在最左边）
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellStyleSubtitle    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;// 左上方显示textLabel，左下方显示detailTextLabel（默认灰色）,imageView可选（显示在最左边）
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;};&lt;/span&gt;&lt;/pre&gt;
&lt;h1 id="dataSource"&gt;数据源&lt;/h1&gt;
&lt;p&gt;由于iOS是遵循MVC模式设计的，很多操作都是通过代理和外界沟通的，但对于数据源控件除了代理还有一个数据源属性，通过它和外界进行数据交互。 对于UITableView设置完dataSource后需要实现UITableViewDataSource协议，在这个协议中定义了多种 数据操作方法，下面通过创建一个简单的联系人管理进行演示：&lt;/p&gt;
&lt;p&gt;首先我们需要创建一个联系人模型KCContact&lt;/p&gt;
&lt;p&gt;KCContact.h&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  Contact.h
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;&amp;lt;Foundation/Foundation.h&amp;gt;

&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCContact : NSObject

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 姓
@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,copy) NSString *firstName;
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 名
@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,copy) NSString *lastName;
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 手机号码
@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,copy) NSString *phoneNumber;

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 带参数的构造函数
-(KCContact *)initWithFirstName:(NSString *)firstName andLastName:(NSString *)lastName andPhoneNumber:(NSString *)phoneNumber;

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 取得姓名
-(NSString *)getName;


&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 带参数的静态对象初始化方法
+(KCContact *)initWithFirstName:(NSString *)firstName andLastName:(NSString *)lastName andPhoneNumber:(NSString *)phoneNumber;
@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;KCContact.m&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  Contact.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContact.h"

&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@implementation KCContact

-(KCContact *)initWithFirstName:(NSString *)firstName andLastName:(NSString *)lastName andPhoneNumber:(NSString *)phoneNumber{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(self=[super init]){
        self.firstName=firstName;
        self.lastName=lastName;
        self.phoneNumber=phoneNumber;
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;self;
}

-(NSString *)getName{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[NSString stringWithFormat:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"%@ %@"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,_lastName,_firstName];
}

+(KCContact *)initWithFirstName:(NSString *)firstName andLastName:(NSString *)lastName andPhoneNumber:(NSString *)phoneNumber{
    KCContact *contact1=[[KCContact alloc]initWithFirstName:firstName andLastName:lastName andPhoneNumber:phoneNumber];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;contact1;
}

@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;为了演示分组显示我们不妨将一组数据也抽象成模型KCContactGroup&lt;/p&gt;
&lt;p&gt;KCContactGroup.h&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCContactGroup.h
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;&amp;lt;Foundation/Foundation.h&amp;gt;
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContact.h"

&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCContactGroup : NSObject

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 组名
@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,copy) NSString *name;

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 分组描述
@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,copy) NSString *detail;

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 联系人
@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,strong) NSMutableArray *contacts;

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 带参数个构造函数
-(KCContactGroup *)initWithName:(NSString *)name andDetail:(NSString *)detail andContacts:(NSMutableArray *)contacts;

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 静态初始化方法
+(KCContactGroup *)initWithName:(NSString *)name andDetail:(NSString *)detail andContacts:(NSMutableArray *)contacts;

@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;KCContactGroup.m&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCContactGroup.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContactGroup.h"

&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@implementation KCContactGroup


-(KCContactGroup *)initWithName:(NSString *)name andDetail:(NSString *)detail andContacts:(NSMutableArray *)contacts{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(self=[super init]) {
        self.name=name;
        self.detail=detail;
        self.contacts=contacts;
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;self;
}

+(KCContactGroup *)initWithName:(NSString *)name andDetail:(NSString *)detail andContacts:(NSMutableArray *)contacts{
    KCContactGroup *group1=[[KCContactGroup alloc]initWithName:name andDetail:detail andContacts:contacts];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group1;
}
@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;然后在viewDidLoad方法中创建一些模拟数据同时实现数据源协议方法：&lt;/p&gt;
&lt;p&gt;KCMainViewController.m&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCMainViewController.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCMainViewController.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContact.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContactGroup.h"

&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCMainViewController ()&amp;lt;UITableViewDataSource&amp;gt;{
    UITableView *_tableView;
    NSMutableArray *_contacts;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//联系人模型
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;}

@end

@implementation KCMainViewController

- (&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)viewDidLoad {
    [super viewDidLoad];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//初始化数据
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self initData];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//创建一个分组样式的UITableView
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView=[[UITableView alloc]initWithFrame:self.view.bounds style:UITableViewStyleGrouped];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置数据源，注意必须实现对应的UITableViewDataSource协议
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView.dataSource=self;
    
    [self.view addSubview:_tableView];
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 加载数据
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)initData{
    _contacts=[[NSMutableArray alloc]init];
    
    KCContact *contact1=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kenshin" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131234"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact2=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Tom" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131237"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group1=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact1,contact2, nil]];
    [_contacts addObject:group1];
    

    
    KCContact *contact3=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Terry" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131238"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact4=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Jack" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131239"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact5=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rose" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131240"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group2=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact3,contact4,contact5, nil]];
    [_contacts addObject:group2];
    
    
    
    KCContact *contact6=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kaoru" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131235"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact7=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rosa" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131236"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];

    KCContactGroup *group3=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact6,contact7, nil]];
    [_contacts addObject:group3];
    
    
    KCContact *contact8=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Stephone" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131241"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact9=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lucy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131242"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact10=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131243"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact11=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Emily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131244"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact12=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Andy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131245"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group4=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact8,contact9,contact10,contact11,contact12, nil]];
    [_contacts addObject:group4];
    
    
    KCContact *contact13=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131246"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact14=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Vivan" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131247"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact15=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joyse" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131248"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group5=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact13,contact14,contact15, nil]];
    [_contacts addObject:group5];

}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 数据源方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回分组数
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"计算分组数"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;);
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_contacts.count;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组行数
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"计算每组(组%i)行数"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,section);
    KCContactGroup *group1=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group1.contacts.count;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark返回每行的单元格
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//NSIndexPath是一个结构体，记录了组和行信息
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成单元格(组：%i,行%i)"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,indexPath.section,indexPath.row);
    KCContactGroup *group=_contacts[indexPath.section];
    KCContact *contact=group.contacts[indexPath.row];
    UITableViewCell *cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:nil];
    cell.textLabel.text=[contact getName];
    cell.detailTextLabel.text=contact.phoneNumber;
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;cell;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组头标题名称
-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成组（组%i）名称"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,section);
    KCContactGroup *group=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group.name;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组尾部说明
-(NSString *)tableView:(UITableView *)tableView titleForFooterInSection:(NSInteger)section{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成尾部（组%i）详情"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,section);
    KCContactGroup *group=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group.detail;
}
@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;运行可以看到如下效果：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232318479403373.jpg"&gt;&lt;img title="Contact" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="Contact" src="http://images.cnitblog.com/blog/62046/201408/232318482215159.jpg" width="321" height="591"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;大家在使用iPhone通讯录时会发现右侧可以按字母检索，使用起来很方便，其实这个功能使用UITableView实现很简单，只要实现数据源协议的一个方法，构建一个分组标题的数组即可实现。数组元素的内容和组标题内容未必完全一致，UITableView是按照数组元素的索引和每组数据索引顺序来定位的而不是按内容查找。&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组标题索引
-(NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成组索引"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;);
    NSMutableArray *indexs=[[NSMutableArray alloc]init];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;for&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(KCContactGroup *group in _contacts){
        [indexs addObject:group.name];
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;indexs;
}&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232318487213245.png"&gt;&lt;img title="UITableViewIndex" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewIndex" src="http://images.cnitblog.com/blog/62046/201408/232318490347573.png" width="320" height="590"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;需要注意的是上面几个重点方法的执行顺序，请看下图：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232318493316130.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="http://images.cnitblog.com/blog/62046/201408/232318496901174.png" width="360" height="587"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;值得指出的是生成单元格的方法并不是一次全部调用，而是只会生产当前显示在界面上的单元格，当用户滚动操作时再显示其他单元格。 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：随着我们的应用越来越复杂，可能经常需要调试程序，在iOS中默认情况下不能定位到错误代码行，我们可以通过如下设置让程序定位到出错代码行：Show the Breakpoint&amp;nbsp; navigator—Add Exception breakpoint。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h1 id="delegate"&gt;代理&lt;/h1&gt;
&lt;p&gt;
&lt;p&gt;
&lt;p&gt;上面我们已经看到通讯录的简单实现，但是我们发现单元格高度、分组标题高度以及尾部说明的高度都需要调整，此时就需要使用代理方法。UITableView代理方法有很多，例如监听单元格显示周期、监听单元格选择编辑操作、设置是否高亮显示单元格、设置行高等。&lt;/p&gt;
&lt;h2&gt;1.设置行高&lt;/h2&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 代理方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置分组标题内容高度
-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(section==0){
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;50;
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;40;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置每行高度（每行高度可以不一样）
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;45;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置尾部说明内容高度
-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;40;
}&lt;/span&gt;&lt;/pre&gt;
&lt;h2&gt;2.监听点击&lt;/h2&gt;
&lt;p&gt;在iOS中点击某联系个人就可以呼叫这个联系人，这时就需要监听点击操作，这里就不演示呼叫联系人操作了，我们演示一下修改人员信息的操作。&lt;/p&gt;
&lt;p&gt;KCMainViewContrller.m&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCMainViewController.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCMainViewController.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContact.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContactGroup.h"

&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCMainViewController ()&amp;lt;UITableViewDataSource,UITableViewDelegate,UIAlertViewDelegate&amp;gt;{
    UITableView *_tableView;
    NSMutableArray *_contacts;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//联系人模型
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSIndexPath *_selectedIndexPath;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//当前选中的组和行
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;}

@end

@implementation KCMainViewController

- (&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)viewDidLoad {
    [super viewDidLoad];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//初始化数据
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self initData];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//创建一个分组样式的UITableView
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView=[[UITableView alloc]initWithFrame:self.view.bounds style:UITableViewStyleGrouped];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置数据源，注意必须实现对应的UITableViewDataSource协议
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView.dataSource=self;
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置代理
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView.&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;delegate&lt;/span&gt;&lt;span style="background: white; color: black"&gt;=self;
    
    [self.view addSubview:_tableView];
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 加载数据
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)initData{
    _contacts=[[NSMutableArray alloc]init];
    
    KCContact *contact1=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kenshin" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131234"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact2=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Tom" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131237"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group1=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact1,contact2, nil]];
    [_contacts addObject:group1];
    

    
    KCContact *contact3=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Terry" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131238"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact4=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Jack" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131239"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact5=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rose" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131240"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group2=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact3,contact4,contact5, nil]];
    [_contacts addObject:group2];
    
    
    
    KCContact *contact6=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kaoru" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131235"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact7=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rosa" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131236"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];

    KCContactGroup *group3=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact6,contact7, nil]];
    [_contacts addObject:group3];
    
    
    KCContact *contact8=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Stephone" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131241"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact9=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lucy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131242"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact10=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131243"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact11=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Emily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131244"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact12=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Andy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131245"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group4=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact8,contact9,contact10,contact11,contact12, nil]];
    [_contacts addObject:group4];
    
    
    KCContact *contact13=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131246"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact14=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Vivan" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131247"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact15=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joyse" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131248"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group5=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact13,contact14,contact15, nil]];
    [_contacts addObject:group5];

}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 数据源方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回分组数
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"计算分组数"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;);
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_contacts.count;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组行数
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"计算每组(组%i)行数"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,section);
    KCContactGroup *group1=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group1.contacts.count;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark返回每行的单元格
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//NSIndexPath是一个对象，记录了组和行信息
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成单元格(组：%i,行%i)"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,indexPath.section,indexPath.row);
    KCContactGroup *group=_contacts[indexPath.section];
    KCContact *contact=group.contacts[indexPath.row];
    UITableViewCell *cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:nil];
    cell.textLabel.text=[contact getName];
    cell.detailTextLabel.text=contact.phoneNumber;
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;cell;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组头标题名称
-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成组（组%i）名称"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,section);
    KCContactGroup *group=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group.name;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组尾部说明
-(NSString *)tableView:(UITableView *)tableView titleForFooterInSection:(NSInteger)section{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成尾部（组%i）详情"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,section);
    KCContactGroup *group=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group.detail;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组标题索引
-(NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成组索引"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;);
    NSMutableArray *indexs=[[NSMutableArray alloc]init];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;for&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(KCContactGroup *group in _contacts){
        [indexs addObject:group.name];
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;indexs;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 代理方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置分组标题内容高度
-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(section==0){
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;50;
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;40;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置每行高度（每行高度可以不一样）
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;45;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置尾部说明内容高度
-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;40;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 点击行
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    _selectedIndexPath=indexPath;
    KCContactGroup *group=_contacts[indexPath.section];
    KCContact *contact=group.contacts[indexPath.row];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//创建弹出窗口
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"System Info" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;message:[contact getName] &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;delegate&lt;/span&gt;&lt;span style="background: white; color: black"&gt;:self cancelButtonTitle:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cancel" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;otherButtonTitles:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"OK"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;, nil];
    alert.alertViewStyle=UIAlertViewStylePlainTextInput; &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置窗口内容样式
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITextField *textField= [alert textFieldAtIndex:0]; &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//取得文本框
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;textField.text=contact.phoneNumber; &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置文本框内容
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[alert show]; &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//显示窗口
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 窗口的代理方法，用户保存数据
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//当点击了第二个按钮（OK）
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(buttonIndex==1) {
        UITextField *textField= [alertView textFieldAtIndex:0];
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//修改模型数据
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCContactGroup *group=_contacts[_selectedIndexPath.section];
        KCContact *contact=group.contacts[_selectedIndexPath.row];
        contact.phoneNumber=textField.text;
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//刷新表格
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[_tableView reloadData];
    }
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 重写状态样式方法
-(UIStatusBarStyle)preferredStatusBarStyle{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UIStatusBarStyleLightContent;
}
@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;在上面的代码中我们通过修改模型来改变UI显示，这种方式是经典的MVC应用，在后面的代码中会经常看到。当然UI的刷新使用了UITableView的reloadData方法，该方法会重新调用数据源方法，包括计算分组、计算每个分组的行数，生成单元格等刷新整个UITableView。当然这种方式在实际开发中是不可取的，我们不可能因为修改了一个人的信息就刷新整个UITableViewView，此时我们需要采用局部刷新。局部刷新使用起来很简单，只需要调用UITableView的另外一个方法：&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 窗口的代理方法，用户保存数据
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//当点击了第二个按钮（OK）
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(buttonIndex==1) {
        UITextField *textField= [alertView textFieldAtIndex:0];
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//修改模型数据
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCContactGroup *group=_contacts[_selectedIndexPath.section];
        KCContact *contact=group.contacts[_selectedIndexPath.row];
        contact.phoneNumber=textField.text;
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//刷新表格
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSArray *indexPaths=@[_selectedIndexPath];&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//需要局部刷新的单元格的组、行
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[_tableView reloadRowsAtIndexPaths:indexPaths withRowAnimation:UITableViewRowAnimationLeft];&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//后面的参数代表更新时的动画
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;}
}&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;h1 id="performance"&gt;性能优化&lt;/h1&gt;
&lt;p&gt;前面已经说过UITableView中的单元格cell是在显示到用户可视区域后创建的，那么如果用户往下滚动就会继续创建显示在屏幕上的单元格，如果用户向上滚动返回到查看过的内容时同样会重新创建之前已经创建过的单元格。如此一来即使UITableView的内容不是太多，如果用户反复的上下滚动，内存也会瞬间飙升，更何况很多时候UITableView的内容是很多的（例如微博展示列表，基本向下滚动是没有底限的）。&lt;/p&gt;
&lt;p&gt;前面一节中我们曾经提到过如何优化UIScrollView，当时就是利用有限的UIImageView动态切换其内容来尽可能减少资源占用。同样的，在UITableView中也可以采用类似的方式，只是这时我们不是在滚动到指定位置后更改滚动的位置而是要将当前没有显示的Cell重新显示在将要显示的Cell的位置然后更新其内容。原因就是UITableView中的Cell结构布局可能是不同的，通过重新定位是不可取的，而是需要重用已经不再界面显示的已创建过的Cell。&lt;/p&gt;
&lt;p&gt;当然，听起来这么做比较复杂，其实实现起来很简单，因为UITableView已经为我们实现了这种机制。在UITableView内部有一个缓存池，初始化时使用&lt;strong&gt;initWithStyle:(UITableViewCellStyle) reuseIdentifier:(NSString *)&lt;/strong&gt;方法指定一个可重用标识，就可以将这个cell放到缓存池。然后在使用时使用指定的标识去缓存池中取得对应的cell然后修改cell内容即可。&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark返回每行的单元格
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//NSIndexPath是一个对象，记录了组和行信息
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成单元格(组：%i,行%i)"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,indexPath.section,indexPath.row);
    KCContactGroup *group=_contacts[indexPath.section];
    KCContact *contact=group.contacts[indexPath.row];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//由于此方法调用十分频繁，cell的标示声明成静态变量有利于性能优化
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;static &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSString *cellIdentifier=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"UITableViewCellIdentifierKey1"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//首先根据标识去缓存池取
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCell *cell=[tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//如果缓存池没有到则重新创建并放到缓存池中
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(!cell){
        cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:cellIdentifier];
    }
    
    cell.textLabel.text=[contact getName];
    cell.detailTextLabel.text=contact.phoneNumber;
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"cell:%@"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,cell);
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;cell;
}&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;上面的代码中已经打印了cell的地址，如果大家运行测试上下滚动UITableView会发现滚动时创建的cell地址是初始化时已经创建的。&lt;/p&gt;
&lt;p&gt;这里再次给大家强调两点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)&lt;/strong&gt;方法调用很频繁，无论是初始化、上下滚动、刷新都会调用此方法，所有在这里执行的操作一定要注意性能； 
&lt;li&gt;可重用标识可以有多个，如果在UITableView中有多类结构不同的Cell，可以通过这个标识进行缓存和重新；&lt;/li&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;h1 id="uiTableViewCell"&gt;UITableViewCell&lt;/h1&gt;
&lt;h2&gt;1.自带的UITableViewCell&lt;/h2&gt;
&lt;p&gt;UITableViewCell是构建一个UITableView的基础，在UITableViewCell内部有一个UIView控件作为其他内容的容器，它上面有一个UIImageView和两个UILabel，通过UITableViewCellStyle属性可以对其样式进行控制。其结构如下：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232318499561488.png"&gt;&lt;img title="UITableViewCellStuct" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewCellStuct" src="http://images.cnitblog.com/blog/62046/201408/232318511596189.png" width="489" height="165"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;有时候我们会发现很多UITableViewCell右侧可以显示不同的图标，在iOS中称之为访问器，点击可以触发不同的事件，例如设置功能：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232318514564746.png"&gt;&lt;img title="UITableViewCellAccesoryType" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewCellAccesoryType" src="http://images.cnitblog.com/blog/62046/201408/232318518789574.png" width="270" height="480"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;要设置这些图标只需要设置UITableViewCell的accesoryType属性，这是一个枚举类型具体含义如下：&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;typedef &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NS_ENUM(NSInteger, UITableViewCellAccessoryType) {
    UITableViewCellAccessoryNone,                   &lt;/span&gt;&lt;span style="background: white; color: green"&gt;// 不显示任何图标
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellAccessoryDisclosureIndicator,    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;// 跳转指示图标
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellAccessoryDetailDisclosureButton, &lt;/span&gt;&lt;span style="background: white; color: green"&gt;// 内容详情图标和跳转指示图标
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellAccessoryCheckmark,              &lt;/span&gt;&lt;span style="background: white; color: green"&gt;// 勾选图标
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellAccessoryDetailButton NS_ENUM_AVAILABLE_IOS(7_0) &lt;/span&gt;&lt;span style="background: white; color: green"&gt;// 内容详情图标
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;};&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;例如在最近通话中我们通常设置为详情图标，点击可以查看联系人详情：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232318522217847.png"&gt;&lt;img title="UITableViewCellAccessoryTypeDetaiButtonl" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewCellAccessoryTypeDetaiButtonl" src="http://images.cnitblog.com/blog/62046/201408/232318525494648.png" width="320" height="591"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;很明显iOS设置中第一个accessoryType不在枚举之列，右侧的访问器类型是UISwitch控件，那么如何显示自定义的访问器呢？其实只要设置UITableViewCell的accessoryView即可，它支持任何UIView控件。假设我们在通讯录每组第一行放一个UISwitch，同时切换时可以输出对应信息：&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCMainViewController.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCMainViewController.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContact.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContactGroup.h"

&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCMainViewController ()&amp;lt;UITableViewDataSource,UITableViewDelegate,UIAlertViewDelegate&amp;gt;{
    UITableView *_tableView;
    NSMutableArray *_contacts;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//联系人模型
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSIndexPath *_selectedIndexPath;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//当前选中的组和行
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;}

@end

@implementation KCMainViewController

- (&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)viewDidLoad {
    [super viewDidLoad];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//初始化数据
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self initData];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//创建一个分组样式的UITableView
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView=[[UITableView alloc]initWithFrame:self.view.bounds style:UITableViewStyleGrouped];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置数据源，注意必须实现对应的UITableViewDataSource协议
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView.dataSource=self;
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置代理
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView.&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;delegate&lt;/span&gt;&lt;span style="background: white; color: black"&gt;=self;
    
    [self.view addSubview:_tableView];
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 加载数据
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)initData{
    _contacts=[[NSMutableArray alloc]init];
    
    KCContact *contact1=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kenshin" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131234"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact2=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Tom" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131237"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group1=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact1,contact2, nil]];
    [_contacts addObject:group1];
    

    
    KCContact *contact3=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Terry" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131238"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact4=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Jack" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131239"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact5=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rose" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131240"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group2=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact3,contact4,contact5, nil]];
    [_contacts addObject:group2];
    
    
    
    KCContact *contact6=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kaoru" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131235"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact7=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rosa" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131236"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];

    KCContactGroup *group3=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact6,contact7, nil]];
    [_contacts addObject:group3];
    
    
    KCContact *contact8=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Stephone" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131241"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact9=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lucy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131242"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact10=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131243"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact11=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Emily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131244"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact12=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Andy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131245"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group4=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact8,contact9,contact10,contact11,contact12, nil]];
    [_contacts addObject:group4];
    
    
    KCContact *contact13=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131246"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact14=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Vivan" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131247"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact15=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joyse" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131248"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group5=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact13,contact14,contact15, nil]];
    [_contacts addObject:group5];

}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 数据源方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回分组数
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"计算分组数"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;);
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_contacts.count;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组行数
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"计算每组(组%i)行数"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,section);
    KCContactGroup *group1=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group1.contacts.count;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark返回每行的单元格
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//NSIndexPath是一个对象，记录了组和行信息
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成单元格(组：%i,行%i)"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,indexPath.section,indexPath.row);
    KCContactGroup *group=_contacts[indexPath.section];
    KCContact *contact=group.contacts[indexPath.row];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//由于此方法调用十分频繁，cell的标示声明成静态变量有利于性能优化
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;static &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSString *cellIdentifier=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"UITableViewCellIdentifierKey1"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;static &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSString *cellIdentifierForFirstRow=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"UITableViewCellIdentifierKeyWithSwitch"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//首先根据标示去缓存池取
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCell *cell;
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(indexPath.row==0) {
        cell=[tableView dequeueReusableCellWithIdentifier:cellIdentifierForFirstRow];
    }&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;else&lt;/span&gt;&lt;span style="background: white; color: black"&gt;{
        cell=[tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    }
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//如果缓存池没有取到则重新创建并放到缓存池中
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(!cell){
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(indexPath.row==0) {
            cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:cellIdentifierForFirstRow];
            UISwitch *sw=[[UISwitch alloc]init];
            [sw addTarget:self action:@selector(switchValueChange:) forControlEvents:UIControlEventValueChanged];
            cell.accessoryView=sw;

        }&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;else&lt;/span&gt;&lt;span style="background: white; color: black"&gt;{
            cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:cellIdentifier];
            cell.accessoryType=UITableViewCellAccessoryDetailButton;
        }
    }
    
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(indexPath.row==0){
        ((UISwitch *)cell.accessoryView).tag=indexPath.section;
    }
    
    cell.textLabel.text=[contact getName];
    cell.detailTextLabel.text=contact.phoneNumber;
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"cell:%@"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,cell);
    
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;cell;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组头标题名称
-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成组（组%i）名称"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,section);
    KCContactGroup *group=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group.name;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组尾部说明
-(NSString *)tableView:(UITableView *)tableView titleForFooterInSection:(NSInteger)section{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成尾部（组%i）详情"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,section);
    KCContactGroup *group=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group.detail;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组标题索引
-(NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"生成组索引"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;);
    NSMutableArray *indexs=[[NSMutableArray alloc]init];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;for&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(KCContactGroup *group in _contacts){
        [indexs addObject:group.name];
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;indexs;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 代理方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置分组标题内容高度
-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(section==0){
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;50;
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;40;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置每行高度（每行高度可以不一样）
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;45;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置尾部说明内容高度
-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;40;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 点击行
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    _selectedIndexPath=indexPath;
    KCContactGroup *group=_contacts[indexPath.section];
    KCContact *contact=group.contacts[indexPath.row];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//创建弹出窗口
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"System Info" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;message:[contact getName] &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;delegate&lt;/span&gt;&lt;span style="background: white; color: black"&gt;:self cancelButtonTitle:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cancel" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;otherButtonTitles:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"OK"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;, nil];
    alert.alertViewStyle=UIAlertViewStylePlainTextInput; &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置窗口内容样式
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITextField *textField= [alert textFieldAtIndex:0]; &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//取得文本框
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;textField.text=contact.phoneNumber; &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置文本框内容
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[alert show]; &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//显示窗口
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 窗口的代理方法，用户保存数据
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//当点击了第二个按钮（OK）
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(buttonIndex==1) {
        UITextField *textField= [alertView textFieldAtIndex:0];
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//修改模型数据
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCContactGroup *group=_contacts[_selectedIndexPath.section];
        KCContact *contact=group.contacts[_selectedIndexPath.row];
        contact.phoneNumber=textField.text;
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//刷新表格
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSArray *indexPaths=@[_selectedIndexPath];&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//需要局部刷新的单元格的组、行
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[_tableView reloadRowsAtIndexPaths:indexPaths withRowAnimation:UITableViewRowAnimationLeft];&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//后面的参数代码更新时的动画
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;}
}

&lt;/span&gt;&lt;span style="background: white; color: green"&gt;
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 重写状态样式方法
-(UIStatusBarStyle)preferredStatusBarStyle{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UIStatusBarStyleLightContent;
}


&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 切换开关转化事件
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)switchValueChange:(UISwitch *)sw{
    NSLog(@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"section:%i,switch:%i"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,sw.tag, sw.on);
}
@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;最终运行效果：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232318528311733.gif"&gt;&lt;img title="Run" style="display: inline" alt="Run" src="http://images.cnitblog.com/blog/62046/201408/232318569404922.gif" width="320" height="588"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于此时我们需要两种UITableViewCell样式，考虑到性能我们需要在缓存池缓存两种Cell。 
&lt;li&gt;UISwitch继承于UIControl而不是UIView（当然UIControl最终也是继承于UIView）,继承于UIControl的控件使用addTarget添加对应事件而不是代理，同时有“是否可用”、“是否高亮”、“是否选中”等属性； 
&lt;li&gt;上面代码中如果有些UITableViewCell的UISwitch设置为on当其他控件重用时状态也是on，解决这个问题可以在模型中设置对应的属性记录其状态，在生成cell时设置当前状态（为了尽可能简化上面的代码这里就不再修复这个问题）；&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;h2&gt;2.自定义UITableViewCell&lt;/h2&gt;
&lt;p&gt;虽然系统自带的UITableViewCell已经够强大了，但是很多时候这并不能满足我们的需求。例如新浪微博的Cell就没有那么简单：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319004409524.png"&gt;&lt;img title="UITableViewCell" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewCell" src="http://images.cnitblog.com/blog/62046/201408/232319008151340.png" width="270" height="480"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;没错，这个界面布局也是UITableView实现的，其中的内容就是UITableViewCell，只是这个UITableViewCell是用户自定义实现的。当然要实现上面的UITableViewCell三言两语我们是说不完的，这里我们实现一个简化版本，界面原型如下：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319010811653.png"&gt;&lt;img title="UITableViewCellPrototypeDesign" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewCellPrototypeDesign" src="http://images.cnitblog.com/blog/62046/201408/232319013315196.png" width="341" height="157"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;我们对具体控件进行拆分：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319015818739.png"&gt;&lt;img title="UITableViewCellPrototypeDesign2" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewCellPrototypeDesign2" src="http://images.cnitblog.com/blog/62046/201408/232319018156511.png" width="341" height="157"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;在这个界面中有2个UIImageView控件和4个UILabel，整个界面显示效果类似于新浪微博的消息内容界面，但是又在新浪微博基础上进行了精简以至于利用现有知识能够顺利开发出来。&lt;/p&gt;
&lt;p&gt;在前面的内容中我们的数据都是手动构建的，在实际开发中自然不会这么做，这里我们不妨将微博数据存储到plist文件中然后从plist文件读取数据构建模型对象（实际开发微博当然需要进行网络数据请求，这里只是进行模拟就不再演示网络请求的内容）。假设plist文件内容如下：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319021599082.png"&gt;&lt;img title="StatusInfoPlist" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="StatusInfoPlist" src="http://images.cnitblog.com/blog/62046/201408/232319027213656.png" width="800" height="435"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;接下来就定义一个KCStatusTableViewCell实现UITableViewCell，一般实现自定义UITableViewCell需要分为两步：第一初始化控件；第二设置数据，重新设置控件frame。原因就是自定义Cell一般无法固定高度，很多时候高度需要随着内容改变。此外由于在单元格内部是无法控制单元格高度的，因此一般会定义一个高度属性用于在UITableView的代理事件中设置每个单元格高度。&lt;/p&gt;
&lt;p&gt;1.首先看一下微博模型KCStatus,这个模型主要的方法就是根据plist字典内容生成微博对象:&lt;/p&gt;
&lt;p&gt;KCStatus.h&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCStatus.h
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;&amp;lt;Foundation/Foundation.h&amp;gt;

&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCStatus : NSObject

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 属性
@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,assign) &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;long long &lt;/span&gt;&lt;span style="background: white; color: black"&gt;Id;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//微博id
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,copy) NSString *profileImageUrl;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//头像
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,copy) NSString *userName;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//发送用户
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,assign) NSString *mbtype;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//会员类型
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,copy) NSString *createdAt;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//创建时间
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,copy) NSString *source;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设备来源
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,copy) NSString *text;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//微博内容



&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 根据字典初始化微博对象
-(KCStatus *)initWithDictionary:(NSDictionary *)dic;

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 初始化微博对象（静态方法）
+(KCStatus *)statusWithDictionary:(NSDictionary *)dic;
@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;KCStatus.m&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCStatus.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCStatus.h"

&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@implementation KCStatus

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 根据字典初始化微博对象
-(KCStatus *)initWithDictionary:(NSDictionary *)dic{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(self=[super init]){
        self.Id=[dic[@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Id"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;] longLongValue];
        self.profileImageUrl=dic[@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"profileImageUrl"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
        self.userName=dic[@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"userName"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
        self.mbtype=dic[@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"mbtype"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
        self.createdAt=dic[@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"createdAt"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
        self.source=dic[@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"source"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
        self.text=dic[@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"text"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;self;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 初始化微博对象（静态方法）
+(KCStatus *)statusWithDictionary:(NSDictionary *)dic{
    KCStatus *status=[[KCStatus alloc]initWithDictionary:dic];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;status;
}

-(NSString *)source{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[NSString stringWithFormat:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"来自 &lt;a href="mailto:%@&amp;quot;,_source];}@end"&gt;%@"&lt;/a&gt;&lt;/span&gt;&lt;span style="background: white; color: black"&gt;,_source];
}
@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;2.然后看一下自定义的Cell&lt;/p&gt;
&lt;p&gt;KCStatusTableViewCell.h&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCStatusTableViewCell.h
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;&amp;lt;UIKit/UIKit.h&amp;gt;
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;class &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCStatus;

@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCStatusTableViewCell : UITableViewCell

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 微博对象
@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(nonatomic,strong) KCStatus *status;

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 单元格高度
@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;property &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(assign,nonatomic) CGFloat height;

@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;KCStatusTableViewCell.m&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCStatusTableViewCell.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCStatusTableViewCell.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCStatus.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCColor(r,g,b) [UIColor colorWithHue:r/255.0 saturation:g/255.0 brightness:b/255.0 alpha:1] &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//颜色宏定义
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusTableViewCellControlSpacing 10 &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//控件间距
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusTableViewCellBackgroundColor KCColor(251,251,251)
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusGrayColor KCColor(50,50,50)
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusLightGrayColor KCColor(120,120,120)

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusTableViewCellAvatarWidth 40 &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//头像宽度
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusTableViewCellAvatarHeight kStatusTableViewCellAvatarWidth
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusTableViewCellUserNameFontSize 14
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusTableViewCellMbTypeWidth 13 &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//会员图标宽度
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusTableViewCellMbTypeHeight kStatusTableViewCellMbTypeWidth
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusTableViewCellCreateAtFontSize 12
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusTableViewCellSourceFontSize 12
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kStatusTableViewCellTextFontSize 14


@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCStatusTableViewCell(){
    UIImageView *_avatar;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//头像
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UIImageView *_mbType;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//会员类型
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UILabel *_userName;
    UILabel *_createAt;
    UILabel *_source;
    UILabel *_text;
}

@end

@implementation KCStatusTableViewCell

- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier {
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(self) {
        [self initSubView];
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;self;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 初始化视图
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)initSubView{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//头像控件
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_avatar=[[UIImageView alloc]init];
    [self addSubview:_avatar];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//用户名
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_userName=[[UILabel alloc]init];
    _userName.textColor=kStatusGrayColor;
    _userName.font=[UIFont systemFontOfSize:kStatusTableViewCellUserNameFontSize];
    [self addSubview:_userName];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//会员类型
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_mbType=[[UIImageView alloc]init];
    [self addSubview:_mbType];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//日期
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_createAt=[[UILabel alloc]init];
    _createAt.textColor=kStatusLightGrayColor;
    _createAt.font=[UIFont systemFontOfSize:kStatusTableViewCellCreateAtFontSize];
    [self addSubview:_createAt];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设备
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_source=[[UILabel alloc]init];
    _source.textColor=kStatusLightGrayColor;
    _source.font=[UIFont systemFontOfSize:kStatusTableViewCellSourceFontSize];
    [self addSubview:_source];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//内容
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_text=[[UILabel alloc]init];
    _text.textColor=kStatusGrayColor;
    _text.font=[UIFont systemFontOfSize:kStatusTableViewCellTextFontSize];
    _text.numberOfLines=0;
&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//    _text.lineBreakMode=NSLineBreakByWordWrapping;
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self addSubview:_text];
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置微博
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)setStatus:(KCStatus *)status{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置头像大小和位置
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;CGFloat avatarX=10,avatarY=10;
    CGRect avatarRect=CGRectMake(avatarX, avatarY, kStatusTableViewCellAvatarWidth, kStatusTableViewCellAvatarHeight);
    _avatar.image=[UIImage imageNamed:status.profileImageUrl];
    _avatar.frame=avatarRect;
    
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置会员图标大小和位置
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;CGFloat userNameX= CGRectGetMaxX(_avatar.frame)+kStatusTableViewCellControlSpacing ;
    CGFloat userNameY=avatarY;
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//根据文本内容取得文本占用空间大小
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;CGSize userNameSize=[status.userName sizeWithAttributes:@{NSFontAttributeName: [UIFont systemFontOfSize:kStatusTableViewCellUserNameFontSize]}];
    CGRect userNameRect=CGRectMake(userNameX, userNameY, userNameSize.width,userNameSize.height);
    _userName.text=status.userName;
    _userName.frame=userNameRect;
    
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置会员图标大小和位置
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;CGFloat mbTypeX=CGRectGetMaxX(_userName.frame)+kStatusTableViewCellControlSpacing;
    CGFloat mbTypeY=avatarY;
    CGRect mbTypeRect=CGRectMake(mbTypeX, mbTypeY, kStatusTableViewCellMbTypeWidth, kStatusTableViewCellMbTypeHeight);
    _mbType.image=[UIImage imageNamed:status.mbtype];
    _mbType.frame=mbTypeRect;
    
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置发布日期大小和位置
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;CGSize createAtSize=[status.createdAt sizeWithAttributes:@{NSFontAttributeName:[UIFont systemFontOfSize:kStatusTableViewCellCreateAtFontSize]}];
    CGFloat createAtX=userNameX;
    CGFloat createAtY=CGRectGetMaxY(_avatar.frame)-createAtSize.height;
    CGRect createAtRect=CGRectMake(createAtX, createAtY, createAtSize.width, createAtSize.height);
    _createAt.text=status.createdAt;
    _createAt.frame=createAtRect;
    
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置设备信息大小和位置
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;CGSize sourceSize=[status.source sizeWithAttributes:@{NSFontAttributeName:[UIFont systemFontOfSize:kStatusTableViewCellSourceFontSize]}];
    CGFloat sourceX=CGRectGetMaxX(_createAt.frame)+kStatusTableViewCellControlSpacing;
    CGFloat sourceY=createAtY;
    CGRect sourceRect=CGRectMake(sourceX, sourceY, sourceSize.width,sourceSize.height);
    _source.text=status.source;
    _source.frame=sourceRect;
    
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置微博内容大小和位置
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;CGFloat textX=avatarX;
    CGFloat textY=CGRectGetMaxY(_avatar.frame)+kStatusTableViewCellControlSpacing;
    CGFloat textWidth=self.frame.size.width-kStatusTableViewCellControlSpacing*2;
    CGSize textSize=[status.text boundingRectWithSize:CGSizeMake(textWidth, MAXFLOAT) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName: [UIFont systemFontOfSize:kStatusTableViewCellTextFontSize]} context:nil].size;
    CGRect textRect=CGRectMake(textX, textY, textSize.width, textSize.height);
    _text.text=status.text;
    _text.frame=textRect;
    
    _height=CGRectGetMaxY(_text.frame)+kStatusTableViewCellControlSpacing;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 重写选择事件，取消选中
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)setSelected:(BOOL)selected animated:(BOOL)animated{
    
}
@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;这是我们自定义Cell这个例子的核心，自定义Cell分为两个步骤：首先要进行各种控件的初始化工作，这个过程中只要将控件放到Cell的View中同时设置控件显示内容的格式（字体大小、颜色等）即可；然后在数据对象设置方法中进行各个控件的布局（大小、位置）。在代码中有几点需要重点提示大家：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于单行文本数据的显示调用&lt;strong&gt;+ (UIFont *)systemFontOfSize:(CGFloat)fontSize;&lt;/strong&gt;方法来得到文本宽度和高度。 
&lt;li&gt;对于多行文本数据的显示调用&lt;strong&gt;- (CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options attributes:(NSDictionary *)attributes context:(NSStringDrawingContext *)context ;&lt;/strong&gt;方法来得到文本宽度和高度；同时注意在此之前需要设置文本控件的&lt;strong&gt;numberOfLines&lt;/strong&gt;属性为0。 
&lt;li&gt;通常我们会在自定义Cell中设置一个高度属性，用于外界方法调用，因为Cell内部设置Cell的高度是没有用的，UITableViewCell在初始化时会重新设置高度。&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;3.最后我们看一下自定义Cell的使用过程：&lt;/p&gt;
&lt;p&gt;KCStatusViewController.m&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCCutomCellViewController.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCStatusCellViewController.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCStatus.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCStatusTableViewCell.h"

&lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCStatusCellViewController ()&amp;lt;UITableViewDataSource,UITableViewDelegate,UIAlertViewDelegate&amp;gt;{
    UITableView *_tableView;
    NSMutableArray *_status;
    NSMutableArray *_statusCells;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//存储cell，用于计算高度
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;}
@end

@implementation KCStatusCellViewController
- (&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)viewDidLoad {
    [super viewDidLoad];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//初始化数据
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self initData];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//创建一个分组样式的UITableView
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView=[[UITableView alloc]initWithFrame:self.view.bounds style:UITableViewStyleGrouped];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置数据源，注意必须实现对应的UITableViewDataSource协议
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView.dataSource=self;
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置代理
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView.&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;delegate&lt;/span&gt;&lt;span style="background: white; color: black"&gt;=self;
    
    [self.view addSubview:_tableView];
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 加载数据
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)initData{
    NSString *path=[[NSBundle mainBundle] pathForResource:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"StatusInfo" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;ofType:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"plist"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    NSArray *&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;array&lt;/span&gt;&lt;span style="background: white; color: black"&gt;=[NSArray arrayWithContentsOfFile:path];
    _status=[[NSMutableArray alloc]init];
    _statusCells=[[NSMutableArray alloc]init];
    [&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;array &lt;/span&gt;&lt;span style="background: white; color: black"&gt;enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
        [_status addObject:[KCStatus statusWithDictionary:obj]];
        KCStatusTableViewCell *cell=[[KCStatusTableViewCell alloc]init];
        [_statusCells addObject:cell];
    }];
}
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 数据源方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回分组数
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;1;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组行数
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{

    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_status.count;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark返回每行的单元格
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;static &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSString *cellIdentifier=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"UITableViewCellIdentifierKey1"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    KCStatusTableViewCell *cell;
    cell=[tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(!cell){
        cell=[[KCStatusTableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIdentifier];
    }
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//在此设置微博，以便重新布局
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCStatus *status=_status[indexPath.row];
    cell.status=status;
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;cell;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 代理方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 重新设置单元格高度
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//KCStatusTableViewCell *cell=[tableView cellForRowAtIndexPath:indexPath];
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCStatusTableViewCell *cell= _statusCells[indexPath.row];
    cell.status=_status[indexPath.row];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;cell.height;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 重写状态样式方法
-(UIStatusBarStyle)preferredStatusBarStyle{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UIStatusBarStyleLightContent;
}
@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;这个类中需要重点强调一下：Cell的高度需要重新设置（前面说过无论Cell内部设置多高都没有用，需要重新设置），这里采用的方法是首先创建对应的Cell，然后在&lt;strong&gt;- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath;&lt;/strong&gt;方法中设置微博数据计算高度通知UITableView。&lt;/p&gt;
&lt;p&gt;最后我们看一下运行的效果：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319032842527.gif"&gt;&lt;img title="RunEffect2" style="display: inline" alt="RunEffect2" src="http://images.cnitblog.com/blog/62046/201408/232319139402849.gif" width="320" height="588"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h1 id="operate"&gt;常用操作&lt;/h1&gt;
&lt;p&gt;UITableView和UITableViewCell提供了强大的操作功能，这一节中会重点讨论删除、增加、排序等操作。为了方便演示我们还是在之前的通讯录的基础上演示，在此之前先来给视图控制器添加一个工具条,在工具条左侧放一个删除按钮，右侧放一个添加按钮：&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 添加工具栏
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)addToolbar{
    CGRect frame=self.view.frame;
    _toolbar=[[UIToolbar alloc]initWithFrame:CGRectMake(0, 0, frame.size.width, kContactToolbarHeight)];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//    _toolbar.backgroundColor=[UIColor colorWithHue:246/255.0 saturation:246/255.0 brightness:246/255.0 alpha:1];
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self.view addSubview:_toolbar];
    UIBarButtonItem *removeButton=[[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemTrash target:self action:@selector(remove)];
    UIBarButtonItem *flexibleButton=[[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];
    UIBarButtonItem *addButton=[[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemAdd target:self action:@selector(add)];
    NSArray *buttonArray=[NSArray arrayWithObjects:removeButton,flexibleButton,addButton, nil];
    _toolbar.items=buttonArray;
}&lt;/span&gt;&lt;/pre&gt;
&lt;h2&gt;1.删除&lt;/h2&gt;
&lt;p&gt;在UITableView中无论是删除操作还是添加操作都是通过修改UITableView的编辑状态来改变的（除非你不用UITableView自带的删除功能）。在删除按钮中我们设置UITableView的编辑状态：&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 删除
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)remove{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//直接通过下面的方法设置编辑状态没有动画
    //_tableView.editing=!_tableView.isEditing;
    
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[_tableView setEditing:!_tableView.isEditing animated:&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;true&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
}&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;点击删除按钮会在Cell的左侧显示删除按钮：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319225653584.jpg"&gt;&lt;img title="UITableViewCellRemoveStatus" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewCellRemoveStatus" src="http://images.cnitblog.com/blog/62046/201408/232319232998442.jpg" width="320" height="590"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;此时点击左侧删除图标右侧出现删除：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319237688285.jpg"&gt;&lt;img title="UITableViewCellDeleteStatus2" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="UITableViewCellDeleteStatus2" src="http://images.cnitblog.com/blog/62046/201408/232319241747343.jpg" width="320" height="590"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;用过iOS的朋友都知道，一般这种Cell如果向左滑动右侧就会出现删除按钮直接删除就可以了。其实实现这个功能只要实现代理&lt;strong&gt;-(void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath;&lt;/strong&gt;方法,只要实现了此方法向左滑动就会显示删除按钮。只要点击删除按钮这个方法就会调用，但是需要注意的是无论是删除还是添加都是执行这个方法，只是第二个参数类型不同。下面看一下具体的删除实现：&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 删除操作
&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//实现了此方法向左滑动就会显示删除按钮
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath{
    KCContactGroup *group =_contacts[indexPath.section];
    KCContact *contact=group.contacts[indexPath.row];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(editingStyle==UITableViewCellEditingStyleDelete) {
        [group.contacts removeObject:contact];
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//考虑到性能这里不建议使用reloadData
        //[tableView reloadData];
        //使用下面的方法既可以局部刷新又有动画效果
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationBottom];
        
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//如果当前组中没有数据则移除组刷新整个表格
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(group.contacts.count==0) {
            [_contacts removeObject:group];
            [tableView reloadData];
        }
    }
}&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;从这段代码我们再次看到了MVC的思想，要修改UI先修改数据。而且我们看到了另一个刷新表格的方法&lt;strong&gt;- (void)deleteRowsAtIndexPaths:(NSArray *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;,&lt;/strong&gt;使用这个方法可以再删除之后刷新对应的单元格。效果如下：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319245189914.gif"&gt;&lt;img title="UITableViewCellDelete" style="display: inline" alt="UITableViewCellDelete" src="http://images.cnitblog.com/blog/62046/201408/232319249713986.gif" width="320" height="588"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;2.添加&lt;/h2&gt;
&lt;p&gt;添加和删除操作都是设置UITableView的编辑状态，具体是添加还是删除需要根据代理方法&lt;strong&gt;-(UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath;&lt;/strong&gt;的返回值来确定。因此这里我们定义一个变量来记录点击了哪个按钮，根据点击按钮的不同在这个方法中返回不同的值。&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 取得当前操作状态，根据不同的状态左侧出现不同的操作按钮
-(UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(_isInsert) {
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellEditingStyleInsert;
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellEditingStyleDelete;
}&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 编辑操作（删除或添加）
&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//实现了此方法向左滑动就会显示删除（或添加）图标
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath{
    KCContactGroup *group =_contacts[indexPath.section];
    KCContact *contact=group.contacts[indexPath.row];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(editingStyle==UITableViewCellEditingStyleDelete) {
        [group.contacts removeObject:contact];
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//考虑到性能这里不建议使用reloadData
        //[tableView reloadData];
        //使用下面的方法既可以局部刷新又有动画效果
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationBottom];
        
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//如果当前组中没有数据则移除组刷新整个表格
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(group.contacts.count==0) {
            [_contacts removeObject:group];
            [tableView reloadData];
        }
    }&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;else if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(editingStyle==UITableViewCellEditingStyleInsert){
        KCContact *newContact=[[KCContact alloc]init];
        newContact.firstName=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"first"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
        newContact.lastName=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"last"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
        newContact.phoneNumber=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"12345678901"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
        [group.contacts insertObject:newContact atIndex:indexPath.row];
        [tableView insertRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationBottom];&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//注意这里没有使用reladData刷新
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;}
}&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;运行效果：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319258154644.gif"&gt;&lt;img title="UITableViewCellInsert" style="display: inline" alt="UITableViewCellInsert" src="http://images.cnitblog.com/blog/62046/201408/232319262062229.gif" width="320" height="587"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;3.排序&lt;/h2&gt;
&lt;p&gt;只要实现&lt;strong&gt;-(void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath *)destinationIndexPath;&lt;/strong&gt;代理方法当UITableView处于编辑状态时就可以排序。&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 排序
&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//只要实现这个方法在编辑状态右侧就有排序图标
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath *)destinationIndexPath{
    KCContactGroup *sourceGroup =_contacts[sourceIndexPath.section];
    KCContact *sourceContact=sourceGroup.contacts[sourceIndexPath.row];
    KCContactGroup *destinationGroup =_contacts[destinationIndexPath.section];
    
    [sourceGroup.contacts removeObject:sourceContact];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(sourceGroup.contacts.count==0){
        [_contacts removeObject:sourceGroup];
        [tableView reloadData];
    }
    
    [destinationGroup.contacts insertObject:sourceContact atIndex:destinationIndexPath.row];
    
}&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;运行效果：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319268933073.gif"&gt;&lt;img title="UITableViewCellMove" style="display: inline" alt="UITableViewCellMove" src="http://images.cnitblog.com/blog/62046/201408/232319290655703.gif" width="320" height="587"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;最后给大家附上上面几种操作的完整代码：&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCContactViewController.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContactViewController.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContact.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContactGroup.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kContactToolbarHeight 44

@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCContactViewController ()&amp;lt;UITableViewDataSource,UITableViewDelegate,UIAlertViewDelegate&amp;gt;{
    UITableView *_tableView;
    UIToolbar *_toolbar;
    NSMutableArray *_contacts;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//联系人模型
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSIndexPath *_selectedIndexPath;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//当前选中的组和行
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;BOOL _isInsert;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//记录是点击了插入还是删除按钮
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;}

@end

@implementation KCContactViewController

- (&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)viewDidLoad {
    [super viewDidLoad];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//初始化数据
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self initData];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//创建一个分组样式的UITableView
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView=[[UITableView alloc]initWithFrame:self.view.bounds style:UITableViewStyleGrouped];
    _tableView.contentInset=UIEdgeInsetsMake(kContactToolbarHeight, 0, 0, 0);
    [self.view addSubview:_tableView];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//添加工具栏
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self addToolbar];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置数据源，注意必须实现对应的UITableViewDataSource协议
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView.dataSource=self;
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//设置代理
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_tableView.&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;delegate&lt;/span&gt;&lt;span style="background: white; color: black"&gt;=self;
    
    
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 加载数据
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)initData{
    _contacts=[[NSMutableArray alloc]init];
    
    KCContact *contact1=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kenshin" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131234"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact2=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Tom" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131237"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group1=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact1,contact2, nil]];
    [_contacts addObject:group1];
    
    
    
    KCContact *contact3=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Terry" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131238"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact4=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Jack" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131239"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact5=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rose" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131240"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group2=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact3,contact4,contact5, nil]];
    [_contacts addObject:group2];
    
    
    
    KCContact *contact6=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kaoru" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131235"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact7=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rosa" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131236"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    
    KCContactGroup *group3=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact6,contact7, nil]];
    [_contacts addObject:group3];
    
    
    KCContact *contact8=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Stephone" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131241"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact9=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lucy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131242"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact10=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131243"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact11=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Emily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131244"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact12=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Andy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131245"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group4=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact8,contact9,contact10,contact11,contact12, nil]];
    [_contacts addObject:group4];
    
    
    KCContact *contact13=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131246"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact14=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Vivan" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131247"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact15=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joyse" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131248"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group5=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact13,contact14,contact15, nil]];
    [_contacts addObject:group5];
    
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 添加工具栏
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)addToolbar{
    CGRect frame=self.view.frame;
    _toolbar=[[UIToolbar alloc]initWithFrame:CGRectMake(0, 0, frame.size.width, kContactToolbarHeight)];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//    _toolbar.backgroundColor=[UIColor colorWithHue:246/255.0 saturation:246/255.0 brightness:246/255.0 alpha:1];
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self.view addSubview:_toolbar];
    UIBarButtonItem *removeButton=[[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemTrash target:self action:@selector(remove)];
    UIBarButtonItem *flexibleButton=[[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];
    UIBarButtonItem *addButton=[[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemAdd target:self action:@selector(add)];
    NSArray *buttonArray=[NSArray arrayWithObjects:removeButton,flexibleButton,addButton, nil];
    _toolbar.items=buttonArray;
}
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 删除
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)remove{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//直接通过下面的方法设置编辑状态没有动画
    //_tableView.editing=!_tableView.isEditing;
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_isInsert=&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;false&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    [_tableView setEditing:!_tableView.isEditing animated:&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;true&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
}
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 添加
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)add{
    _isInsert=&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;true&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    [_tableView setEditing:!_tableView.isEditing animated:&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;true&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 数据源方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回分组数
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_contacts.count;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 返回每组行数
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    KCContactGroup *group1=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group1.contacts.count;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark返回每行的单元格
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//NSIndexPath是一个对象，记录了组和行信息
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCContactGroup *group=_contacts[indexPath.section];
    KCContact *contact=group.contacts[indexPath.row];

    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;static &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSString *cellIdentifier=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"UITableViewCellIdentifierKey1"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;

    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//首先根据标识去缓存池取
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCell *cell=[tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//如果缓存池没有取到则重新创建并放到缓存池中
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(!cell){
        cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:cellIdentifier];
    }
    
    cell.textLabel.text=[contact getName];
    cell.detailTextLabel.text=contact.phoneNumber;
    
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;cell;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 代理方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置分组标题
-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section{
    KCContactGroup *group=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group.name;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 编辑操作（删除或添加）
&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//实现了此方法向左滑动就会显示删除（或添加）图标
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath{
    KCContactGroup *group =_contacts[indexPath.section];
    KCContact *contact=group.contacts[indexPath.row];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(editingStyle==UITableViewCellEditingStyleDelete) {
        [group.contacts removeObject:contact];
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//考虑到性能这里不建议使用reloadData
        //[tableView reloadData];
        //使用下面的方法既可以局部刷新又有动画效果
        &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationBottom];
        
        &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//如果当前组中没有数据则移除组刷新整个表格
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(group.contacts.count==0) {
            [_contacts removeObject:group];
            [tableView reloadData];
        }
    }&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;else if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(editingStyle==UITableViewCellEditingStyleInsert){
        KCContact *newContact=[[KCContact alloc]init];
        newContact.firstName=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"first"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
        newContact.lastName=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"last"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
        newContact.phoneNumber=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"12345678901"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
        [group.contacts insertObject:newContact atIndex:indexPath.row];
        [tableView insertRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationBottom];&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//注意这里没有使用reladData刷新
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;}
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 排序
&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//只要实现这个方法在编辑状态右侧就有排序图标
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath *)destinationIndexPath{
    KCContactGroup *sourceGroup =_contacts[sourceIndexPath.section];
    KCContact *sourceContact=sourceGroup.contacts[sourceIndexPath.row];
    KCContactGroup *destinationGroup =_contacts[destinationIndexPath.section];
    
    [sourceGroup.contacts removeObject:sourceContact];
    [destinationGroup.contacts insertObject:sourceContact atIndex:destinationIndexPath.row];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(sourceGroup.contacts.count==0){
        [_contacts removeObject:sourceGroup];
        [tableView reloadData];
    }
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 取得当前操作状态，根据不同的状态左侧出现不同的操作按钮
-(UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(_isInsert) {
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellEditingStyleInsert;
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCellEditingStyleDelete;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 重写状态样式方法
-(UIStatusBarStyle)preferredStatusBarStyle{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UIStatusBarStyleLightContent;
}

@end&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;通过前面的演示这里简单总结一些UITableView的刷新方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- (void)reloadData;&lt;/strong&gt;刷新整个表格。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- (void)reloadRowsAtIndexPaths:(NSArray *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation NS_AVAILABLE_IOS(3_0);&lt;/strong&gt;刷新指定的分组和行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- (void)reloadSections:(NSIndexSet *)sections withRowAnimation:(UITableViewRowAnimation)animation NS_AVAILABLE_IOS(3_0);&lt;/strong&gt;刷新指定的分组。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- (void)deleteRowsAtIndexPaths:(NSArray *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;&lt;/strong&gt;删除时刷新指定的行数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- (void)insertRowsAtIndexPaths:(NSArray *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;&lt;/strong&gt;添加时刷新指定的行数据。&lt;/p&gt;
&lt;h1 id="uiTableViewController"&gt;UITableViewController &lt;/h1&gt;
&lt;p&gt;很多时候一个UIViewController中只有一个UITableView，因此苹果官方为了方便大家开发直接提供了一个UITableViewController,这个控制器 UITableViewController实现了UITableView数据源和代理协议，内部定义了一个tableView属性供外部访问，同时自动铺满整个屏幕、自动伸缩以方便我们的开发。当然UITableViewController也并不是简单的帮我们定义完UITableView并且设置了数据源、代理而已，它还有其他强大的功能，例如刷新控件、滚动过程中固定分组标题等。&lt;/p&gt;
&lt;p&gt;有时候一个表格中的数据特别多，检索起来就显得麻烦，这个时候可以实现一个搜索功能帮助用户查找数据，其实搜索的原理很简单：修改模型、刷新表格。下面使用UITableViewController简单演示一下这个功能：&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCContactTableViewController.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContactTableViewController.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContact.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContactGroup.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kSearchbarHeight 44

@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCContactTableViewController ()&amp;lt;UISearchBarDelegate&amp;gt;{
    UITableView *_tableView;
    UISearchBar *_searchBar;
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//UISearchDisplayController *_searchDisplayController;
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSMutableArray *_contacts;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//联系人模型
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSMutableArray *_searchContacts;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//符合条件的搜索联系人
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;BOOL _isSearching;
}
@end

@implementation KCContactTableViewController

- (&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)viewDidLoad {
    [super viewDidLoad];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//初始化数据
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self initData];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//添加搜索框
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self addSearchBar];

}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 数据源方法

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(_isSearching) {
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;1;
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_contacts.count;;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(_isSearching) {
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_searchContacts.count;
    }
    KCContactGroup *group1=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group1.contacts.count;
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    KCContact *contact=nil;
    
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(_isSearching) {
        contact=_searchContacts[indexPath.row];
    }&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;else&lt;/span&gt;&lt;span style="background: white; color: black"&gt;{
        KCContactGroup *group=_contacts[indexPath.section];
        contact=group.contacts[indexPath.row];
    }
    
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;static &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSString *cellIdentifier=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"UITableViewCellIdentifierKey1"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//首先根据标识去缓存池取
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCell *cell=[tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//如果缓存池没有取到则重新创建并放到缓存池中
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(!cell){
        cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:cellIdentifier];
    }
    
    cell.textLabel.text=[contact getName];
    cell.detailTextLabel.text=contact.phoneNumber;
    
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;cell;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 代理方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置分组标题
-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section{
    KCContactGroup *group=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group.name;
}


&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 搜索框代理
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark  取消搜索
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)searchBarCancelButtonClicked:(UISearchBar *)searchBar{
    _isSearching=NO;
    _searchBar.text=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;""&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    [self.tableView reloadData];
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 输入搜索关键字
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;([_searchBar.text isEqual:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;""&lt;/span&gt;&lt;span style="background: white; color: black"&gt;]){
        _isSearching=NO;
        [self.tableView reloadData];
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    }
    [self searchDataWithKeyWord:_searchBar.text];
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 点击虚拟键盘上的搜索时
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)searchBarSearchButtonClicked:(UISearchBar *)searchBar{
    
    [self searchDataWithKeyWord:_searchBar.text];
    
    [_searchBar resignFirstResponder];&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//放弃第一响应者对象，关闭虚拟键盘
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;}




&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 重写状态样式方法
-(UIStatusBarStyle)preferredStatusBarStyle{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UIStatusBarStyleLightContent;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 加载数据
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)initData{
    _contacts=[[NSMutableArray alloc]init];
    
    KCContact *contact1=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kenshin" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131234"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact2=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Tom" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131237"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group1=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact1,contact2, nil]];
    [_contacts addObject:group1];
    
    
    
    KCContact *contact3=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Terry" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131238"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact4=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Jack" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131239"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact5=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rose" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131240"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group2=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact3,contact4,contact5, nil]];
    [_contacts addObject:group2];
    
    
    
    KCContact *contact6=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kaoru" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131235"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact7=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rosa" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131236"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    
    KCContactGroup *group3=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact6,contact7, nil]];
    [_contacts addObject:group3];
    
    
    KCContact *contact8=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Stephone" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131241"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact9=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lucy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131242"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact10=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131243"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact11=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Emily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131244"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact12=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Andy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131245"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group4=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact8,contact9,contact10,contact11,contact12, nil]];
    [_contacts addObject:group4];
    
    
    KCContact *contact13=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131246"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact14=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Vivan" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131247"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact15=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joyse" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131248"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group5=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact13,contact14,contact15, nil]];
    [_contacts addObject:group5];
    
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 搜索形成新数据
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)searchDataWithKeyWord:(NSString *)keyWord{
    _isSearching=YES;
    _searchContacts=[NSMutableArray &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;array&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    [_contacts enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
        KCContactGroup *group=obj;
        [group.contacts enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
            KCContact *contact=obj;
            &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;([contact.firstName.uppercaseString containsString:keyWord.uppercaseString]||[contact.lastName.uppercaseString containsString:keyWord.uppercaseString]||[contact.phoneNumber containsString:keyWord]) {
                [_searchContacts addObject:contact];
            }
        }];
    }];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//刷新表格
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self.tableView reloadData];
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 添加搜索栏
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)addSearchBar{
    CGRect searchBarRect=CGRectMake(0, 0, self.view.frame.size.width, kSearchbarHeight);
    _searchBar=[[UISearchBar alloc]initWithFrame:searchBarRect];
    _searchBar.placeholder=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Please input key word..."&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//_searchBar.keyboardType=UIKeyboardTypeAlphabet;//键盘类型
    //_searchBar.autocorrectionType=UITextAutocorrectionTypeNo;//自动纠错类型
    //_searchBar.autocapitalizationType=UITextAutocapitalizationTypeNone;//哪一次shitf被自动按下
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_searchBar.showsCancelButton=YES;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//显示取消按钮
    //添加搜索框到页眉位置
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_searchBar.&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;delegate&lt;/span&gt;&lt;span style="background: white; color: black"&gt;=self;
    self.tableView.tableHeaderView=_searchBar;
}

@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;运行效果：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319311287832.gif"&gt;&lt;img title="UITableViewSearch" style="display: inline" alt="UITableViewSearch" src="http://images.cnitblog.com/blog/62046/201408/232319315181120.gif" width="318" height="588"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;在上面的搜索中除了使用一个_contacts变量去保存联系人数据还专门定义了一个_searchContact变量用于保存搜索的结果。在输入搜索关键字时我们刷新了表格，此时会调用表格的数据源方法，在这个方法中我们根据定义的搜索状态去决定显示原始数据还是搜索结果。&lt;/p&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;我们发现每次搜索完后都需要手动刷新表格来显示搜索结果，而且当没有搜索关键字的时候还需要将当前的tableView重新设置为初始状态。也就是这个过程中我们要用一个tableView显示两种状态的不同数据，自然会提高程序逻辑复杂度。为了简化这个过程，我们可以使用UISearchDisplayController，UISearchDisplayController内部也有一个UITableView类型的对象searchResultsTableView，如果我们设置它的数据源代理为当前控制器，那么它完全可以像UITableView一样加载数据。同时它本身也有搜索监听的方法，我们不必在监听UISearchBar输入内容，直接使用它的方法即可自动刷新其内部表格。为了和前面的方法对比在下面的代码中没有直接删除原来的方式而是注释了对应代码大家可以对照学习：&lt;/p&gt;&lt;pre class="code"&gt;&lt;span style="background: white; color: green"&gt;//
//  KCContactTableViewController.m
//  UITableView
//
//  Created by Kenshin Cui on 14-3-1.
//  Copyright (c) 2014年 Kenshin Cui. All rights reserved.
//

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContactTableViewControllerWithUISearchDisplayController.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContact.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#import &lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"KCContactGroup.h"
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#define &lt;/span&gt;&lt;span style="background: white; color: black"&gt;kSearchbarHeight 44

@&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;interface &lt;/span&gt;&lt;span style="background: white; color: black"&gt;KCContactTableViewControllerWithUISearchDisplayController ()&amp;lt;UISearchBarDelegate,UISearchDisplayDelegate&amp;gt;{
    UITableView *_tableView;
    UISearchBar *_searchBar;
    UISearchDisplayController *_searchDisplayController;
    NSMutableArray *_contacts;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//联系人模型
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSMutableArray *_searchContacts;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//符合条件的搜索联系人
    //BOOL _isSearching;
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;}
@end

@implementation KCContactTableViewControllerWithUISearchDisplayController

- (&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)viewDidLoad {
    [super viewDidLoad];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//初始化数据
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self initData];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//添加搜索框
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;[self addSearchBar];

}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 数据源方法

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//    if (_isSearching) {
//        return 1;
//    }
    //如果当前是UISearchDisplayController内部的tableView则不分组
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(tableView==self.searchDisplayController.searchResultsTableView) {
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;1;
    }
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_contacts.count;;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//    if (_isSearching) {
//        return _searchContacts.count;
//    }
    //如果当前是UISearchDisplayController内部的tableView则使用搜索数据
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(tableView==self.searchDisplayController.searchResultsTableView) {
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_searchContacts.count;
    }
    KCContactGroup *group1=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group1.contacts.count;
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    KCContact *contact=nil;
    
&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//    if (_isSearching) {
//        contact=_searchContacts[indexPath.row];
//    }else{
//        KCContactGroup *group=_contacts[indexPath.section];
//        contact=group.contacts[indexPath.row];
//    }
    //如果当前是UISearchDisplayController内部的tableView则使用搜索数据
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(tableView==self.searchDisplayController.searchResultsTableView) {
        contact=_searchContacts[indexPath.row];
    }&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;else&lt;/span&gt;&lt;span style="background: white; color: black"&gt;{
        KCContactGroup *group=_contacts[indexPath.section];
        contact=group.contacts[indexPath.row];
    }
    
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;static &lt;/span&gt;&lt;span style="background: white; color: black"&gt;NSString *cellIdentifier=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"UITableViewCellIdentifierKey1"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//首先根据标识去缓存池取
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UITableViewCell *cell=[tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//如果缓存池没有取到则重新创建并放到缓存池中
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if&lt;/span&gt;&lt;span style="background: white; color: black"&gt;(!cell){
        cell=[[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:cellIdentifier];
    }
    
    cell.textLabel.text=[contact getName];
    cell.detailTextLabel.text=contact.phoneNumber;
    
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;cell;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 代理方法
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 设置分组标题
-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;(tableView==self.searchDisplayController.searchResultsTableView) {
        &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"搜索结果"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    }
    KCContactGroup *group=_contacts[section];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;group.name;
}
&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 选中之前
-(NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    [_searchBar resignFirstResponder];&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//退出键盘
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;indexPath;
}


&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - 搜索框代理
&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//#pragma mark  取消搜索
//-(void)searchBarCancelButtonClicked:(UISearchBar *)searchBar{
//    //_isSearching=NO;
//    _searchBar.text=@"";
//    //[self.tableView reloadData];
//    [_searchBar resignFirstResponder];
//}
//
//#pragma mark 输入搜索关键字
//-(void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText{
//    if([_searchBar.text isEqual:@""]){
//        //_isSearching=NO;
//        //[self.tableView reloadData];
//        return;
//    }
//    [self searchDataWithKeyWord:_searchBar.text];
//}

//#pragma mark 点击虚拟键盘上的搜索时
//-(void)searchBarSearchButtonClicked:(UISearchBar *)searchBar{
//    
//    [self searchDataWithKeyWord:_searchBar.text];
//    
//    [_searchBar resignFirstResponder];//放弃第一响应者对象，关闭虚拟键盘
//}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark - UISearchDisplayController代理方法
-(BOOL)searchDisplayController:(UISearchDisplayController *)controller shouldReloadTableForSearchString:(NSString *)searchString{
    [self searchDataWithKeyWord:searchString];
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;YES;
}


&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 重写状态样式方法
-(UIStatusBarStyle)preferredStatusBarStyle{
    &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;return &lt;/span&gt;&lt;span style="background: white; color: black"&gt;UIStatusBarStyleLightContent;
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 加载数据
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)initData{
    _contacts=[[NSMutableArray alloc]init];
    
    KCContact *contact1=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kenshin" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131234"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact2=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Cui" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Tom" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131237"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group1=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with C" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact1,contact2, nil]];
    [_contacts addObject:group1];
    
    
    
    KCContact *contact3=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Terry" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131238"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact4=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Jack" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131239"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact5=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lee" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rose" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131240"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group2=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with L" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact3,contact4,contact5, nil]];
    [_contacts addObject:group2];
    
    
    
    KCContact *contact6=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Kaoru" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131235"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact7=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Sun" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Rosa" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131236"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    
    KCContactGroup *group3=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with S" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact6,contact7, nil]];
    [_contacts addObject:group3];
    
    
    KCContact *contact8=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Stephone" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131241"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact9=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lucy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131242"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact10=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Lily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131243"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact11=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Emily" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131244"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact12=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Wang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Andy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131245"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group4=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with W" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact8,contact9,contact10,contact11,contact12, nil]];
    [_contacts addObject:group4];
    
    
    KCContact *contact13=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joy" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131246"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact14=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Vivan" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131247"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContact *contact15=[KCContact initWithFirstName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Zhang" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andLastName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Joyse" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andPhoneNumber:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"18500131248"&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    KCContactGroup *group5=[KCContactGroup initWithName:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andDetail:@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"With names beginning with Z" &lt;/span&gt;&lt;span style="background: white; color: black"&gt;andContacts:[NSMutableArray arrayWithObjects:contact13,contact14,contact15, nil]];
    [_contacts addObject:group5];
    
}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 搜索形成新数据&lt;/span&gt;&lt;span style="background: white; color: green"&gt;
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)searchDataWithKeyWord:(NSString *)keyWord{
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//_isSearching=YES;
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_searchContacts=[NSMutableArray &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;array&lt;/span&gt;&lt;span style="background: white; color: black"&gt;];
    [_contacts enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
        KCContactGroup *group=obj;
        [group.contacts enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
            KCContact *contact=obj;
            &lt;/span&gt;&lt;span style="background: white; color: blue"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black"&gt;([contact.firstName.uppercaseString containsString:keyWord.uppercaseString]||[contact.lastName.uppercaseString containsString:keyWord.uppercaseString]||[contact.phoneNumber containsString:keyWord]) {
                [_searchContacts addObject:contact];
            }
        }];
    }];
    
    &lt;/span&gt;&lt;span style="background: white; color: green"&gt;//刷新表格
    //[self.tableView reloadData];
&lt;/span&gt;&lt;span style="background: white; color: black"&gt;}

&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;#pragma &lt;/span&gt;&lt;span style="background: white; color: black"&gt;mark 添加搜索栏
-(&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;void&lt;/span&gt;&lt;span style="background: white; color: black"&gt;)addSearchBar{
    _searchBar=[[UISearchBar alloc]init];
    [_searchBar sizeToFit];&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//大小自适应容器
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_searchBar.placeholder=@&lt;/span&gt;&lt;span style="background: white; color: #a31515"&gt;"Please input key word..."&lt;/span&gt;&lt;span style="background: white; color: black"&gt;;
    _searchBar.autocapitalizationType=UITextAutocapitalizationTypeNone;
    _searchBar.showsCancelButton=YES;&lt;/span&gt;&lt;span style="background: white; color: green"&gt;//显示取消按钮
    //添加搜索框到页眉位置
    &lt;/span&gt;&lt;span style="background: white; color: black"&gt;_searchBar.&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;delegate&lt;/span&gt;&lt;span style="background: white; color: black"&gt;=self;
    self.tableView.tableHeaderView=_searchBar;

    _searchDisplayController=[[UISearchDisplayController alloc]initWithSearchBar:_searchBar contentsController:self];
    _searchDisplayController.&lt;/span&gt;&lt;span style="background: white; color: blue"&gt;delegate&lt;/span&gt;&lt;span style="background: white; color: black"&gt;=self;
    _searchDisplayController.searchResultsDataSource=self;
    _searchDisplayController.searchResultsDelegate=self;
    [_searchDisplayController setActive:NO animated:YES];

}

@end&lt;/span&gt;&lt;/pre&gt;&lt;a href="http://11011.net/software/vspaste"&gt;&lt;/a&gt;
&lt;p&gt;运行效果：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319322066262.gif"&gt;&lt;img title="UITableViewSearch2" style="display: inline" alt="UITableViewSearch2" src="http://images.cnitblog.com/blog/62046/201408/232319326907577.gif" width="318" height="588"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意如果使用Storyboard或xib方式创建上述代码则无需定义UISearchDisplayController成员变量，因为每个UIViewController中已经有一个searchDisplayController对象。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id="mvc"&gt;MVC模式&lt;/h1&gt;
&lt;p&gt;通过UITableView的学习相信大家对于iOS的MVC已经有一个大致的了解，这里简单的分析一下iOS中MVC模式的设计方式。在iOS中多数数据源视图控件（View）都有一个dataSource属性用于和控制器（Controller）交互，而数据来源我们一般会以数据模型（Model）的形式进行定义,View不直接和模型交互，而是通过Controller间接读取数据。&lt;/p&gt;
&lt;p&gt;就拿前面的联系人应用举例，UITableView作为视图（View）并不能直接访问模型Contact，它要显示联系人信息只能通过控制器（Controller）来提供数据源方法。同样的控制器本身就拥有视图控件，可以操作视图，也就是说视图和控制器之间可以互相访问。而模型既不能访问视图也不能访问控制器。具体依赖关系如下图：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/62046/201408/232319334717450.png"&gt;&lt;img title="MVC" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="MVC" src="http://images.cnitblog.com/blog/62046/201408/232319337686007.png" width="623" height="321"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;div id="MySignature"&gt;&lt;/div&gt;
        &lt;div class="clear"&gt;&lt;/div&gt;
        &lt;div id="blog_post_info_block"&gt;
        &lt;div id="blog_post_info"&gt;
        &lt;/div&gt;
        &lt;div class="clear"&gt;&lt;/div&gt;
        &lt;div id="post_next_prev"&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
    &lt;ul class="postmetadata"&gt;
        &lt;li class="icon_cat" id="BlogPostCategory"&gt;&lt;/li&gt;
        &lt;li class="icon_bullet" id="EntryTag"&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;var allowComments=true,isLogined=false,cb_blogId=79371,cb_entryId=3931948,cb_blogApp=currentBlogApp,cb_blogUserGuid='8c003886-9a30-de11-9510-001cf0cd104b',cb_entryCreatedDate='2014/8/23 23:20:00';loadViewCount(cb_entryId);&lt;/script&gt;
&lt;script type="text/javascript"&gt;
    var m = window.__blog.postRendered;
    if (m) { m(__$("post")); }
&lt;/script&gt;
&lt;script type="text/javascript"&gt;
    var m = window.__blog.postRenderPosts;
    if (m) { m(); }
&lt;/script&gt;
&lt;a name="!comments"&gt;&lt;/a&gt;&lt;div id="blog-comments-placeholder"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var commentManager = new blogCommentManager();commentManager.renderComments(0);&lt;/script&gt;
&lt;div id="comment_form" class="commentform"&gt;
&lt;a name="commentform"&gt;&lt;/a&gt;
&lt;div id="divCommentShow"&gt;&lt;/div&gt;
&lt;div id="comment_nav"&gt;&lt;span id="span_refresh_tips"&gt;&lt;/span&gt;&lt;a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();"&gt;刷新评论&lt;/a&gt;&lt;a href="#" onclick="return RefreshPage();"&gt;刷新页面&lt;/a&gt;&lt;a href="#top"&gt;返回顶部&lt;/a&gt;&lt;/div&gt;
&lt;div id="comment_form_container"&gt;&lt;/div&gt;
&lt;div class="ad_text_commentbox" id="ad_text_under_commentbox"&gt;&lt;/div&gt;
&lt;div id="site_nav_under"&gt;&lt;a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园"&gt;博客园首页&lt;/a&gt;&lt;a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区"&gt;博问&lt;/a&gt;&lt;a href="http://news.cnblogs.com/" target="_blank" title="IT新闻"&gt;新闻&lt;/a&gt;&lt;a href="http://home.cnblogs.com/ing/" target="_blank"&gt;闪存&lt;/a&gt;&lt;a href="http://job.cnblogs.com/" target="_blank"&gt;程序员招聘&lt;/a&gt;&lt;a href="http://kb.cnblogs.com/" target="_blank"&gt;知识库&lt;/a&gt;&lt;/div&gt;
&lt;div id="opt_under_post"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    var enableGoogleAd = canShowAdsense(); var googletag = googletag || {}; googletag.cmd = googletag.cmd || [];
    fixPostBodyFormat();
&lt;/script&gt;
&lt;div id="ad_under_post_holder"&gt;
&lt;script type='text/javascript'&gt;
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        if (enableGoogleAd) {
            var gads = document.createElement('script');
            gads.async = true;
            gads.type = 'text/javascript';
            var useSSL = 'https:' == document.location.protocol;
            gads.src = (useSSL ? 'https:' : 'http:') + '//www.googletagservices.com/tag/js/gpt.js';
            var node = document.getElementsByTagName('script')[0];
            node.parentNode.insertBefore(gads, node);
        }
    })();
&lt;/script&gt;
&lt;script type='text/javascript'&gt;
    try {
        if (enableGoogleAd) {
            googletag.cmd.push(function () {
                googletag.defineSlot('/1090369/cnblogs_blogpost_C1_sitehome', [300, 250], 'div-gpt-ad-1346480159711-0').addService(googletag.pubads());
                googletag.pubads().enableSingleRequest();
                googletag.enableServices();
            });
        };
    } catch (e) { }
&lt;/script&gt;
&lt;div id="google_ad_c1" class="c_ad_block"&gt;
    &lt;div id='div-gpt-ad-1346480159711-0' style='width:300px; height:250px;'&gt;
    &lt;script type='text/javascript'&gt;
        try {
            if (enableGoogleAd) {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1346480159711-0'); });            
            } else {
                $('#div-gpt-ad-1346480159711-0').hide();
            }
    } catch (e) { }
    &lt;/script&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="blog_news_kb"&gt;&lt;/div&gt;
&lt;div id="HistoryToday" class="c_ad_block"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
&lt;/script&gt;
&lt;/div&gt;

        &lt;/div&gt;

        &lt;script type="text/javascript"&gt;
            var m = window.__blog.contentRendered;
            if (m) { m(__$("content")); }
        &lt;/script&gt;

        &lt;div id="sidebar"&gt;
            
&lt;div id="about"&gt;
&lt;div&gt;
&lt;h2 id="about_title"&gt;About&lt;/h2&gt;
&lt;div id="about_body"&gt;
&lt;div id="blog-news"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;loadBlogNews();&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

            &lt;script type="text/javascript"&gt;
                var m = window.__blog.aboutRendered;
                if (m) { m(__$("about")); }
            &lt;/script&gt;
            
&lt;div id="mySearchWrapper"&gt;
    &lt;div id="mySearch"&gt;
        &lt;input type="image" src="/skins/Minyx2_Lite/images/btnsearch.gif" id="btnZzk" class="submit" onclick="zzk_go();return false;"&gt;
        &lt;label class="lb_search"&gt;&lt;input type="text" id="q" onkeydown="return zzk_go_enter(event);" class="keyword"&gt;&lt;/label&gt;
    &lt;/div&gt;
&lt;/div&gt;

            &lt;script type="text/javascript"&gt;
                var m = window.__blog.searchFormRendered;
                if (m) { m(__$("searchform")); }
            &lt;/script&gt;
            &lt;div id="sideMain"&gt;
            &lt;/div&gt;
            &lt;div id="sideRight"&gt;
            &lt;/div&gt;
            &lt;div id="sideLeft"&gt;
            &lt;/div&gt;
            
                &lt;div id="sideContainer"&gt;
                &lt;/div&gt;
                &lt;script type="text/javascript"&gt;
                    $.ajax({
                        url: '/' + currentBlogApp + '/mvc/blog/Minyx2_Lite_SideColumn.aspx',
                        data: '{}',
                        type: 'post',
                        dataType: 'text',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            if (data) {
                                $("#sideContainer").html(data);
                                loadBlogDefaultCalendar();
                                loadBlogSideBlocks();
                                var m = window.__blog.sideContainerRendered;
                                if (m) { m(__$("sideContainer")); }
                                window.__blog.sidebar.__layout();
                            }
                        }
                    });

                &lt;/script&gt;
            
        &lt;/div&gt;

        &lt;script type="text/javascript"&gt;
            var m = window.__blog.sidebarRendered;
            if (m) { m(__$("sidebar")); }
        &lt;/script&gt;

        &lt;div id="footer"&gt;
            
&lt;p id="logoFoot"&gt;
    &lt;a href="http://www.spiga.com.mx/" title="Agencia Interactiva Spiga"&gt;www.spiga.com.mx&lt;/a&gt;
&lt;/p&gt;
&lt;div class="footText"&gt;
&lt;p&gt;
Copyright &amp;copy;2014 KenshinCui
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://www.cnblogs.com"&gt;博客园&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;script type="text/javascript"&gt;
        var m = window.__blog.wrapperRendered;
        if (m) { m(__$("wrapper")); }
    &lt;/script&gt;

&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    var m = window.__blog.containerRendered;
    if (m) { m(__$("container")); }
&lt;/script&gt;
&lt;!--PageEndHtml Block Begin--&gt;
&lt;!--&lt;script type="text/javascript" src=" http://v1.jiathis.com/code/jiathis_r.js" charset="utf-8"&gt;&lt;/script&gt;--&gt;
&lt;script type="text/javascript" src="http://files.cnblogs.com/kenshincui/scrolltopcontrol.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;script src="http://cdn.bootcss.com/bootstrap/3.2.0/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;
$(document).ready(function () {
    var blogBodyId = 'cnblogs_post_body';
    if($('#'+blogBodyId).length===0){
        scrolltotop.init();
    }
    var iv=setInterval(function(){
        var digg=$("#div_digg");
        if(digg.length&gt;0){
            digg.css({ "position": "fixed", "right": "0px", "bottom":"0px", "z-index": "10", "background-color": "white", "margin":"10px", "padding": "10px", "border": "1px solid #cccccc" });
            clearInterval(iv);
        }
    },1000);

    $('.kc-table&gt;tbody&gt;tr[class!="subhead"]').hover(function(){
        $(this).addClass('active');
    },function(){
        $(this).removeClass('active');
    });

var $ol = $('.kc-catalog');
            if ($ol) {
                var height = $ol.height(),
                fontHeight = 80,
                $catalog,
                padding = (height - fontHeight) / 2;
                $catalog = $('&lt;li class="catalog"&gt;&lt;span&gt;目&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;录&lt;span&gt;&lt;/li&gt;');
                $ol.append($catalog);
                $catalog.css('padding-top', padding).css('padding-bottom', padding);
            }
});
&lt;/script&gt;
&lt;script src="http://files.cnblogs.com/kenshincui/CNBlogsNavigation-0.5.2.min.js"&gt;&lt;/script&gt;
&lt;!--PageEndHtml Block End--&gt;
&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-kenshincui-p-3931948.html</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/kenshincui/p/3931948.html</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-kenshincui-p-3931948.html</UUID>
</Page>