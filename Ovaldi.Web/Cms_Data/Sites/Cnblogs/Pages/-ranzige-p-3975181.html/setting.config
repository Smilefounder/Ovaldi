<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-ranzige-p-3975181.html</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
&lt;title&gt;合并JavaScript数组的N种方法 - 技术狂 - 博客园&lt;/title&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/bundles/blog-common.css"&gt;
&lt;link id="MainCss" type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/skins/elf/bundle-elf.css"&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/blog/customcss/104208.css"&gt;
&lt;link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/ranzige/rss"&gt;
&lt;link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/ranzige/rsd.xml"&gt;
&lt;link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/ranzige/wlwmanifest.xml"&gt;
&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;  
&lt;script type="text/javascript"&gt;var currentBlogApp = 'ranzige', cb_enable_mathjax=false;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/blog-common.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a name="top"&gt;&lt;/a&gt;
&lt;div id="page_begin_html"&gt;&lt;/div&gt;&lt;script&gt;load_page_begin_html();&lt;/script&gt;

&lt;!--done--&gt;
&lt;div id="home"&gt;
&lt;div id="header"&gt;
	&lt;div id="blogTitle"&gt;
	&lt;a id="lnkBlogLogo" href="http://www.cnblogs.com/ranzige/"&gt;&lt;img id="blogLogo" src="/preview~Cnblogs/Images/Skins/custom/images/logo.gif" alt="返回主页"&gt;&lt;/a&gt;			
		
&lt;!--done--&gt;
&lt;h1&gt;&lt;a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/ranzige/"&gt;技术狂&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;/h2&gt;



		
	&lt;/div&gt;&lt;!--end: blogTitle 博客的标题和副标题 --&gt;
	&lt;div id="navigator"&gt;
		
&lt;ul id="navList"&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/ranzige/"&gt;首页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="menu" href="http://q.cnblogs.com/"&gt;博问&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="menu" href="http://home.cnblogs.com/ing/"&gt;闪存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/ranzige/rss"&gt;订阅&lt;/a&gt;
&lt;!--&lt;a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/ranzige/rss"&gt;&lt;img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /&gt;&lt;/a&gt;--&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/"&gt;管理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
		&lt;div class="blogStats"&gt;
			
			
&lt;!--done--&gt;
随笔- 356&amp;nbsp;
文章- 0&amp;nbsp;
评论- 115&amp;nbsp;

			
		&lt;/div&gt;&lt;!--end: blogStats --&gt;
	&lt;/div&gt;&lt;!--end: navigator 博客导航栏 --&gt;
&lt;/div&gt;&lt;!--end: header 头部 --&gt;

&lt;div id="main"&gt;
	&lt;div id="mainContent"&gt;
	&lt;div class="forFlow"&gt;
		

&lt;!--done--&gt;
&lt;div id="topics"&gt;
	&lt;div class="post"&gt;
		&lt;h1 class="postTitle"&gt;
			&lt;a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/ranzige/p/3975181.html"&gt;合并JavaScript数组的N种方法&lt;/a&gt;
		&lt;/h1&gt;
		&lt;div class="clear"&gt;&lt;/div&gt;
		&lt;div class="postBody"&gt;
			&lt;div id="cnblogs_post_body"&gt;&lt;p&gt;　　这是一篇简单的文章，关于JavaScript数组使用的一些技巧。我们将使用不同的方法结合/合并两个JS数组，以及讨论每个方法的优点/缺点。&lt;/p&gt;
&lt;p&gt;　　让我们先考虑下面这情况：&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;var a = [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ];
var b = [ "foo", "bar", "baz", "bam", "bun", "fun" ];&lt;/pre&gt;
&lt;p&gt;　　很显然最简单的结合结果应该是：&lt;/p&gt;
&lt;pre&gt;[
&amp;nbsp; &amp;nbsp;1, 2, 3, 4, 5, 6, 7, 8, 9,
&amp;nbsp; &amp;nbsp;"foo", "bar", "baz", "bam" "bun", "fun"
]&lt;/pre&gt;
&lt;h3 style="font: bold 18px/23px 'Microsoft YaHei'; margin: 14px 0px; padding: 0px; color: #555555; text-transform: none; text-indent: 0px; letter-spacing: normal; word-spacing: 0px; white-space: normal; font-size-adjust: none; font-stretch: normal; background-color: #f9f9f9; -webkit-text-stroke-width: 0px;"&gt;　　concat(..)&lt;/h3&gt;
&lt;p&gt;　　这是最常见的做法：&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;var c = a.concat( b );
a; // [1,2,3,4,5,6,7,8,9]
b; // ["foo","bar","baz","bam","bun","fun"]
c; // [1,2,3,4,5,6,7,8,9,"foo","bar","baz","bam","bun","fun"]&lt;/pre&gt;
&lt;p&gt;　　正如你所看到的，C是一个全新的数组，表示a和b两个数组的组合，并让A和B不变。简单吧？&amp;nbsp;&lt;/p&gt;
&lt;p&gt;　　但如果a有10,000个元素，而b也有一万个元素？ C就会有2万个元素，所以a和b的内内存使用就会翻倍。&amp;nbsp;&lt;/p&gt;
&lt;p&gt;　　&amp;ldquo;没问题！&amp;rdquo;，你说。让它们被垃圾回收，把A和B设置为null，问题解决了！&lt;/p&gt;
&lt;pre&gt;a = b = null; // 'a'和'b'就被回收了&lt;/pre&gt;
&lt;p&gt;　　呵呵。对于只有几个元素的小数组，这没啥问题。但对于大数组，或者在内存有限的系统中需要经常重复这个过程，它其实还有很多改进的地方。&amp;nbsp;&lt;/p&gt;
&lt;h3 style="font: bold 18px/23px 'Microsoft YaHei'; margin: 14px 0px; padding: 0px; color: #555555; text-transform: none; text-indent: 0px; letter-spacing: normal; word-spacing: 0px; white-space: normal; font-size-adjust: none; font-stretch: normal; background-color: #f9f9f9; -webkit-text-stroke-width: 0px;"&gt;　　循环插入&lt;/h3&gt;
&lt;p&gt;　　好吧，让我们将一个数组的内容复制到另一个，使用： Array#push(..)&lt;/p&gt;
&lt;pre&gt;// `b` onto `a`
for (var i=0; i &amp;lt; b.length; i++) {
&amp;nbsp; &amp;nbsp; a.push( b[i] );
}
a; // [1,2,3,4,5,6,7,8,9,"foo","bar","baz","bam","bun","fun"]
b = null;&lt;/pre&gt;
&lt;p&gt;　　现在，数组a有了数组b的内容。&lt;/p&gt;
&lt;p&gt;　　似乎有更好的内存占用。&lt;/p&gt;
&lt;p&gt;　　但如果a数组比较小？出于内存和速度的原因，你可能要把更小的a放到b的前面，。没问题，只需将push（..）换成unshift(..)即可：&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;// `a` into `b`:
for (var i=a.length-1; i &amp;gt;= 0; i--) {
&amp;nbsp; &amp;nbsp; b.unshift( a[i] );
}
b; // [1,2,3,4,5,6,7,8,9,"foo","bar","baz","bam","bun","fun"]&lt;/pre&gt;
&lt;h3 style="font: bold 18px/23px 'Microsoft YaHei'; margin: 14px 0px; padding: 0px; color: #555555; text-transform: none; text-indent: 0px; letter-spacing: normal; word-spacing: 0px; white-space: normal; font-size-adjust: none; font-stretch: normal; background-color: #f9f9f9; -webkit-text-stroke-width: 0px;"&gt;　　功能技巧&lt;/h3&gt;
&lt;p&gt;　　不过for循环确实比较丑，而且不好维护。我们可以做的更好吗？&amp;nbsp;&lt;/p&gt;
&lt;p&gt;　　这是我们的第一次尝试，使用Array#reduce：&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;// `b` onto `a`:
a = b.reduce( function(coll,item){
&amp;nbsp; &amp;nbsp; coll.push( item );
&amp;nbsp; &amp;nbsp; return coll;
}, a );

a; // [1,2,3,4,5,6,7,8,9,"foo","bar","baz","bam","bun","fun"]

// or `a` into `b`:
b = a.reduceRight( function(coll,item){
&amp;nbsp; &amp;nbsp; coll.unshift( item );
&amp;nbsp; &amp;nbsp; return coll;
}, b );

b; // [1,2,3,4,5,6,7,8,9,"foo","bar","baz","bam","bun","fun"]&lt;/pre&gt;
&lt;p&gt;　　Array#reduce(..) 和 Array#reduceRight(..)是不错的，但他们是一点点笨拙。 ES6=&amp;gt;的箭头函数将减少一些代码量，但它仍然需要一个函数，每个元素都需要调用一次，不是很完美。&amp;nbsp;&lt;/p&gt;
&lt;p&gt;　　那这个怎么样：&amp;nbsp;&lt;/p&gt;
&lt;p&gt;　　// `b` onto `a`:&lt;/p&gt;
&lt;p&gt;　　a.push.apply( a, b );&lt;/p&gt;
&lt;p&gt;　　a; // [1,2,3,4,5,6,7,8,9,"foo","bar","baz","bam","bun","fun"]&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;　　// or `a` into `b`:&lt;/p&gt;
&lt;p&gt;　　b.unshift.apply( b, a );&lt;/p&gt;
&lt;p&gt;　　b; // [1,2,3,4,5,6,7,8,9,"foo","bar","baz","bam","bun","fun"]&lt;/p&gt;
&lt;p&gt;　　这是一个要好很多吧？特别是因为 unshift(..)方法在这里并不需要担心前面的反向排序。 ES6的spead操作会更漂亮： a.push( ...b ) 或 b.unshift( ...a&lt;/p&gt;
&lt;p&gt;　　数组最大长度限制&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;第一个主要的问题是，内存使用量增长了一倍（当然只是暂时的！）被追加内容基本上是通过函数调用将元素复制到堆栈中。此外，不同的JS引擎都有拷贝数据长度的限制。&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;　　所以，如果数组有一百万个元素，你肯定会超出了push(...)或unshift(...)允许调用堆栈的限制。唉，处理几千个元素它会做得很好，但你必须要小心，不能超过合理的长度限值。&amp;nbsp;&lt;/p&gt;
&lt;p&gt;　　注意： 你可以尝试一下splice(...)，它跟push(...)和unshift(...)一样都有这种问题。&lt;/p&gt;
&lt;p&gt;　　有一种方法可以避免这种最大长度限制。&lt;/p&gt;
&lt;pre&gt;function combineInto(a,b) {
&amp;nbsp; &amp;nbsp; var len = a.length;
&amp;nbsp; &amp;nbsp; for (var i=0; i &amp;lt; len; i=i+5000) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; b.unshift.apply( b, a.slice( i, i+5000 ) );
&amp;nbsp; &amp;nbsp; }
}&lt;/pre&gt;
&lt;p&gt;　　等一下，我们的可读性倒退了。 就这样吧，可能会越改越差，呵。&lt;/p&gt;&lt;/div&gt;&lt;div id="MySignature"&gt;&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="blog_post_info_block"&gt;
&lt;div id="BlogPostCategory"&gt;&lt;/div&gt;
&lt;div id="EntryTag"&gt;&lt;/div&gt;
&lt;div id="blog_post_info"&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="post_next_prev"&gt;&lt;/div&gt;
&lt;/div&gt;


		&lt;/div&gt;
		&lt;div class="postDesc"&gt;posted @ &lt;span id="post-date"&gt;2014-09-16 16:18&lt;/span&gt; &lt;a href='http://www.cnblogs.com/ranzige/'&gt;技术狂&lt;/a&gt; 阅读(&lt;span id="post_view_count"&gt;...&lt;/span&gt;) 评论(&lt;span id="post_comment_count"&gt;...&lt;/span&gt;)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3975181" rel="nofollow"&gt;编辑&lt;/a&gt; &lt;a href="#" onclick="AddToWz(3975181);return false;"&gt;收藏&lt;/a&gt;&lt;/div&gt;
	&lt;/div&gt;
	&lt;script type="text/javascript"&gt;var allowComments=true,isLogined=false,cb_blogId=104208,cb_entryId=3975181,cb_blogApp=currentBlogApp,cb_blogUserGuid='9eeace70-c923-e111-b422-842b2b196315',cb_entryCreatedDate='2014/9/16 16:18:00';loadViewCount(cb_entryId);&lt;/script&gt;
	
&lt;/div&gt;&lt;!--end: topics 文章、评论容器--&gt;
&lt;a name="!comments"&gt;&lt;/a&gt;&lt;div id="blog-comments-placeholder"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var commentManager = new blogCommentManager();commentManager.renderComments(0);&lt;/script&gt;
&lt;div id="comment_form" class="commentform"&gt;
&lt;a name="commentform"&gt;&lt;/a&gt;
&lt;div id="divCommentShow"&gt;&lt;/div&gt;
&lt;div id="comment_nav"&gt;&lt;span id="span_refresh_tips"&gt;&lt;/span&gt;&lt;a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();"&gt;刷新评论&lt;/a&gt;&lt;a href="#" onclick="return RefreshPage();"&gt;刷新页面&lt;/a&gt;&lt;a href="#top"&gt;返回顶部&lt;/a&gt;&lt;/div&gt;
&lt;div id="comment_form_container"&gt;&lt;/div&gt;
&lt;div class="ad_text_commentbox" id="ad_text_under_commentbox"&gt;&lt;/div&gt;
&lt;div id="site_nav_under"&gt;&lt;a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园"&gt;博客园首页&lt;/a&gt;&lt;a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区"&gt;博问&lt;/a&gt;&lt;a href="http://news.cnblogs.com/" target="_blank" title="IT新闻"&gt;新闻&lt;/a&gt;&lt;a href="http://home.cnblogs.com/ing/" target="_blank"&gt;闪存&lt;/a&gt;&lt;a href="http://job.cnblogs.com/" target="_blank"&gt;程序员招聘&lt;/a&gt;&lt;a href="http://kb.cnblogs.com/" target="_blank"&gt;知识库&lt;/a&gt;&lt;/div&gt;
&lt;div id="opt_under_post"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    var enableGoogleAd = canShowAdsense(); var googletag = googletag || {}; googletag.cmd = googletag.cmd || [];
    fixPostBodyFormat();
&lt;/script&gt;
&lt;div id="ad_under_post_holder"&gt;
&lt;script type='text/javascript'&gt;
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        if (enableGoogleAd) {
            var gads = document.createElement('script');
            gads.async = true;
            gads.type = 'text/javascript';
            var useSSL = 'https:' == document.location.protocol;
            gads.src = (useSSL ? 'https:' : 'http:') + '//www.googletagservices.com/tag/js/gpt.js';
            var node = document.getElementsByTagName('script')[0];
            node.parentNode.insertBefore(gads, node);
        }
    })();
&lt;/script&gt;
&lt;script type='text/javascript'&gt;
    try {
        if (enableGoogleAd) {
            googletag.cmd.push(function () {
                googletag.defineSlot('/1090369/cnblogs_blogpost_C1_sitehome', [300, 250], 'div-gpt-ad-1346480159711-0').addService(googletag.pubads());
                googletag.pubads().enableSingleRequest();
                googletag.enableServices();
            });
        };
    } catch (e) { }
&lt;/script&gt;
&lt;div id="google_ad_c1" class="c_ad_block"&gt;
    &lt;div id='div-gpt-ad-1346480159711-0' style='width:300px; height:250px;'&gt;
    &lt;script type='text/javascript'&gt;
        try {
            if (enableGoogleAd) {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1346480159711-0'); });            
            } else {
                $('#div-gpt-ad-1346480159711-0').hide();
            }
    } catch (e) { }
    &lt;/script&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="blog_news_kb"&gt;&lt;/div&gt;
&lt;div id="HistoryToday" class="c_ad_block"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
&lt;/script&gt;
&lt;/div&gt;

	&lt;/div&gt;&lt;!--end: forFlow --&gt;
	&lt;/div&gt;&lt;!--end: mainContent 主体内容容器--&gt;

	&lt;div id="sideBar"&gt;
		&lt;div id="sideBarMain"&gt;
			
&lt;!--done--&gt;
&lt;div class="newsItem"&gt;
&lt;h3 class="catListTitle"&gt;公告&lt;/h3&gt;
	&lt;div id="blog-news"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogNews();&lt;/script&gt;
&lt;/div&gt;

			&lt;div id="blog-calendar" style="display:none"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogDefaultCalendar();&lt;/script&gt;
			
			&lt;div id="leftcontentcontainer"&gt;
				&lt;div id="blog-sidecolumn"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogSideColumn();&lt;/script&gt;
			&lt;/div&gt;
			
		&lt;/div&gt;&lt;!--end: sideBarMain --&gt;
	&lt;/div&gt;&lt;!--end: sideBar 侧边栏容器 --&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;/div&gt;&lt;!--end: main --&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="footer"&gt;
		
&lt;!--done--&gt;
Copyright &amp;copy;2014 技术狂
	&lt;/div&gt;&lt;!--end: footer --&gt;
&lt;/div&gt;&lt;!--end: home 自定义的最大容器 --&gt;
&lt;!--PageEndHtml Block Begin--&gt;
&lt;script type="text/javascript"&gt;BAIDU_CLB_SLOT_ID = "953551";&lt;/script&gt;
&lt;script type="text/javascript" src="http://cbjs.baidu.com/js/o.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript"&gt;
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F0da76333056aa0901f0800c3722d5145' type='text/javascript'%3E%3C/script%3E"));
&lt;/script&gt;
&lt;!--PageEndHtml Block End--&gt;
&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-ranzige-p-3975181.html</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/ranzige/p/3975181.html</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-ranzige-p-3975181.html</UUID>
</Page>