<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-catch-</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
&lt;title&gt;twoon - 博客园&lt;/title&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/bundles/blog-common.css"&gt;
&lt;link id="MainCss" type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/skins/sea/bundle-sea.css"&gt;
&lt;link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/catch/rss"&gt;
&lt;link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/catch/rsd.xml"&gt;
&lt;link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/catch/wlwmanifest.xml"&gt;
&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;  
&lt;script type="text/javascript"&gt;var currentBlogApp = 'catch', cb_enable_mathjax=false;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/blog-common.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a name="top"&gt;&lt;/a&gt;

&lt;!--done--&gt;
&lt;div id="header"&gt;
	
&lt;!--done--&gt;
&lt;div class="header"&gt;
	&lt;div class="headerText"&gt;
		&lt;a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/catch/"&gt;&lt;/a&gt;&lt;br&gt;
		
	&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="mytopmenu"&gt;
	
		&lt;div id="mylinks"&gt;
&lt;!--done--&gt;
&lt;a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/"&gt;博客园&lt;/a&gt; &amp;nbsp;
&lt;a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/catch/"&gt;首页&lt;/a&gt; &amp;nbsp;
&lt;a href="http://q.cnblogs.com" class="menu"&gt;博问&lt;/a&gt; &amp;nbsp;
&lt;a href="http://home.cnblogs.com/ing/" class="menu"&gt;闪存&lt;/a&gt; &amp;nbsp;
&lt;a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1"&gt;新随笔&lt;/a&gt; &amp;nbsp;
&lt;a id="MyLinks1_ContactLink" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/twoon"&gt;联系&lt;/a&gt; &amp;nbsp;
&lt;a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/catch/rss"&gt;订阅&lt;/a&gt;&lt;a id="MyLinks1_XMLLink" href="http://www.cnblogs.com/catch/rss"&gt;&lt;img src="/preview~Cnblogs/Images/images/xml.gif" alt="订阅"&gt;&lt;/a&gt;&amp;nbsp;
&lt;a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/"&gt;管理&lt;/a&gt;
&lt;/div&gt;
		&lt;div id="mystats"&gt;
&lt;!--done--&gt;
随笔-44&amp;nbsp;
评论-70&amp;nbsp;
文章-0&amp;nbsp;
trackbacks-0
&lt;/div&gt;
	
&lt;/div&gt;
&lt;div id="centercontent"&gt;
	

&lt;!--done--&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl00_ImageLink" title="Day link" href="http://www.cnblogs.com/catch/archive/2014/09/15.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年9月15日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/catch/p/3973104.html"&gt;Haskell 与范畴论&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: Haskell 是一门逼格极高的语言，这个评价肯定不为过，就我自身的经历及观察而言，一般初学者如果没有相关函数式编程的经验，入门直接接触那些稀奇古怪的概念，简直要跪下。现在回想起来，隐隐觉得初学者所拥有的命令式语言相关的知识和经验反而成了负担，若能抛掉以往固有的观念转以全新的视角来看待这些怪东西，仿...&lt;a href="http://www.cnblogs.com/catch/p/3973104.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-09-15 21:54 twoon 阅读(263) 评论(7)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3973104" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl01_ImageLink" title="Day link" href="http://www.cnblogs.com/catch/archive/2014/08/23.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年8月23日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl01_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/catch/p/3921751.html"&gt;小试 boost spirit&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 解释文本文件是日常编程中太平常的一件事情了，一般来说，土鳖点的做法可以直接手写 parser 用循环暴力地去 map 文本上的关键字从而提取相关信息，想省力一点则可以使用 tokenizer 或正则表达式之类的工具，无论怎样，总的来说，手写 parser 去解释文本基本是件苦力活：写出的代码比较难重...&lt;a href="http://www.cnblogs.com/catch/p/3921751.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-08-23 19:38 twoon 阅读(428) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3921751" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl02_ImageLink" title="Day link" href="http://www.cnblogs.com/catch/archive/2014/08/03.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年8月3日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl02_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/catch/p/3884271.html"&gt;DWARF 中的 Debug Info 格式&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 本周花了几天的时间来研究怎么在 breakpad [[1](http://www.cnblogs.com/catch/archive/2013/02/02/2882016.html), [2](http://www.cnblogs.com/catch/p/3033249.html)] 中加入打印函数...&lt;a href="http://www.cnblogs.com/catch/p/3884271.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-08-03 18:15 twoon 阅读(288) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3884271" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl03_ImageLink" title="Day link" href="http://www.cnblogs.com/catch/archive/2014/07/27.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年7月27日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl03_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/catch/p/3857964.html"&gt;linux下动态链接实现原理&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: ##**符号重定位**讲动态链接之前，得先说说符号重定位。c/c++ 程序的编译是以文件为单位进行的，因此每个 c/cpp 文件也叫作一个编译单元(translation unit), 源文件先是被编译成一个个目标文件, 再由链接器把这些目标文件组合成一个可执行文件或库，而链接的过程，其核心工作是解...&lt;a href="http://www.cnblogs.com/catch/p/3857964.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-07-27 21:28 twoon 阅读(433) 评论(2)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3857964" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl04_ImageLink" title="Day link" href="http://www.cnblogs.com/catch/archive/2014/06/29.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年6月29日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl04_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/catch/p/3803130.html"&gt;c++11 内存模型解读&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: ##**关于乱序**首先需要明确一个普遍存在，但却未必人人都注意到的事实：程序并不总是按照源码中的顺序被执行的，此谓之乱序，乱序产生的原因可能有好几种：1. 编译器出于优化的目的，在编译阶段将源码的顺序进行交换。2. 程序执行期间，指令流水被 cpu 乱序执行。3. cache 的分层及刷新策略使得...&lt;a href="http://www.cnblogs.com/catch/p/3803130.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-06-29 17:37 twoon 阅读(530) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3803130" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl05_ImageLink" title="Day link" href="http://www.cnblogs.com/catch/archive/2014/06/15.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年6月15日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl05_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/catch/p/3751353.html"&gt;模板中的名字查找问题&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: ##**问题起源**先看下面很简单的一小段程序。```cpp#include template struct Base { void fun() ｛ std::cout struct Derived : Base{ void gun() { std::cout...&lt;a href="http://www.cnblogs.com/catch/p/3751353.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-06-15 16:29 twoon 阅读(267) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3751353" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl06_ImageLink" title="Day link" href="http://www.cnblogs.com/catch/archive/2014/05/17.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年5月17日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl06_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/catch/p/3722082.html"&gt;基于ε-NFA的正则表达式引擎&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 正则表达式几乎每个程序员都会用到，对于这么常见的一个语言，有没有想过怎么去实现一个呢？乍一想，也许觉得困难，实际上实现一个正则表达式的引擎并没有想像中的复杂，《编译原理》一书中有一章专门讲解了怎么基于状态机来构建基本的正则表达式引擎，它讲这个初衷是为词法分析服务，不过书里的东西相对偏理论了些，实现起...&lt;a href="http://www.cnblogs.com/catch/p/3722082.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-05-17 20:03 twoon 阅读(450) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3722082" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl07_ImageLink" title="Day link" href="http://www.cnblogs.com/catch/archive/2014/04/07.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年4月7日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl07_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/catch/p/3619379.html"&gt;c++ 异常处理（2）&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 前面一篇博文简单介绍了c++异常处理的流程，但在一些细节上一带而过了，比如，_Unwind_RaiseException是怎样重建函数现场的，Personality routine是怎样清理栈上变量的等，这些细节涉及到很多与语言层面无关的东西，本文尝试介绍一下这些细节的具体实现。相关的数据结构如前所...&lt;a href="http://www.cnblogs.com/catch/p/3619379.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-04-07 21:57 twoon 阅读(384) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3619379" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl08_ImageLink" title="Day link" href="http://www.cnblogs.com/catch/archive/2014/03/22.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年3月22日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl08_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/catch/p/3617962.html"&gt;实现一个简单的C++协程库&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 之前看协程相关的东西时，曾一念而过想着怎么自己来实现一个给C++用，但在保存现场恢复现场之类的细节上被自己的想法吓住，也没有深入去研究，后面一丢开就忘了。近来微博上看人在讨论怎么实现一个user space上的线程库，有人提到了setcontext，swapcontext之类的函数，说可以用来保存和切换上下文，我忽然觉得这应该也能用来实现协程，回头一搜，果然已经有人曾用这些函数做过相关的事情，略略看了几个，觉得到底不大好用，还不如自己搞一个简单点的。说到c++上的协程，boost里其实已经有相关的实现了，不过接口上看用起来有些麻烦，单纯从语法上来说，我觉得Lua的协程最简洁易用了，概念上也比较&lt;a href="http://www.cnblogs.com/catch/p/3617962.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-03-22 19:11 twoon 阅读(1295) 评论(2)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3617962" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl09_ImageLink" title="Day link" href="http://www.cnblogs.com/catch/archive/2014/03/19.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年3月19日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl09_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/catch/p/3604516.html"&gt;c++ 异常处理（1）&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 异常(exception)是c++中新增的一个特性，它提供了一种新的方式来结构化地处理错误，使得程序可以很方便地把异常处理与出错的程序分离，而且在使用上，它语法相当地简洁，以至于会让人错觉觉得它底层的实现也应该很简单，但事实上并不是这样。恰恰因为它语法上的简单没有规定过多细节，从而留给了编译器足够的...&lt;a href="http://www.cnblogs.com/catch/p/3604516.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-03-19 22:08 twoon 阅读(711) 评论(2)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3604516" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;
&lt;div class="topicListFooter"&gt;&lt;a href="http://www.cnblogs.com/catch/default.html?OnlyTitle=1"&gt;仅列出标题&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="http://www.cnblogs.com/catch/default.html?page=2"&gt;下一页&lt;/a&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div id="leftcontent"&gt;
	
		&lt;div id="leftcontentcontainer"&gt;
			
&lt;!--done--&gt;
&lt;div class="newsItem"&gt;
	&lt;div id="blog-news"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogNews();&lt;/script&gt;
&lt;/div&gt;

			&lt;div id="blog-calendar" style="display:none"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogDefaultCalendar();&lt;/script&gt;&lt;br&gt;
			&lt;div id="blog-sidecolumn"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogSideColumn();&lt;/script&gt;&lt;/div&gt;
	
&lt;/div&gt;

&lt;!--done--&gt;
&lt;div class="footer"&gt;
	Powered by: &lt;a href="http://www.cnblogs.com"&gt;博客园&lt;/a&gt;	模板提供：&lt;a href="http://blog.hjenglish.com"&gt;沪江博客&lt;/a&gt;
	Copyright &amp;copy;2014 twoon
&lt;/div&gt;



&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-catch-</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/catch/</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-catch-</UUID>
</Page>