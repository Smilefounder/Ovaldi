<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-zhouhongyu1989-p-3875111.html</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
&lt;title&gt;ASP.NET 如何做出简单的验证码 - 我不会抽烟Oscar - 博客园&lt;/title&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/bundles/blog-common.css"&gt;
&lt;link id="MainCss" type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/skins/arrow/bundle-arrow.css"&gt;
&lt;link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/zhouhongyu1989/rss"&gt;
&lt;link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/zhouhongyu1989/rsd.xml"&gt;
&lt;link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/zhouhongyu1989/wlwmanifest.xml"&gt;
&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;  
&lt;script type="text/javascript"&gt;var currentBlogApp = 'zhouhongyu1989', cb_enable_mathjax=true;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/blog-common.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a name="top"&gt;&lt;/a&gt;

&lt;!--done--&gt;
&lt;div id="header"&gt;
	
&lt;!--done--&gt;
&lt;div class="header"&gt;
	&lt;div class="headerText"&gt;
		&lt;a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/zhouhongyu1989/"&gt;我不会抽烟Oscar&lt;/a&gt;&lt;br&gt;
		
	&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div id="mylinks"&gt;
&lt;!--done--&gt;
&lt;a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/"&gt;博客园&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&lt;a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/zhouhongyu1989/"&gt;首页&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&lt;a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1"&gt;新随笔&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&lt;a id="MyLinks1_ContactLink" accesskey="9" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/%e6%88%91%e4%b8%8d%e4%bc%9a%e6%8a%bd%e7%83%9fOscar"&gt;联系&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&lt;a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/zhouhongyu1989/rss"&gt;订阅&lt;/a&gt;&lt;a id="MyLinks1_XMLLink" href="http://www.cnblogs.com/zhouhongyu1989/rss"&gt;&lt;img src="/preview~Cnblogs/Images/images/xml.gif" alt="订阅"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&lt;a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/"&gt;管理&lt;/a&gt;
&lt;/div&gt;
&lt;div id="mytopmenu"&gt;
	
		
&lt;div class="blogStats"&gt;随笔 - 18&amp;nbsp;
文章 - 0&amp;nbsp;评论 - 118&amp;nbsp;trackbacks - 0
&lt;/div&gt;
	
&lt;/div&gt;
&lt;div id="leftcontent"&gt;
	
		&lt;div id="leftcontentcontainer"&gt;
			&lt;div id="blog-calendar" style="display:none"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogDefaultCalendar();&lt;/script&gt;&lt;br&gt;
			
&lt;!--done--&gt;
&lt;div class="newsItem"&gt;
	&lt;div id="blog-news"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogNews();&lt;/script&gt;
&lt;/div&gt;

			&lt;div id="blog-sidecolumn"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogSideColumn();&lt;/script&gt;&lt;/div&gt;		
	
&lt;/div&gt;
&lt;div id="centercontent"&gt;
	

&lt;!--done--&gt;
&lt;div class="post"&gt;
	&lt;div class="postTitle"&gt;
		&lt;h1&gt;&lt;a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/zhouhongyu1989/p/3875111.html"&gt;ASP.NET 如何做出简单的验证码&lt;/a&gt;&lt;/h1&gt;
	&lt;/div&gt;
	&lt;div id="cnblogs_post_body"&gt;&lt;p&gt;如果说要做验证码，那不得不提的就是GDI+绘图了。我们都知道验证码是以图片形式展示的，而且是动态生成的，这样就需要我们去画出它。&lt;/p&gt;
&lt;p&gt;科普一下，什么是GDI+？&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #0000ff;"&gt;GDI+是图形设备接口（GDI）的高级版本， 提供了各种丰富的图形图像处理功能。GDI+主要由二维矢量图形、图像处理和版式3部分组成。GDI+为使用各种字体、字号和样式来显示文本这种复杂任务提供了大量的支持。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下面说说验证码，对于验证码这样的图片，我觉得是由两部分组成的，一部分是矩形的背景，另一部分是在其上的字母数字组合（有的时候有汉字，有的时候是纯字母或者纯数字，这个没有统一规定，怎么选择看你~）。对于矩形的背景我们可以直接把其当成画布，字母数字组合呢？我们可以利用随机数去拼出一组新组合。这样整个过程我们都想好了，下面看下代码吧：&lt;/p&gt;
&lt;p&gt;声明一下，我写的这个验证码为5个字符长度，由大小写英文字母+数字随机组合。&lt;/p&gt;
&lt;pre class="csharpcode"&gt;        &lt;span class="kwrd"&gt;private&lt;/span&gt; &lt;span class="kwrd"&gt;readonly&lt;/span&gt; &lt;span class="kwrd"&gt;char&lt;/span&gt;[] constant =  {   
        &lt;span class="str"&gt;'0'&lt;/span&gt;,&lt;span class="str"&gt;'1'&lt;/span&gt;,&lt;span class="str"&gt;'2'&lt;/span&gt;,&lt;span class="str"&gt;'3'&lt;/span&gt;,&lt;span class="str"&gt;'4'&lt;/span&gt;,&lt;span class="str"&gt;'5'&lt;/span&gt;,&lt;span class="str"&gt;'6'&lt;/span&gt;,&lt;span class="str"&gt;'7'&lt;/span&gt;,&lt;span class="str"&gt;'8'&lt;/span&gt;,&lt;span class="str"&gt;'9'&lt;/span&gt;,  
        &lt;span class="str"&gt;'a'&lt;/span&gt;,&lt;span class="str"&gt;'b'&lt;/span&gt;,&lt;span class="str"&gt;'c'&lt;/span&gt;,&lt;span class="str"&gt;'d'&lt;/span&gt;,&lt;span class="str"&gt;'e'&lt;/span&gt;,&lt;span class="str"&gt;'f'&lt;/span&gt;,&lt;span class="str"&gt;'g'&lt;/span&gt;,&lt;span class="str"&gt;'h'&lt;/span&gt;,&lt;span class="str"&gt;'i'&lt;/span&gt;,&lt;span class="str"&gt;'j'&lt;/span&gt;,&lt;span class="str"&gt;'k'&lt;/span&gt;,&lt;span class="str"&gt;'l'&lt;/span&gt;,&lt;span class="str"&gt;'m'&lt;/span&gt;,&lt;span class="str"&gt;'n'&lt;/span&gt;,&lt;span class="str"&gt;'o'&lt;/span&gt;,&lt;span class="str"&gt;'p'&lt;/span&gt;,&lt;span class="str"&gt;'q'&lt;/span&gt;,&lt;span class="str"&gt;'r'&lt;/span&gt;,&lt;span class="str"&gt;'s'&lt;/span&gt;,&lt;span class="str"&gt;'t'&lt;/span&gt;,&lt;span class="str"&gt;'u'&lt;/span&gt;,&lt;span class="str"&gt;'v'&lt;/span&gt;,&lt;span class="str"&gt;'w'&lt;/span&gt;,&lt;span class="str"&gt;'x'&lt;/span&gt;,&lt;span class="str"&gt;'y'&lt;/span&gt;,&lt;span class="str"&gt;'z'&lt;/span&gt;,   
        &lt;span class="str"&gt;'A'&lt;/span&gt;,&lt;span class="str"&gt;'B'&lt;/span&gt;,&lt;span class="str"&gt;'C'&lt;/span&gt;,&lt;span class="str"&gt;'D'&lt;/span&gt;,&lt;span class="str"&gt;'E'&lt;/span&gt;,&lt;span class="str"&gt;'F'&lt;/span&gt;,&lt;span class="str"&gt;'G'&lt;/span&gt;,&lt;span class="str"&gt;'H'&lt;/span&gt;,&lt;span class="str"&gt;'I'&lt;/span&gt;,&lt;span class="str"&gt;'J'&lt;/span&gt;,&lt;span class="str"&gt;'K'&lt;/span&gt;,&lt;span class="str"&gt;'L'&lt;/span&gt;,&lt;span class="str"&gt;'M'&lt;/span&gt;,&lt;span class="str"&gt;'N'&lt;/span&gt;,&lt;span class="str"&gt;'O'&lt;/span&gt;,&lt;span class="str"&gt;'P'&lt;/span&gt;,&lt;span class="str"&gt;'Q'&lt;/span&gt;,&lt;span class="str"&gt;'R'&lt;/span&gt;,&lt;span class="str"&gt;'S'&lt;/span&gt;,&lt;span class="str"&gt;'T'&lt;/span&gt;,&lt;span class="str"&gt;'U'&lt;/span&gt;,&lt;span class="str"&gt;'V'&lt;/span&gt;,&lt;span class="str"&gt;'W'&lt;/span&gt;,&lt;span class="str"&gt;'X'&lt;/span&gt;,&lt;span class="str"&gt;'Y'&lt;/span&gt;,&lt;span class="str"&gt;'Z'&lt;/span&gt;};&lt;span class="rem"&gt;//一个由数字和大小写英文字母组成的字符数组&lt;/span&gt;

        &lt;span class="kwrd"&gt;protected&lt;/span&gt; &lt;span class="kwrd"&gt;void&lt;/span&gt; Page_Load(&lt;span class="kwrd"&gt;object&lt;/span&gt; sender, EventArgs e)
        {
            Bitmap bitmap = &lt;span class="kwrd"&gt;new&lt;/span&gt; Bitmap(100, 25);&lt;span class="rem"&gt;//创建一个位图，宽100，高25，就是我所说的第一部分，矩形背景&lt;/span&gt;
            Graphics g = Graphics.FromImage(bitmap);&lt;span class="rem"&gt;//创建画布&lt;/span&gt;
            g.Clear(Color.YellowGreen);&lt;span class="rem"&gt;//为画布填充黄绿色&lt;/span&gt;

            Font font1 = &lt;span class="kwrd"&gt;new&lt;/span&gt; Font(&lt;span class="str"&gt;"Arial"&lt;/span&gt;, 15);&lt;span class="rem"&gt;//设置字体类型和大小 &lt;/span&gt;
            Brush brush = &lt;span class="kwrd"&gt;new&lt;/span&gt; SolidBrush(Color.Blue);&lt;span class="rem"&gt;//设置画刷颜色&lt;/span&gt;
            Pen myPen = &lt;span class="kwrd"&gt;new&lt;/span&gt; Pen(Color.Blue, 5);&lt;span class="rem"&gt;//创建画笔对象&lt;/span&gt;

            StringBuilder random = &lt;span class="kwrd"&gt;new&lt;/span&gt; StringBuilder(5); &lt;span class="rem"&gt;//创建可变字符串对象，用于存放随机生成的验证码&lt;/span&gt;
            Random rd = &lt;span class="kwrd"&gt;new&lt;/span&gt; Random();&lt;span class="rem"&gt;//创建一个随机数生成器对象&lt;/span&gt;
            &lt;span class="kwrd"&gt;for&lt;/span&gt; (&lt;span class="kwrd"&gt;int&lt;/span&gt; i = 0; i &amp;lt; random.Capacity; i++)
            {
                random.Append(constant[rd.Next(62)]);&lt;span class="rem"&gt;//生成一个随机字符加到random里&lt;/span&gt;
            }

            g.DrawString(random.ToString(), font1, brush, 10, 5);&lt;span class="rem"&gt;//在画布上画出字符串&lt;/span&gt;

            System.IO.MemoryStream ms = &lt;span class="kwrd"&gt;new&lt;/span&gt; System.IO.MemoryStream();&lt;span class="rem"&gt;//创建数据流MemoryStream&lt;/span&gt;
            bitmap.Save(ms, System.Drawing.Imaging.ImageFormat.Gif);&lt;span class="rem"&gt;//指定图像的输出格式为gif&lt;/span&gt;

            Response.ClearContent();
            Response.ContentType = &lt;span class="str"&gt;"image/Gif"&lt;/span&gt;;
            Response.BinaryWrite(ms.ToArray());&lt;span class="rem"&gt;//输出二进制数据流&lt;/span&gt;
        }&lt;/pre&gt;
&lt;style&gt;&lt;!--
.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
--&gt;&lt;/style&gt;
&lt;p&gt;生成的效果是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/i/639859/201407/291127154155058.jpg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;大家可能会觉得这样看起来很容易辨识，跟我们平时登录网站时输入的验证码比起来有点像个小学生。当然，我们可以做些改变，比较加上一定的角度。&lt;/p&gt;
&lt;pre class="csharpcode"&gt;        &lt;span class="kwrd"&gt;private&lt;/span&gt; &lt;span class="kwrd"&gt;readonly&lt;/span&gt; &lt;span class="kwrd"&gt;char&lt;/span&gt;[] constant =  {   
        &lt;span class="str"&gt;'0'&lt;/span&gt;,&lt;span class="str"&gt;'1'&lt;/span&gt;,&lt;span class="str"&gt;'2'&lt;/span&gt;,&lt;span class="str"&gt;'3'&lt;/span&gt;,&lt;span class="str"&gt;'4'&lt;/span&gt;,&lt;span class="str"&gt;'5'&lt;/span&gt;,&lt;span class="str"&gt;'6'&lt;/span&gt;,&lt;span class="str"&gt;'7'&lt;/span&gt;,&lt;span class="str"&gt;'8'&lt;/span&gt;,&lt;span class="str"&gt;'9'&lt;/span&gt;,  
        &lt;span class="str"&gt;'a'&lt;/span&gt;,&lt;span class="str"&gt;'b'&lt;/span&gt;,&lt;span class="str"&gt;'c'&lt;/span&gt;,&lt;span class="str"&gt;'d'&lt;/span&gt;,&lt;span class="str"&gt;'e'&lt;/span&gt;,&lt;span class="str"&gt;'f'&lt;/span&gt;,&lt;span class="str"&gt;'g'&lt;/span&gt;,&lt;span class="str"&gt;'h'&lt;/span&gt;,&lt;span class="str"&gt;'i'&lt;/span&gt;,&lt;span class="str"&gt;'j'&lt;/span&gt;,&lt;span class="str"&gt;'k'&lt;/span&gt;,&lt;span class="str"&gt;'l'&lt;/span&gt;,&lt;span class="str"&gt;'m'&lt;/span&gt;,&lt;span class="str"&gt;'n'&lt;/span&gt;,&lt;span class="str"&gt;'o'&lt;/span&gt;,&lt;span class="str"&gt;'p'&lt;/span&gt;,&lt;span class="str"&gt;'q'&lt;/span&gt;,&lt;span class="str"&gt;'r'&lt;/span&gt;,&lt;span class="str"&gt;'s'&lt;/span&gt;,&lt;span class="str"&gt;'t'&lt;/span&gt;,&lt;span class="str"&gt;'u'&lt;/span&gt;,&lt;span class="str"&gt;'v'&lt;/span&gt;,&lt;span class="str"&gt;'w'&lt;/span&gt;,&lt;span class="str"&gt;'x'&lt;/span&gt;,&lt;span class="str"&gt;'y'&lt;/span&gt;,&lt;span class="str"&gt;'z'&lt;/span&gt;,   
        &lt;span class="str"&gt;'A'&lt;/span&gt;,&lt;span class="str"&gt;'B'&lt;/span&gt;,&lt;span class="str"&gt;'C'&lt;/span&gt;,&lt;span class="str"&gt;'D'&lt;/span&gt;,&lt;span class="str"&gt;'E'&lt;/span&gt;,&lt;span class="str"&gt;'F'&lt;/span&gt;,&lt;span class="str"&gt;'G'&lt;/span&gt;,&lt;span class="str"&gt;'H'&lt;/span&gt;,&lt;span class="str"&gt;'I'&lt;/span&gt;,&lt;span class="str"&gt;'J'&lt;/span&gt;,&lt;span class="str"&gt;'K'&lt;/span&gt;,&lt;span class="str"&gt;'L'&lt;/span&gt;,&lt;span class="str"&gt;'M'&lt;/span&gt;,&lt;span class="str"&gt;'N'&lt;/span&gt;,&lt;span class="str"&gt;'O'&lt;/span&gt;,&lt;span class="str"&gt;'P'&lt;/span&gt;,&lt;span class="str"&gt;'Q'&lt;/span&gt;,&lt;span class="str"&gt;'R'&lt;/span&gt;,&lt;span class="str"&gt;'S'&lt;/span&gt;,&lt;span class="str"&gt;'T'&lt;/span&gt;,&lt;span class="str"&gt;'U'&lt;/span&gt;,&lt;span class="str"&gt;'V'&lt;/span&gt;,&lt;span class="str"&gt;'W'&lt;/span&gt;,&lt;span class="str"&gt;'X'&lt;/span&gt;,&lt;span class="str"&gt;'Y'&lt;/span&gt;,&lt;span class="str"&gt;'Z'&lt;/span&gt;};&lt;span class="rem"&gt;//一个由数字和大小写英文字母组成的字符数组&lt;/span&gt;

        &lt;span class="kwrd"&gt;protected&lt;/span&gt; &lt;span class="kwrd"&gt;void&lt;/span&gt; Page_Load(&lt;span class="kwrd"&gt;object&lt;/span&gt; sender, EventArgs e)
        {
            Bitmap bitmap = &lt;span class="kwrd"&gt;new&lt;/span&gt; Bitmap(100, 25);&lt;span class="rem"&gt;//创建一个位图，宽100，高25，就是我所说的第一部分，矩形背景&lt;/span&gt;
            Graphics g = Graphics.FromImage(bitmap);&lt;span class="rem"&gt;//创建画布&lt;/span&gt;
            g.Clear(Color.YellowGreen);&lt;span class="rem"&gt;//为画布填充黄绿色&lt;/span&gt;

            Font font1 = &lt;span class="kwrd"&gt;new&lt;/span&gt; Font(&lt;span class="str"&gt;"Arial"&lt;/span&gt;, 15);&lt;span class="rem"&gt;//设置字体类型和大小 &lt;/span&gt;
            &lt;span class="kwrd"&gt;float&lt;/span&gt; angle = 60;&lt;span class="rem"&gt;//旋转的一个基础角度&lt;/span&gt;
            &lt;span class="kwrd"&gt;float&lt;/span&gt; length = 0;&lt;span class="rem"&gt;//显示字符的基础位置，往后看&lt;/span&gt;
            Brush brush = &lt;span class="kwrd"&gt;new&lt;/span&gt; SolidBrush(Color.Blue);&lt;span class="rem"&gt;//设置画刷颜色&lt;/span&gt;
            Pen myPen = &lt;span class="kwrd"&gt;new&lt;/span&gt; Pen(Color.Blue, 5);&lt;span class="rem"&gt;//创建画笔对象&lt;/span&gt;

            StringBuilder random = &lt;span class="kwrd"&gt;new&lt;/span&gt; StringBuilder(5); &lt;span class="rem"&gt;//创建可变字符串对象，用于存放随机生成的验证码&lt;/span&gt;
            Random rd = &lt;span class="kwrd"&gt;new&lt;/span&gt; Random();&lt;span class="rem"&gt;//创建一个随机数生成器对象&lt;/span&gt;
            &lt;span class="kwrd"&gt;for&lt;/span&gt; (&lt;span class="kwrd"&gt;int&lt;/span&gt; i = 0; i &amp;lt; random.Capacity; i++)
            {
                random.Append(constant[rd.Next(62)]);&lt;span class="rem"&gt;//生成一个随机字符加到random里&lt;/span&gt;

                g.ResetTransform();&lt;span class="rem"&gt;//将画布重置矩阵&lt;/span&gt;
                SizeF size = g.MeasureString(random[random.Length - 1].ToString(), font1);&lt;span class="rem"&gt;//得到新生成字符的尺寸&lt;/span&gt;
                g.TranslateTransform(length + size.Width / 2, size.Height / 2);&lt;span class="rem"&gt;//选择此次旋转的中心位置&lt;/span&gt;
                g.RotateTransform((&lt;span class="kwrd"&gt;float&lt;/span&gt;)rd.NextDouble() * angle * 2 - angle);&lt;span class="rem"&gt;//进行随机角度旋转&lt;/span&gt;
                g.DrawString(random[random.Length - 1].ToString(), font1, brush, &lt;span class="kwrd"&gt;new&lt;/span&gt; PointF(-size.Width / 2, -size.Height / 2));&lt;span class="rem"&gt;//注意，这里不是前一个例子，一次性把5个字符全部画出来，而是一个一个画&lt;/span&gt;
                length += size.Width;&lt;span class="rem"&gt;//保证下次画字符的位置不会覆盖前一次的字符&lt;/span&gt;
            }

            System.IO.MemoryStream ms = &lt;span class="kwrd"&gt;new&lt;/span&gt; System.IO.MemoryStream();&lt;span class="rem"&gt;//创建数据流MemoryStream&lt;/span&gt;
            bitmap.Save(ms, System.Drawing.Imaging.ImageFormat.Gif);&lt;span class="rem"&gt;//指定图像的输出格式为gif&lt;/span&gt;

            Response.ClearContent();
            Response.ContentType = &lt;span class="str"&gt;"image/Gif"&lt;/span&gt;;
            Response.BinaryWrite(ms.ToArray());&lt;span class="rem"&gt;//输出二进制数据流&lt;/span&gt;
        }&lt;/pre&gt;
&lt;style&gt;&lt;!--
.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
--&gt;&lt;/style&gt;
&lt;p&gt;这时生成的效果是这样的：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://images.cnitblog.com/blog/639859/201407/291126288835307.jpg"&gt;&lt;img src="http://images.cnitblog.com/i/639859/201407/291127351495630.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;是不是看起来更专业一些了呢？如果大家还是觉得不满意的话，可以看下GDI+的相关内容，通过添加一些噪点的元素，或者删除线这样子的东西来达到提高识别难度的目的，我这里就不一一列举啦。&lt;/p&gt;
&lt;p&gt;关于如何画验证码我们说过了，但是还有两点问题我还是想多说一下。&lt;/p&gt;
&lt;p&gt;1、&lt;span style="color: #ff0000;"&gt;我们实际输出的是一个二进制的流，如何做到显示到页面上与页面其他元素共存呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这里通用的一种方法就是把画验证码的这段代码放到一个独立的Web窗体页中，在另一个需要显示验证码的页面放一个&amp;lt;img&amp;gt;元素，把其src属性指向该验证码页的url。比如我写的一段是这样&lt;/p&gt;
&lt;pre class="csharpcode"&gt;&amp;lt;asp:Image ID=&lt;span class="str"&gt;"image_validatecode"&lt;/span&gt; runat=&lt;span class="str"&gt;"server"&lt;/span&gt; ImageUrl=&lt;span class="str"&gt;"~/PublicMethod/ValidateCode.aspx"&lt;/span&gt; style=&lt;span class="str"&gt;"padding-left:3px"&lt;/span&gt;/&amp;gt;&lt;/pre&gt;
&lt;style&gt;&lt;!--
.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }
--&gt;&lt;/style&gt;
&lt;p&gt;其实这里我是用大家通用的方法，不过我先前也有单独写一个web自定义控件，专门生成验证码使用，但是当拖入到页面中后运行，它还是会把页面其他元素给覆盖掉，具体原因我也不清楚。&lt;/p&gt;
&lt;p&gt;2、&lt;span style="color: #ff0000;"&gt;验证码主要目的还是用于验证使用的，所以我们在用户名，密码是否合法外，同时也要判断当前输入的验证码是不是与图片上的验证码一致。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我上面的代码中并没有写这块，其实只要在随机生成最终验证码之后，把其值存入一个session中去就可以了。然后在判断用户名，密码的同时去比较一下这个session值就OK了。如：&lt;/p&gt;
&lt;pre class="csharpcode"&gt;Session[&lt;span class="str"&gt;"login_validate_code"&lt;/span&gt;] = random.ToString();&lt;/pre&gt;
&lt;p&gt;3、&lt;span style="color: #ff0000;"&gt;如何用户没有看清此张验证码，想换一张如何实现？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;可以通过脚本给img元素的src属性重新赋值url实现，当然，麻烦点的话也可以使用ajax去实现。大家可以自己试试。&lt;/p&gt;&lt;/div&gt;&lt;div id="MySignature"&gt;&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="blog_post_info_block"&gt;
&lt;div id="BlogPostCategory"&gt;&lt;/div&gt;
&lt;div id="EntryTag"&gt;&lt;/div&gt;
&lt;div id="blog_post_info"&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="post_next_prev"&gt;&lt;/div&gt;
&lt;/div&gt;


	&lt;div class="postDesc"&gt;posted on &lt;span id="post-date"&gt;2014-07-29 11:27&lt;/span&gt; &lt;a href='http://www.cnblogs.com/zhouhongyu1989/'&gt;我不会抽烟Oscar&lt;/a&gt; 阅读(&lt;span id="post_view_count"&gt;...&lt;/span&gt;) 评论(&lt;span id="post_comment_count"&gt;...&lt;/span&gt;)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3875111" rel="nofollow"&gt;编辑&lt;/a&gt; &lt;a href="#" onclick="AddToWz(3875111);return false;"&gt;收藏&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;var allowComments=true,isLogined=false,cb_blogId=187958,cb_entryId=3875111,cb_blogApp=currentBlogApp,cb_blogUserGuid='902cd865-c3eb-e311-8d02-90b11c0b17d6',cb_entryCreatedDate='2014/7/29 11:27:00';loadViewCount(cb_entryId);&lt;/script&gt;

&lt;a name="!comments"&gt;&lt;/a&gt;&lt;div id="blog-comments-placeholder"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var commentManager = new blogCommentManager();commentManager.renderComments(0);&lt;/script&gt;
&lt;div id="comment_form" class="commentform"&gt;
&lt;a name="commentform"&gt;&lt;/a&gt;
&lt;div id="divCommentShow"&gt;&lt;/div&gt;
&lt;div id="comment_nav"&gt;&lt;span id="span_refresh_tips"&gt;&lt;/span&gt;&lt;a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();"&gt;刷新评论&lt;/a&gt;&lt;a href="#" onclick="return RefreshPage();"&gt;刷新页面&lt;/a&gt;&lt;a href="#top"&gt;返回顶部&lt;/a&gt;&lt;/div&gt;
&lt;div id="comment_form_container"&gt;&lt;/div&gt;
&lt;div class="ad_text_commentbox" id="ad_text_under_commentbox"&gt;&lt;/div&gt;
&lt;div id="site_nav_under"&gt;&lt;a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园"&gt;博客园首页&lt;/a&gt;&lt;a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区"&gt;博问&lt;/a&gt;&lt;a href="http://news.cnblogs.com/" target="_blank" title="IT新闻"&gt;新闻&lt;/a&gt;&lt;a href="http://home.cnblogs.com/ing/" target="_blank"&gt;闪存&lt;/a&gt;&lt;a href="http://job.cnblogs.com/" target="_blank"&gt;程序员招聘&lt;/a&gt;&lt;a href="http://kb.cnblogs.com/" target="_blank"&gt;知识库&lt;/a&gt;&lt;/div&gt;
&lt;div id="opt_under_post"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    var enableGoogleAd = canShowAdsense(); var googletag = googletag || {}; googletag.cmd = googletag.cmd || [];
    fixPostBodyFormat();
&lt;/script&gt;
&lt;div id="ad_under_post_holder"&gt;
&lt;script type='text/javascript'&gt;
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        if (enableGoogleAd) {
            var gads = document.createElement('script');
            gads.async = true;
            gads.type = 'text/javascript';
            var useSSL = 'https:' == document.location.protocol;
            gads.src = (useSSL ? 'https:' : 'http:') + '//www.googletagservices.com/tag/js/gpt.js';
            var node = document.getElementsByTagName('script')[0];
            node.parentNode.insertBefore(gads, node);
        }
    })();
&lt;/script&gt;
&lt;script type='text/javascript'&gt;
    try {
        if (enableGoogleAd) {
            googletag.cmd.push(function () {
                googletag.defineSlot('/1090369/cnblogs_blogpost_C1_sitehome', [300, 250], 'div-gpt-ad-1346480159711-0').addService(googletag.pubads());
                googletag.pubads().enableSingleRequest();
                googletag.enableServices();
            });
        };
    } catch (e) { }
&lt;/script&gt;
&lt;div id="google_ad_c1" class="c_ad_block"&gt;
    &lt;div id='div-gpt-ad-1346480159711-0' style='width:300px; height:250px;'&gt;
    &lt;script type='text/javascript'&gt;
        try {
            if (enableGoogleAd) {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1346480159711-0'); });            
            } else {
                $('#div-gpt-ad-1346480159711-0').hide();
            }
    } catch (e) { }
    &lt;/script&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="blog_news_kb"&gt;&lt;/div&gt;
&lt;div id="HistoryToday" class="c_ad_block"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
&lt;/script&gt;
&lt;/div&gt;

	
&lt;!--done--&gt;
&lt;div class="footer"&gt;
	
	Copyright &amp;copy;2014 我不会抽烟Oscar Powered by: &lt;a href="http://www.cnblogs.com" class="footerlink"&gt;博客园&lt;/a&gt; 模板提供：&lt;a href="http://blog.hjenglish.com" class="footerlink"&gt;沪江博客&lt;/a&gt;&lt;br&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-zhouhongyu1989-p-3875111.html</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/zhouhongyu1989/p/3875111.html</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-zhouhongyu1989-p-3875111.html</UUID>
</Page>