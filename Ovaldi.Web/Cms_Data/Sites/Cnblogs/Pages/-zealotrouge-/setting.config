<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-zealotrouge-</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html&gt;
&lt;html lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;热气球 - 博客园&lt;/title&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/bundles/blog-common.css"&gt;
&lt;link id="MainCss" type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/skins/facebook/bundle-facebook.css"&gt;
&lt;link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/zealotrouge/rss"&gt;
&lt;link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/zealotrouge/rsd.xml"&gt;
&lt;link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/zealotrouge/wlwmanifest.xml"&gt;
&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;  
&lt;script type="text/javascript"&gt;var currentBlogApp = 'zealotrouge', cb_enable_mathjax=false;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/blog-common.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a name="top"&gt;&lt;/a&gt;

&lt;div id="home"&gt;
&lt;div id="header"&gt;
	&lt;div id="blogTitle"&gt;
		
&lt;!--done--&gt;
&lt;h1&gt;&lt;a id="Header2_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/zealotrouge/"&gt;热气球&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;/h2&gt;



		
	&lt;/div&gt;&lt;!--end: blogTitle 博客的标题和副标题 --&gt;
	&lt;div id="navigator"&gt;
		
&lt;!--done--&gt;
			&lt;ul id="navList"&gt;
				&lt;li&gt;&lt;a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/"&gt;博客园&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;&lt;a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/zealotrouge/"&gt;首页&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;&lt;a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1"&gt;新随笔&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;&lt;a id="MyLinks1_ContactLink" accesskey="9" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/%e7%83%ad%e6%b0%94%e7%90%83"&gt;联系&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;&lt;a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/"&gt;管理&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;&lt;a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/zealotrouge/rss"&gt;订阅&lt;/a&gt;
				&lt;a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/zealotrouge/rss"&gt;&lt;img src="/preview~Cnblogs/Images/images/xml.gif" alt="订阅"&gt;&lt;/a&gt;&lt;/li&gt;
			&lt;/ul&gt;


		&lt;div class="blogStats"&gt;
			
			
&lt;!--done--&gt;
随笔- 17&amp;nbsp;
文章- 13&amp;nbsp;
评论- 124&amp;nbsp;

			
		&lt;/div&gt;&lt;!--end: blogStats --&gt;
	&lt;/div&gt;&lt;!--end: navigator 博客导航栏 --&gt;
&lt;/div&gt;&lt;!--end: header 头部 --&gt;

&lt;div id="main"&gt;
	&lt;div id="mainContent"&gt;
	&lt;div class="forFlow"&gt;
		

&lt;!--done--&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_ctl00_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/"&gt;置顶随笔&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/p/3544147.html"&gt;[置顶]玩转Hook——Android权限管理功能揭秘（一）&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="c_b_p_desc"&gt;摘要: 题记一：各大安全软件公司对此项技术可能都有一定的技术保密，在老东家也不例外，由于种种原因未能参与此项技术研发甚是遗憾，也未能接触到其源码，只能自行研究并与各位共享并探讨一下技术方案，所以在此也提醒各位，由于本系列文章所述均为自己在有限机型上实验的结果，不保证对其他机型上的兼容性，也不保证可能引发...&lt;a href="http://www.cnblogs.com/zealotrouge/p/3544147.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-05-16 15:33 热气球 阅读(1298) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3544147" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl00_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/archive/2014/09/15.html"&gt;2014年9月15日&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/p/3890359.html"&gt;由一个简单算法想到的程序员素养问题&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="postlist-postbody_loading" id="postlist_postbody_3890359"&gt;正文内容加载中...&lt;/div&gt;&lt;script type="text/javascript"&gt;getBlogPostBody(3890359);&lt;/script&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-09-15 18:26 热气球 阅读(1101) 评论(7)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3890359" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl01_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/archive/2014/05/16.html"&gt;2014年5月16日&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl01_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/p/3544147.html"&gt;玩转Hook——Android权限管理功能揭秘（一）&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="c_b_p_desc"&gt;摘要: 题记一：各大安全软件公司对此项技术可能都有一定的技术保密，在老东家也不例外，由于种种原因未能参与此项技术研发甚是遗憾，也未能接触到其源码，只能自行研究并与各位共享并探讨一下技术方案，所以在此也提醒各位，由于本系列文章所述均为自己在有限机型上实验的结果，不保证对其他机型上的兼容性，也不保证可能引发...&lt;a href="http://www.cnblogs.com/zealotrouge/p/3544147.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-05-16 15:33 热气球 阅读(1298) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3544147" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl02_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/archive/2014/04/22.html"&gt;2014年4月22日&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl02_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/p/3544146.html"&gt;Android手机间无线互传功能探索及实现&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="c_b_p_desc"&gt;摘要: 年前研究了一下Android如何实现无线互传的功能，写了个小demo，最近无事，遂整理一下，与各位共享。前期调研发现，Android想要实现无线互传有以下几种技术：1，Bluetooth通行已久，简单易用，无奈速度奇慢是硬伤；2，NFC，官方从API 9开始支持，但各厂商对此技术持观望态度，比如...&lt;a href="http://www.cnblogs.com/zealotrouge/p/3544146.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-04-22 16:20 热气球 阅读(1089) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3544146" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl03_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/archive/2014/03/25.html"&gt;2014年3月25日&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl03_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/p/3586504.html"&gt;从字节码的角度看Java内部类与外部类的互相访问&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="c_b_p_desc"&gt;摘要: Java中non-static内部类为何可以访问外部类的变量？Java中外部类又为何可以访问内部类的private变量？这两个问题困扰过我一段时间，查了一些网上的答案，大多从“闭包”概念入手，理解起来很是费劲，能否从另外一个角度来解释这个问题呢？有句话叫做“真正了不起的程序员应该对每一个字节都了如指掌”，而弄明白Java程序的“每个字节”还是相对容易的，下面就通过一段Java代码的bytecode来分析： 1 public class Test 2 { 3 public static void main(String[] args) 4 { 5 new Te...&lt;a href="http://www.cnblogs.com/zealotrouge/p/3586504.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-03-25 11:18 热气球 阅读(449) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3586504" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl04_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/archive/2013/11/27.html"&gt;2013年11月27日&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl04_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/p/3446278.html"&gt;HttpClient与HttpUrlConnection下载速度比较&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="c_b_p_desc"&gt;摘要: Android有两套http的API，刚开始使用网络编程时多少有些迷惑到底用哪个好呢？其实孰优孰劣无需再争论，google已经指出HttpUrlConnection是Android更优的选择，并在SDK文档中引用了博客（需要代理访问）http://android-developers.blogspot.com/2011/09/androids-http-clients.html来阐述各自的优缺点。国内也有些博客大致翻译了上面的内容，并对了一些测试，可惜测试不严密，某博客甚至得出HttpUrlConnection的下载速度快几倍的结论，其实并没有公平反映出二者的下载速度。 虽然我已经使用过...&lt;a href="http://www.cnblogs.com/zealotrouge/p/3446278.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2013-11-27 17:46 热气球 阅读(544) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3446278" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl05_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/archive/2013/11/19.html"&gt;2013年11月19日&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl05_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/p/3431471.html"&gt;记一道有趣的Twitter面试题&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="c_b_p_desc"&gt;摘要: 微信上的“程序员的那些事”想必是很多码农们关注的公众账号之一，我也是其粉丝，每天都会看看里面有没有什么趣事，前段时间“程序员的那些事”分享了一篇博文《我的Twitter技术面试失败了》挺有意思，链接如下http://mp.weixin.qq.com/mp/appmsg/show?__biz=MjM5OTA1MDUyMA==&amp;amp;appmsgid=10000710&amp;amp;itemidx=1&amp;amp;sign=fab77147279ef685c50e39cc06623e5d&amp;amp;uin=MjM3Mjc1NTIwMA%3D%3D&amp;amp;key=38b17fed399880fb7129f6&lt;a href="http://www.cnblogs.com/zealotrouge/p/3431471.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2013-11-19 16:18 热气球 阅读(181) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3431471" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl06_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/archive/2013/10/21.html"&gt;2013年10月21日&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl06_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/p/3380682.html"&gt;Android改进版CoverFlow效果控件&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="c_b_p_desc"&gt;摘要: 最近研究了一下如何在Android上实现CoverFlow效果的控件，其实早在2010年，就有Neil Davies开发并开源出了这个控件，Neil大神的这篇博客地址http://www.inter-fuser.com/2010/02/android-coverflow-widget-v2.html。首先是阅读源码，弄明白核心思路后，自己重新写了一遍这个控件，并加入了详尽的注释以便日后查阅；而后在使用过程中，发现了有两点可以改进：（1）初始图片位于中间，左边空了一半空间，比较难看，可以改为重复滚动地展示、（2）由于图片一开始就需要加载出来，所以对内存开销较大，很容易OOM，需要对图片的内存..&lt;a href="http://www.cnblogs.com/zealotrouge/p/3380682.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2013-10-21 17:24 热气球 阅读(2779) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3380682" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl07_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/archive/2013/06/27.html"&gt;2013年6月27日&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl07_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/p/3159772.html"&gt;Android应用如何监听自己是否被卸载及卸载反馈功能的实现（第二版）&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="c_b_p_desc"&gt;摘要: 昨天发了一篇有关监听自己是否被卸载和卸载反馈功能实现的博客，地址如下：http://www.cnblogs.com/zealotrouge/p/3157126.html，发出去后收到几位热心网友的建议，在此特别感谢@cccode @泡泡糖 @Alexia(minmin) @0x00.pl ，你们的建议就是我前进的动力。 昨天的技术方案有一个硬伤，就是每1s就需要轮询目录是否存在，对资源消耗较大，第二版将会解决这一问题。思路是今天想到了一个Android自API1就有的一个类FileObserver，这个类用于监听某个文件的变化状态，如果是目录，这个类还可以监听其子目录及子目录文件的变化状...&lt;a href="http://www.cnblogs.com/zealotrouge/p/3159772.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2013-06-27 20:42 热气球 阅读(5583) 评论(39)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3159772" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl08_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/archive/2013/06/24.html"&gt;2013年6月24日&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl08_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/p/3152941.html"&gt;Android利用LocalSocket实现Java端进程与C端进程之间的IPC&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="c_b_p_desc"&gt;摘要: Android是建立在Linux之上的OS，在涉及到安全、网络协议、文件加密等功能时，往往需要通过C语言调用底层API来实现，而如何发出指令让C端执行我们想要的功能，并且在执行之后有返回结果呢，这就需要打通Java端进程和C端进程，使之能高效地通信。这样，C端进程用于实现功能，Java端进程负责UI、功能的触发及结果处理就可以了。 对于*nix系统来说，“一切皆为文件”，Socket也不例外，Socket按照收发双方的媒介来说有三种类型：1，通过网络端口；2，通过文件系统；3，通过内存映射文件。具体说来，三种类型均可以用来作为IPC的Socket：1，通过本地回环接口(即LoopBack...&lt;a href="http://www.cnblogs.com/zealotrouge/p/3152941.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2013-06-24 18:33 热气球 阅读(2639) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3152941" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl09_ImageLink" title="Day link" href="http://www.cnblogs.com/zealotrouge/archive/2013/04/22.html"&gt;2013年4月22日&lt;/a&gt;				  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl09_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/zealotrouge/archive/2013/04/22/3010969.html"&gt;[译]Android SDK中关于View绘制流程的概述&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="postCon"&gt;&lt;div class="c_b_p_desc"&gt;摘要: 最近总是对View的绘制流程感到迷惑，也没弄清楚onLayout()和onMeasure()方法的执行顺序，除了打Log观察之外，还仔细阅读了Android SDK中关于View绘制流程的说明以加深理解，所以特翻译如下： 当Activity获取焦点时，其布局将会被绘制。Android框架将会处理这一绘制过程，Activity所做的事情就是提供其布局的根节点（译注：布局文件中自动生成的父布局，带有xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;）。 绘制开始于布局的根节点，根节点将被用来测量并组织布局树。绘制&lt;a href="http://www.cnblogs.com/zealotrouge/archive/2013/04/22/3010969.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2013-04-22 16:38 热气球 阅读(134) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3010969" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
			&lt;div class="clear"&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="topicListFooter"&gt;&lt;a href="http://www.cnblogs.com/zealotrouge/default.html?OnlyTitle=1"&gt;仅列出标题&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="http://www.cnblogs.com/zealotrouge/default.html?page=2"&gt;下一页&lt;/a&gt;&lt;/div&gt;


	&lt;/div&gt;&lt;!--end: forFlow --&gt;
	&lt;/div&gt;&lt;!--end: mainContent 主体内容容器--&gt;

	&lt;div id="sideBar"&gt;
		&lt;div id="sideBarMain"&gt;
		&lt;div id="calendar"&gt;&lt;div id="blog-calendar" style="display:none"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogDefaultCalendar();&lt;/script&gt;&lt;/div&gt;
			
&lt;!--done--&gt;
&lt;div class="newsItem"&gt;
&lt;h3 class="catListTitle"&gt;公告&lt;/h3&gt;
	&lt;div id="blog-news"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogNews();&lt;/script&gt;
&lt;/div&gt;
			
			
			&lt;div id="leftcontentcontainer"&gt;
				&lt;div id="blog-sidecolumn"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogSideColumn();&lt;/script&gt;
			&lt;/div&gt;
			
		&lt;/div&gt;&lt;!--end: sideBarMain --&gt;
	&lt;/div&gt;&lt;!--end: sideBar 侧边栏容器 --&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;/div&gt;&lt;!--end: main --&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="footer"&gt;
		
&lt;!--done--&gt;
Copyright &amp;copy;2014 热气球
	&lt;/div&gt;&lt;!--end: footer --&gt;
&lt;/div&gt;&lt;!--end: home 自定义的最大容器 --&gt;
&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-zealotrouge-</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/zealotrouge/</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-zealotrouge-</UUID>
</Page>