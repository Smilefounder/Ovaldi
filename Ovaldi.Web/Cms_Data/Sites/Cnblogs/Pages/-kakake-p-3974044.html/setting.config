<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-kakake-p-3974044.html</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html&gt;
&lt;html lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;十五、EnterpriseFrameWork框架核心类库之系统启动入口与初始化 - kakake - 博客园&lt;/title&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/bundles/blog-common.css"&gt;
&lt;link id="MainCss" type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/skins/BlackLowKey/bundle-BlackLowKey.css"&gt;
&lt;link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/kakake/rss"&gt;
&lt;link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/kakake/rsd.xml"&gt;
&lt;link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/kakake/wlwmanifest.xml"&gt;
&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;  
&lt;script type="text/javascript"&gt;var currentBlogApp = 'kakake', cb_enable_mathjax=false;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/blog-common.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a name="top"&gt;&lt;/a&gt;

&lt;!--done--&gt;
&lt;div id="home"&gt;
&lt;div id="header"&gt;
	&lt;div id="blogTitle"&gt;
	&lt;a id="lnkBlogLogo" href="http://www.cnblogs.com/kakake/"&gt;&lt;img id="blogLogo" src="/preview~Cnblogs/Images/Skins/custom/images/logo.gif" alt="返回主页"&gt;&lt;/a&gt;			
		
&lt;!--done--&gt;
&lt;h1&gt;&lt;a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/kakake/"&gt;kakake&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;做产品需要的不是框架，需要的是积累，做项目需要的是框架，方便快速完成任务。
讨论QQ群：326578267&lt;/h2&gt;



		
	&lt;/div&gt;&lt;!--end: blogTitle 博客的标题和副标题 --&gt;
	&lt;div id="navigator"&gt;
		
&lt;ul id="navList"&gt;
&lt;li&gt;&lt;a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/"&gt;博客园&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/kakake/"&gt;首页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="menu" href="http://q.cnblogs.com/"&gt;博问&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="menu" href="http://home.cnblogs.com/ing/"&gt;闪存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1"&gt;新随笔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_ContactLink" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/kakake"&gt;联系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/kakake/rss"&gt;订阅&lt;/a&gt;
&lt;!--&lt;a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/kakake/rss"&gt;&lt;img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /&gt;&lt;/a&gt;--&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/"&gt;管理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
		&lt;div class="blogStats"&gt;
			
			
&lt;!--done--&gt;
随笔- 16&amp;nbsp;
文章- 0&amp;nbsp;
评论- 227&amp;nbsp;

			
		&lt;/div&gt;&lt;!--end: blogStats --&gt;
	&lt;/div&gt;&lt;!--end: navigator 博客导航栏 --&gt;
&lt;/div&gt;&lt;!--end: header 头部 --&gt;

&lt;div id="main"&gt;
	&lt;div id="mainContent"&gt;
	&lt;div class="forFlow"&gt;
		

&lt;!--done--&gt;
&lt;div id="topics"&gt;
	&lt;div class="post"&gt;
		&lt;h1 class="postTitle"&gt;
			&lt;a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/kakake/p/3974044.html"&gt;十五、EnterpriseFrameWork框架核心类库之系统启动入口与初始化&lt;/a&gt;
		&lt;/h1&gt;
		&lt;div class="clear"&gt;&lt;/div&gt;
		&lt;div class="postBody"&gt;
			&lt;div id="cnblogs_post_body"&gt;&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;本章内容是讲三种开发模式，web模式、Winform模式和Wcf模式的系统启动入口有什么区别，以及启动后系统初始化的内容；为什么要把这些单独提出来讲一章，因为我觉得本章非常重要，&lt;span style="background-color: #ffff00;"&gt;我们都知道程序中的main()函数，称之为主函数，是所有程序运行的入口；当你拿着一个程序肯定是从这个函数开始阅读，慢慢的深入了解整个程序的运行流程；而光看那些功能代码块是掌握不了系统运行时的一些机制的；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style="background-color: #ffff00;"&gt;只有掌握本章的内容后，那么在以后项目中遇到的问题基本上都能直接定位，并找到产生的原因，不然你会觉得所有产生的问题都莫名其妙，不知道从哪里下手调试；项目中的配置文件也是在系统初始化中使用的，要了解配置的值到底有什么作用也必须搞清楚系统初始化的过程，还有就是框架中的很多设计思想就是基于此处产生的，最典型的就是控制器的设计，为什么控制器要如此设计，看完后应该会深有体会；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;接下来我就分别对框架中的几种模式的系统启动入口进行讲解：&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;1.Web版系统启动入口&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;2.Winform版系统启动入口&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;3.Wcf版系统启动入口&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;4.启动后初始化内容&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;源代码目录结构：&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;img src="http://images.cnitblog.com/blog/79997/201409/160017349406773.jpg" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 class="p0"&gt;&lt;span style="font-size: 18pt; font-family: 'Microsoft YaHei';"&gt;一、Web版系统启动入口&lt;/span&gt;&lt;/h1&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Web版是三层结构程序，但跟wcf版又不一样，分为浏览器、Web服务器和数据库，所有代码都是部署在Web服务器上的，Windows下的常用web服务器就是IIS了；Net下的web系统启动入口通常都是使用Global.asax文件；是可以把初始化代码AppGlobal放在此文件中，但是框架为什么没有这么做，因为开始的设计就是在EFWWeb项目中是不能写任何cs代码的，想想看如果EFWWeb项目没有cs代码，那么就只有html代码和javascript代码，这样EFWWeb项目就不需要编译，要编译的代码都放在逻辑层项目中，我们发布就变得非常方便，只需拷贝更新逻辑层项目的dll和EFWWeb项目的aspx文件和js文件；如果只修改了界面那编译都不用了；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="background-color: #ffff00;"&gt;那么启动入口不在Global.asax文件中那又在哪了，框架利用了httpModules来实现&lt;/span&gt;；先看AppGlobalHttpModule对象的代码，继承net框架中的IHttpModule接口，在实现的Init方法中通过context.BeginRequest事件调用了AppGlobal.AppStart方法实现系统初始化；&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('7fe294db-bdc1-4283-bdf7-30289d66e570')"&gt;&lt;img id="code_img_closed_7fe294db-bdc1-4283-bdf7-30289d66e570" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_7fe294db-bdc1-4283-bdf7-30289d66e570" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('7fe294db-bdc1-4283-bdf7-30289d66e570',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_7fe294db-bdc1-4283-bdf7-30289d66e570" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt; &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 2&lt;/span&gt;     &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; web系统启动调用此对象
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 3&lt;/span&gt;     &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 4&lt;/span&gt;     &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;class&lt;/span&gt;&lt;span style="color: #000000;"&gt; AppGlobalHttpModule : IHttpModule
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 5&lt;/span&gt; &lt;span style="color: #000000;"&gt;    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 6&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 7&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;#region&lt;/span&gt; IHttpModule 成员
&lt;span style="color: #008080;"&gt; 8&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 9&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; Dispose()
&lt;/span&gt;&lt;span style="color: #008080;"&gt;10&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;11&lt;/span&gt; &lt;span style="color: #000000;"&gt;            AppGlobal.AppEnd();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;12&lt;/span&gt; &lt;span style="color: #000000;"&gt;        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;13&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;private&lt;/span&gt;&lt;span style="color: #000000;"&gt; HttpApplication _context;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;14&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; Init(HttpApplication context)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;15&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;16&lt;/span&gt;             _context =&lt;span style="color: #000000;"&gt; context;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;17&lt;/span&gt;             context.BeginRequest += &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; EventHandler(context_BeginRequest);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;18&lt;/span&gt; &lt;span style="color: #000000;"&gt;        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;19&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;20&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt; context_BeginRequest(&lt;span style="color: #0000ff;"&gt;object&lt;/span&gt;&lt;span style="color: #000000;"&gt; sender, EventArgs e)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;21&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;22&lt;/span&gt;             AppGlobal.AppRootPath = _context.Server.MapPath(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;~/&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;23&lt;/span&gt; &lt;span style="color: #000000;"&gt;            AppGlobal.AppStart(AppGlobalType.Web);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;24&lt;/span&gt; &lt;span style="color: #000000;"&gt;        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;25&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;26&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;#endregion&lt;/span&gt;
&lt;span style="color: #008080;"&gt;27&lt;/span&gt;     }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;在Web.config配置文件中需要对AppGlobalHttpModule&amp;nbsp;对象进行配置；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;img src="http://images.cnitblog.com/blog/79997/201409/160018552844428.jpg" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&lt;span style="background-color: #ffff00;"&gt;Web版系统就是利用httpModules来实现的，再讨论一下页面想后台控制器进行Http请求的的流程&lt;/span&gt;；如下图，界面javascript代码利用jquery中的Ajax功能向Web服务器发送请求，Url地址指定控制器的名称和控制器方法名称；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;img src="http://images.cnitblog.com/blog/79997/201409/160019346435670.jpg" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;Web服务器利用httpHandlers来接收前端的所有请求，看一下APIHttpHandler的代码，继承net框架中的IHttpHandler接口，在实现接口的ProcessRequest方法中根据url中的控制器名称和方法名称，利用反射机制创建Web控制器，并执行控制器中的方法返回结果输出到页面；&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('43e60766-62fc-4657-b00b-8c749361486e')"&gt;&lt;img id="code_img_closed_43e60766-62fc-4657-b00b-8c749361486e" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_43e60766-62fc-4657-b00b-8c749361486e" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('43e60766-62fc-4657-b00b-8c749361486e',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_43e60766-62fc-4657-b00b-8c749361486e" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt;  1&lt;/span&gt; &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt;  2&lt;/span&gt;     &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; Http请求处理对象
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  3&lt;/span&gt;     &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt;  4&lt;/span&gt;     &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;class&lt;/span&gt;&lt;span style="color: #000000;"&gt; APIHttpHandler : IHttpHandler, IRequiresSessionState
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  5&lt;/span&gt; &lt;span style="color: #000000;"&gt;    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  6&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt;  7&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 您将需要在您网站的 web.config 文件中配置此处理程序，
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  8&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 并向 IIS 注册此处理程序，然后才能进行使用。有关详细信息，
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  9&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 请参见下面的链接: &lt;/span&gt;&lt;span style="color: #008000; text-decoration: underline;"&gt;http://go.microsoft.com/?linkid=8101007&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 10&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 11&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;#region&lt;/span&gt; IHttpHandler Members
&lt;span style="color: #008080;"&gt; 12&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 13&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; ProcessRequest(HttpContext context)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 14&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 15&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 16&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;try&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 17&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 18&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (AppGlobal.IsRun == &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;) &lt;span style="color: #0000ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; Exception(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;系统未正常启动！&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 19&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; sController = context.Request[&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;controller&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;].ToString().Trim();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 20&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; sMothod = context.Request[&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;method&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;].ToString().Trim();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 21&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 22&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 23&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (!String.IsNullOrEmpty(sController) &amp;amp;&amp;amp; !&lt;span style="color: #000000;"&gt;String.IsNullOrEmpty(sMothod))
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 24&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 25&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 26&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    CmdInvoke(context, sController, sMothod);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 27&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 28&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 29&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 30&lt;/span&gt;                     context.Response.Write(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;error&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;);&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;命令错误&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 31&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 32&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 33&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;catch&lt;/span&gt;&lt;span style="color: #000000;"&gt; (Exception err)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 34&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 35&lt;/span&gt;                 context.Response.Write(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;exception&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;);&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;执行异常
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 36&lt;/span&gt;                 &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;记录错误日志&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 37&lt;/span&gt;                ZhyContainer.CreateException().HandleException(err, &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;HISPolicy&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 38&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 39&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;finally&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 40&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 41&lt;/span&gt; &lt;span style="color: #000000;"&gt;                context.Response.End();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 42&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 43&lt;/span&gt; &lt;span style="color: #000000;"&gt;        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 44&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 45&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;bool&lt;/span&gt;&lt;span style="color: #000000;"&gt; IsReusable
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 46&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 47&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;get&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 48&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 49&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;return&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 50&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 51&lt;/span&gt; &lt;span style="color: #000000;"&gt;        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 52&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 53&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;#endregion&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 54&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 55&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;private&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt; CmdInvoke(HttpContext context, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; sController, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="color: #000000;"&gt; sMothod)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 56&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 57&lt;/span&gt;             List&amp;lt;Cmd_Controller&amp;gt; cmd = (List&amp;lt;Cmd_Controller&amp;gt;)AppGlobal.cache.GetData(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;cmdWebController&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 58&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 59&lt;/span&gt;             Cmd_Controller cmdC = cmd.Find(x =&amp;gt; x.controllerName ==&lt;span style="color: #000000;"&gt; sController);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 60&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (cmdC != &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 61&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 62&lt;/span&gt;                 Cmd_Method cmdM= cmdC.cmdMethod.Find(x =&amp;gt; x.methodName ==&lt;span style="color: #000000;"&gt; sMothod);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 63&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (cmdM != &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 64&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 65&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (System.Configuration.ConfigurationManager.AppSettings[&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;TurnOnLoginRight&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;] == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;true&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; &amp;amp;&amp;amp; cmdC.webController.GetSysLoginRight.UserId == &lt;span style="color: #800080;"&gt;0&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 66&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 67&lt;/span&gt;                         context.Response.Write(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;nologin&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;);&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;没登陆&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 68&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 69&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 70&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 71&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;每次请求控制器必须创建一个新的数据库链接
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 72&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;if (cmdC.webController.GetDb() == null)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 73&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;{&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 74&lt;/span&gt;                         EFWCoreLib.CoreFrame.DbProvider.AbstractDatabase Rdb =&lt;span style="color: #000000;"&gt; EFWCoreLib.CoreFrame.DbProvider.FactoryDatabase.GetDatabase();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 75&lt;/span&gt;                         Rdb.WorkId =&lt;span style="color: #000000;"&gt; cmdC.webController.GetSysLoginRight.WorkId;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 76&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;创建数据库连接&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 77&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        cmdC.webController.BindDb(Rdb, AppGlobal.container);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 78&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 79&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (cmdM.dbkeys != &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt; &amp;amp;&amp;amp; cmdM.dbkeys.Count &amp;gt; &lt;span style="color: #800080;"&gt;0&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 80&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 81&lt;/span&gt;                             cmdC.webController.BindMoreDb(Rdb, &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;default&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 82&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;foreach&lt;/span&gt; (&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; dbkey &lt;span style="color: #0000ff;"&gt;in&lt;/span&gt;&lt;span style="color: #000000;"&gt; cmdM.dbkeys)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 83&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 84&lt;/span&gt;                                 EFWCoreLib.CoreFrame.DbProvider.AbstractDatabase _Rdb =&lt;span style="color: #000000;"&gt; EFWCoreLib.CoreFrame.DbProvider.FactoryDatabase.GetDatabase(dbkey);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 85&lt;/span&gt;                                 _Rdb.WorkId =&lt;span style="color: #000000;"&gt; cmdC.webController.GetSysLoginRight.WorkId;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 86&lt;/span&gt;                                 &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;创建数据库连接&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 87&lt;/span&gt; &lt;span style="color: #000000;"&gt;                                cmdC.webController.BindMoreDb(_Rdb,dbkey);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 88&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 89&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 90&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 91&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;}&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 92&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        BeginInvoke(context, cmdC.webController);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 93&lt;/span&gt;                         cmdM.methodInfo.Invoke(cmdC.webController, &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 94&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        EndInvoke(context, cmdC.webController);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 95&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 96&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 97&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 98&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 99&lt;/span&gt;                     context.Response.Write(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;error&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;);&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;命令错误&lt;/span&gt;
&lt;span style="color: #008080;"&gt;100&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;101&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;102&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt;103&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;104&lt;/span&gt;                 context.Response.Write(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;error&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;);&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;命令错误&lt;/span&gt;
&lt;span style="color: #008080;"&gt;105&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;106&lt;/span&gt;         }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;在Web.Config配置文件中需要对APIHttpHandler对象进行配置&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;img src="http://images.cnitblog.com/blog/79997/201409/160020390186836.jpg" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei'; background-color: #ffff00;"&gt;总结一下，Web版页面调用后台控制器的过程，利用Ajax发送Http请求被APIHttpHandler对象接收，APIHttpHandler对象解析Http请求通过反射创建控制器对象并执行方法，最后讲结果用Json格式输出到页面；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;相关资料：&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;关于HttpHandlers和HttpModules的不同&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&lt;a href="http://www.cnblogs.com/ricksun/articles/1545491.html"&gt;http://www.cnblogs.com/ricksun/articles/1545491.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;httpModules&amp;nbsp;与&amp;nbsp;httpHandlers&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&lt;a href="http://www.cnblogs.com/chenlulouis/archive/2009/12/18/1626918.html"&gt;http://www.cnblogs.com/chenlulouis/archive/2009/12/18/1626918.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;h1 class="p0"&gt;&lt;span style="font-size: 18pt; font-family: 'Microsoft YaHei';"&gt;二、Winform版系统启动入口&lt;/span&gt;&lt;/h1&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei'; background-color: #ffff00;"&gt;Winform版是一个两层结构的程序，客户端和服务端，服务端就是数据库，每一个客户端运行都是独立的程序运行环境，Winform版客户端就是一个Windows窗体应用程序，所以我们直接找启动项目的Program类的Main函数；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;img src="http://images.cnitblog.com/blog/79997/201409/160022418313417.jpg" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;上面AppGlobal_Init()是通过界面FrmSplash用委托的方式调用的，这是由于系统做初始化的时候需要一定时间，为了让用户觉得程序正在运行，显示一个正在加载的界面效果比较好；我们接着看AppGlobal_Init()函数代码，这里会读配置文件中值，进行判断是Winform还是WCFClient方式，本节先说Winform方式，先执行AppGlobal.AppStart(AppGlobalType.Winform)进行系统初始化，AppGlobal对象封装了所有模式的初始化代码；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;img src="http://images.cnitblog.com/blog/79997/201409/160023123461694.jpg" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;到此Winform版的初始化入口就讲完了，AppGlobal对象最后一节我们再看；Winform版是三种模式中相对最容易看懂的了；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei'; background-color: #ffff00;"&gt;另外再讲一下Winform版的操作请求流程，系统登录进入菜单主界面后，点击菜单按钮就会打开窗体界面，我们讲讲这个过程的实现代码。&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei'; background-color: #ffff00;"&gt;&lt;img src="http://images.cnitblog.com/blog/79997/201409/160024534402276.jpg" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;先找到按钮的点击事件，从菜单的Tag对象获取菜单的配置信息，最后调用ShowForm(winmenu)方法；&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('c5fcf822-7c70-43b2-8c23-e16df6523adf')"&gt;&lt;img id="code_img_closed_c5fcf822-7c70-43b2-8c23-e16df6523adf" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_c5fcf822-7c70-43b2-8c23-e16df6523adf" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('c5fcf822-7c70-43b2-8c23-e16df6523adf',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_c5fcf822-7c70-43b2-8c23-e16df6523adf" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt;  &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;点击菜单&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 2&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt; btnmenu_Click(&lt;span style="color: #0000ff;"&gt;object&lt;/span&gt;&lt;span style="color: #000000;"&gt; sender, EventArgs e)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 3&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 4&lt;/span&gt;             btnImage =&lt;span style="color: #000000;"&gt; sender;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 5&lt;/span&gt;             BaseItem baseItem = sender &lt;span style="color: #0000ff;"&gt;as&lt;/span&gt;&lt;span style="color: #000000;"&gt; BaseItem;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 6&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 7&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (baseItem.Tag.ToString() != &lt;span style="color: #800000;"&gt;""&lt;/span&gt; &amp;amp;&amp;amp; baseItem.Tag.GetType() != &lt;span style="color: #0000ff;"&gt;typeof&lt;/span&gt;&lt;span style="color: #000000;"&gt;(BaseModule))
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 8&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 9&lt;/span&gt;                 BaseMenu menu =&lt;span style="color: #000000;"&gt; (BaseMenu)baseItem.Tag;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;10&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;11&lt;/span&gt;                 WinMenu winmenu = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; WinMenu();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;12&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (Program.clienttype == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;Winform&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;13&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;14&lt;/span&gt;                     winmenu.DllName =&lt;span style="color: #000000;"&gt; menu.DllName;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;15&lt;/span&gt;                     winmenu.FunName =&lt;span style="color: #000000;"&gt; menu.FunName;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;16&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;17&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (Program.clienttype == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;WCFClient&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;18&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;19&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;[] names = menu.FunWcfName.Split(&lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;char&lt;/span&gt;[] { &lt;span style="color: #800000;"&gt;'&lt;/span&gt;&lt;span style="color: #800000;"&gt;@&lt;/span&gt;&lt;span style="color: #800000;"&gt;'&lt;/span&gt;&lt;span style="color: #000000;"&gt; });
&lt;/span&gt;&lt;span style="color: #008080;"&gt;20&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (names.Length == &lt;span style="color: #800080;"&gt;2&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;21&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;22&lt;/span&gt;                         winmenu.DllName = names[&lt;span style="color: #800080;"&gt;0&lt;/span&gt;&lt;span style="color: #000000;"&gt;];
&lt;/span&gt;&lt;span style="color: #008080;"&gt;23&lt;/span&gt;                         winmenu.FunName = names[&lt;span style="color: #800080;"&gt;1&lt;/span&gt;&lt;span style="color: #000000;"&gt;];
&lt;/span&gt;&lt;span style="color: #008080;"&gt;24&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;25&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;26&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (Program.clienttype == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;WEBClient&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;27&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;28&lt;/span&gt;                     winmenu.DllName = &lt;span style="color: #800000;"&gt;""&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;29&lt;/span&gt;                     winmenu.FunName = &lt;span style="color: #800000;"&gt;""&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;30&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;31&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;32&lt;/span&gt;                 &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;winmenu.DllName = menu.DllName;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;33&lt;/span&gt;                 &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;winmenu.FunName = menu.FunName;&lt;/span&gt;
&lt;span style="color: #008080;"&gt;34&lt;/span&gt;                 winmenu.IsOutlookBar =&lt;span style="color: #000000;"&gt; menu.MenuLookBar;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;35&lt;/span&gt;                 winmenu.IsToolBar =&lt;span style="color: #000000;"&gt; menu.MenuToolBar;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;36&lt;/span&gt;                 winmenu.Memo =&lt;span style="color: #000000;"&gt; menu.Memo;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;37&lt;/span&gt;                 winmenu.MenuId =&lt;span style="color: #000000;"&gt; menu.MenuId;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;38&lt;/span&gt;                 winmenu.ModuleId =&lt;span style="color: #000000;"&gt; menu.ModuleId;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;39&lt;/span&gt;                 winmenu.Name =&lt;span style="color: #000000;"&gt; menu.Name;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;40&lt;/span&gt;                 winmenu.PMenuId =&lt;span style="color: #000000;"&gt; menu.PMenuId;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;41&lt;/span&gt;                 winmenu.SortId =&lt;span style="color: #000000;"&gt; menu.SortId;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;42&lt;/span&gt;                 winmenu.UrlPath = System.Configuration.ConfigurationSettings.AppSettings[&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;WEB_serverUrl&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;] +&lt;span style="color: #000000;"&gt; menu.UrlName;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;43&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;44&lt;/span&gt; &lt;span style="color: #000000;"&gt;                ShowForm(winmenu);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;45&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;46&lt;/span&gt;         }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;打开ShowForm()方法的代码，这段代码的意思就是找到需要打开的界面Form对象，在显示在主界面的Tab中；其中BaseController&amp;nbsp;basec&amp;nbsp;=&amp;nbsp;ControllerCreatorFactory.ControllerCreator(menu,&amp;nbsp;delegateCloseTable)是本段代码的重点，调用此方法创建控制器对象，并获取控制器包含的界面Form；&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('c8adf203-d620-4028-866b-5e18d28cce0d')"&gt;&lt;img id="code_img_closed_c8adf203-d620-4028-866b-5e18d28cce0d" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_c8adf203-d620-4028-866b-5e18d28cce0d" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('c8adf203-d620-4028-866b-5e18d28cce0d',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_c8adf203-d620-4028-866b-5e18d28cce0d" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt;  1&lt;/span&gt;  &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; ShowForm(WinMenu menu)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  2&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  3&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;int&lt;/span&gt; index = &lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;&lt;span style="color: #000000;"&gt;.barMainContainer.Items.IndexOf(menu.MenuId.ToString());
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  4&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (index &amp;lt; &lt;span style="color: #800080;"&gt;0&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  5&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  6&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;.IsNullOrEmpty(menu.FunName) == &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt; || &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;.IsNullOrEmpty(menu.UrlPath) == &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  7&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  8&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;#region&lt;/span&gt; winform界面
&lt;span style="color: #008080;"&gt;  9&lt;/span&gt;                     List&amp;lt;DockContainerItem&amp;gt; listitem = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; List&amp;lt;DockContainerItem&amp;gt;&lt;span style="color: #000000;"&gt;();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 10&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 11&lt;/span&gt;                     CloseTab delegateCloseTable = &lt;span style="color: #0000ff;"&gt;delegate&lt;/span&gt;&lt;span style="color: #000000;"&gt;()
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 12&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 13&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;foreach&lt;/span&gt; (DockContainerItem item &lt;span style="color: #0000ff;"&gt;in&lt;/span&gt;&lt;span style="color: #000000;"&gt; listitem)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 14&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            barMainContainer.CloseDockTab(item);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 15&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    };
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 16&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 17&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 18&lt;/span&gt;                    
&lt;span style="color: #008080;"&gt; 19&lt;/span&gt;                     Form form = &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 20&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (Program.clienttype == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;Winform&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 21&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 22&lt;/span&gt;                         BaseController basec =&lt;span style="color: #000000;"&gt; ControllerCreatorFactory.ControllerCreator(menu, delegateCloseTable);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 23&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;.IsNullOrEmpty(menu.FunName) == &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 24&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 25&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;[] funs = menu.FunName.Split(&lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;char&lt;/span&gt;[] { &lt;span style="color: #800000;"&gt;'&lt;/span&gt;&lt;span style="color: #800000;"&gt;|&lt;/span&gt;&lt;span style="color: #800000;"&gt;'&lt;/span&gt;&lt;span style="color: #000000;"&gt; });
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 26&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (funs.Length == &lt;span style="color: #800080;"&gt;1&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 27&lt;/span&gt;                                 form =&lt;span style="color: #000000;"&gt; (Form)basec.DefaultView;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 28&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 29&lt;/span&gt;                                 form = (Form)basec.iBaseView[funs[&lt;span style="color: #800080;"&gt;1&lt;/span&gt;&lt;span style="color: #000000;"&gt;]];
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 30&lt;/span&gt;                         }&lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 31&lt;/span&gt;                             form =&lt;span style="color: #000000;"&gt; (Form)basec.DefaultView;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 32&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 33&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (Program.clienttype == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;WCFClient&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 34&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 35&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;string dllfile = menu.DllName;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 36&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;string controllername = menu.FunName.Split(new char[] { '|' })[0];&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 37&lt;/span&gt;                         BaseWCFClientController basec =&lt;span style="color: #000000;"&gt; ControllerCreatorFactory.WCFControllerCreator(menu, delegateCloseTable);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 38&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;.IsNullOrEmpty(menu.FunName) == &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 39&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 40&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;[] funs = menu.FunName.Split(&lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;char&lt;/span&gt;[] { &lt;span style="color: #800000;"&gt;'&lt;/span&gt;&lt;span style="color: #800000;"&gt;|&lt;/span&gt;&lt;span style="color: #800000;"&gt;'&lt;/span&gt;&lt;span style="color: #000000;"&gt; });
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 41&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (funs.Length == &lt;span style="color: #800080;"&gt;1&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 42&lt;/span&gt;                                 form =&lt;span style="color: #000000;"&gt; (Form)basec.DefaultView;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 43&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 44&lt;/span&gt;                                 form = (Form)basec.iBaseView[funs[&lt;span style="color: #800080;"&gt;1&lt;/span&gt;&lt;span style="color: #000000;"&gt;]];
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 45&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 46&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 47&lt;/span&gt;                             form =&lt;span style="color: #000000;"&gt; (Form)basec.DefaultView;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 48&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 49&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 50&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (form != &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 51&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 52&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        barMainContainer.BeginInit();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 53&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;int&lt;/span&gt; displayWay = EFWCoreLib.WinformFrame.Common.CustomConfigManager.GetDisplayWay();&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;显示方式 0 标准 1全屏&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 54&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (displayWay == &lt;span style="color: #800080;"&gt;1&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 55&lt;/span&gt;                             form.Dock =&lt;span style="color: #000000;"&gt; DockStyle.Fill;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 56&lt;/span&gt;                         form.Size = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; Size(&lt;span style="color: #800080;"&gt;1000&lt;/span&gt;, &lt;span style="color: #800080;"&gt;600&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 57&lt;/span&gt;                         form.FormBorderStyle =&lt;span style="color: #000000;"&gt; FormBorderStyle.None;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 58&lt;/span&gt;                         form.TopLevel = &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 59&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (&lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;.barMainContainer.Width &amp;gt;&lt;span style="color: #000000;"&gt; form.Width)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 60&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 61&lt;/span&gt;                             form.Location = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; Point((barMainContainer.Width - form.Width) / &lt;span style="color: #800080;"&gt;2&lt;/span&gt;, &lt;span style="color: #800080;"&gt;0&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 62&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 63&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 64&lt;/span&gt;                             form.Location = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; Point(&lt;span style="color: #800080;"&gt;0&lt;/span&gt;, &lt;span style="color: #800080;"&gt;0&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 65&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        form.Show();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 66&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 67&lt;/span&gt;                         PanelDockContainer panelDockMain = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; PanelDockContainer();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 68&lt;/span&gt;                         panelDockMain.Dock =&lt;span style="color: #000000;"&gt; DockStyle.Fill;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 69&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        panelDockMain.Controls.Add(form);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 70&lt;/span&gt;                         panelDockMain.Location = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; System.Drawing.Point(&lt;span style="color: #800080;"&gt;3&lt;/span&gt;, &lt;span style="color: #800080;"&gt;28&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 71&lt;/span&gt;                         panelDockMain.Style.Alignment =&lt;span style="color: #000000;"&gt; System.Drawing.StringAlignment.Center;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 72&lt;/span&gt;                         panelDockMain.Style.GradientAngle = &lt;span style="color: #800080;"&gt;90&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 73&lt;/span&gt;                         panelDockMain.BackColor = Color.FromArgb(&lt;span style="color: #800080;"&gt;227&lt;/span&gt;, &lt;span style="color: #800080;"&gt;239&lt;/span&gt;, &lt;span style="color: #800080;"&gt;255&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 74&lt;/span&gt;                         panelDockMain.AutoScroll = &lt;span style="color: #0000ff;"&gt;true&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 75&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 76&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 77&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 78&lt;/span&gt;                         DockContainerItem item = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; DockContainerItem(form.Text);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 79&lt;/span&gt;                         item.Text =&lt;span style="color: #000000;"&gt; menu.Name;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 80&lt;/span&gt;                         item.Name =&lt;span style="color: #000000;"&gt; menu.MenuId.ToString();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 81&lt;/span&gt;                         item.Control =&lt;span style="color: #000000;"&gt; panelDockMain;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 82&lt;/span&gt;                         item.Visible = &lt;span style="color: #0000ff;"&gt;true&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 83&lt;/span&gt;                         item.Tag = form;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;绑定界面对象&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 84&lt;/span&gt;                         item.Image =&lt;span style="color: #000000;"&gt; GetButtonImage(btnImage);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 85&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 86&lt;/span&gt;                         item.VisibleChanged += &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; EventHandler(item_VisibleChanged);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 87&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;this.barMainContainer.Controls.Add(panelDockMain);&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 88&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;&lt;span style="color: #000000;"&gt;.barMainContainer.Items.Add(item);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 89&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;.barMainContainer.SelectedDockContainerItem =&lt;span style="color: #000000;"&gt; item;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 90&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 91&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 92&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        listitem.Add(item);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 93&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 94&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 95&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        barMainContainer.EndInit();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 96&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;&lt;span style="color: #000000;"&gt;.barMainContainer.Show();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 97&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 98&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;#endregion&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 99&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;100&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;101&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt;102&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;103&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;.barMainContainer.SelectedDockContainerItem = (DockContainerItem)&lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;&lt;span style="color: #000000;"&gt;.barMainContainer.Items[index];
&lt;/span&gt;&lt;span style="color: #008080;"&gt;104&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; formname = ((DockContainerItem)&lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;&lt;span style="color: #000000;"&gt;.barMainContainer.Items[index]).Tag.GetType().Name;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;105&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (formname == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;FrmWebBrowser&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;106&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;107&lt;/span&gt;                     EFWCoreLib.WinformFrame.WebBrowser.IfrmWebBrowserView webbrowser = (EFWCoreLib.WinformFrame.WebBrowser.IfrmWebBrowserView)((DockContainerItem)&lt;span style="color: #0000ff;"&gt;this&lt;/span&gt;&lt;span style="color: #000000;"&gt;.barMainContainer.Items[index]).Tag;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;108&lt;/span&gt;                     webbrowser.NavigateUrl();&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;重新加载网址&lt;/span&gt;
&lt;span style="color: #008080;"&gt;109&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;110&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;111&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;112&lt;/span&gt;         }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;接着我们将ControllerCreatorFactory创建控制器的工厂类，所以这里使用了一个工厂模型用来创建不同的控制器，包含Winform界面控制器、WcfClient界面控制器和浏览器界面控制器；我们这里先看创建Winform界面控制器的实现方法InstanceController();此方法通过菜单配置的控制器名称，利用反射机制找到控制器与控制器自定义标签定义的界面Form，这样主界面就可以显示此界面Form在Tab页中；&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('a1012556-b31d-48da-ac5f-4b40797a0495')"&gt;&lt;img id="code_img_closed_a1012556-b31d-48da-ac5f-4b40797a0495" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_a1012556-b31d-48da-ac5f-4b40797a0495" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('a1012556-b31d-48da-ac5f-4b40797a0495',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_a1012556-b31d-48da-ac5f-4b40797a0495" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;override&lt;/span&gt;&lt;span style="color: #000000;"&gt; Object InstanceController(CloseTab close)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 2&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 3&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;try&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 4&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 5&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 6&lt;/span&gt;                 &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;加载类库&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 7&lt;/span&gt;                 Assembly assembly = &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 8&lt;/span&gt;                 assembly = Assembly.LoadFrom(AppGlobal.AppRootPath + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;\\&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; +&lt;span style="color: #000000;"&gt; dllfile);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 9&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;10&lt;/span&gt;                 &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;获得控制器类（型）&lt;/span&gt;
&lt;span style="color: #008080;"&gt;11&lt;/span&gt;                 Type type = assembly.GetType(controllername, &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;, &lt;span style="color: #0000ff;"&gt;true&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;12&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;13&lt;/span&gt;                 MenuAttribute[] menuAttribute = (MenuAttribute[])type.GetCustomAttributes(&lt;span style="color: #0000ff;"&gt;typeof&lt;/span&gt;(MenuAttribute), &lt;span style="color: #0000ff;"&gt;true&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;14&lt;/span&gt;                 ViewAttribute[] viewAttribute = (ViewAttribute[])type.GetCustomAttributes(&lt;span style="color: #0000ff;"&gt;typeof&lt;/span&gt;(ViewAttribute), &lt;span style="color: #0000ff;"&gt;true&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;15&lt;/span&gt;                 &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;ServiceAttribute[] serviceAttribute = (ServiceAttribute[])type.GetCustomAttributes(typeof(ServiceAttribute), true);&lt;/span&gt;
&lt;span style="color: #008080;"&gt;16&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;17&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (menuAttribute.Length &amp;gt; &lt;span style="color: #800080;"&gt;0&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;18&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;19&lt;/span&gt;                     Dictionary&amp;lt;&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;, IBaseView&amp;gt; viewDic = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; Dictionary&amp;lt;&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;, IBaseView&amp;gt;&lt;span style="color: #000000;"&gt;();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;20&lt;/span&gt;                     &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;Dictionary&amp;lt;string, SoapHttpClientProtocol&amp;gt; serviceDic = new Dictionary&amp;lt;string, SoapHttpClientProtocol&amp;gt;();&lt;/span&gt;
&lt;span style="color: #008080;"&gt;21&lt;/span&gt;                     BaseController controller =&lt;span style="color: #000000;"&gt; (BaseController)System.Activator.CreateInstance(type);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;22&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;23&lt;/span&gt;                     EFWCoreLib.CoreFrame.DbProvider.AbstractDatabase Rdb =&lt;span style="color: #000000;"&gt; EFWCoreLib.CoreFrame.DbProvider.FactoryDatabase.GetDatabase();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;24&lt;/span&gt;                     Rdb.WorkId =&lt;span style="color: #000000;"&gt; controller.GetSysLoginRight.WorkId;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;25&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    controller.BindDb(Rdb, AppGlobal.container);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;26&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;27&lt;/span&gt;                     controller.closeTab = close;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;关闭窗口&lt;/span&gt;
&lt;span style="color: #008080;"&gt;28&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;29&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;for&lt;/span&gt; (&lt;span style="color: #0000ff;"&gt;int&lt;/span&gt; index = &lt;span style="color: #800080;"&gt;0&lt;/span&gt;; index &amp;lt; viewAttribute.Length; index++&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;30&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;31&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (viewAttribute[index].ViewType == &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;32&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;33&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="color: #000000;"&gt;.IsNullOrEmpty(viewAttribute[index].DllName))
&lt;/span&gt;&lt;span style="color: #008080;"&gt;34&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;35&lt;/span&gt;                                 &lt;span style="color: #0000ff;"&gt;continue&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;36&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;37&lt;/span&gt;                             Assembly _assembly = Assembly.LoadFrom(AppGlobal.AppRootPath + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;\\&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; +&lt;span style="color: #000000;"&gt; viewAttribute[index].DllName);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;38&lt;/span&gt;                             viewAttribute[index].ViewType = _assembly.GetType(viewAttribute[index].ViewTypeName, &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;, &lt;span style="color: #0000ff;"&gt;true&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;39&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;40&lt;/span&gt;                         IBaseView view =&lt;span style="color: #000000;"&gt; (IBaseView)System.Activator.CreateInstance(viewAttribute[index].ViewType);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;41&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (viewAttribute[index].DefaultView) controller._defaultView =&lt;span style="color: #000000;"&gt; view;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;42&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (index == &lt;span style="color: #800080;"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; viewAttribute.ToList().FindIndex(x =&amp;gt; x.DefaultView == &lt;span style="color: #0000ff;"&gt;true&lt;/span&gt;) == -&lt;span style="color: #800080;"&gt;1&lt;/span&gt;) controller._defaultView =&lt;span style="color: #000000;"&gt; view;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;43&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        viewDic.Add(viewAttribute[index].ViewType.Name, view);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;44&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;45&lt;/span&gt;                     &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;for (int index = 0; index &amp;lt; serviceAttribute.Length; index++)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;46&lt;/span&gt;                     &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;{
&lt;/span&gt;&lt;span style="color: #008080;"&gt;47&lt;/span&gt;                     &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;    SoapHttpClientProtocol service = (SoapHttpClientProtocol)System.Activator.CreateInstance(serviceAttribute[index].ServiceType);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;48&lt;/span&gt;                     &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;    serviceDic.Add(serviceAttribute[index].ServiceType.Name, service);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;49&lt;/span&gt;                     &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;}&lt;/span&gt;
&lt;span style="color: #008080;"&gt;50&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;51&lt;/span&gt;                     controller.iBaseView =&lt;span style="color: #000000;"&gt; viewDic;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;52&lt;/span&gt;                     &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;controller.service = serviceDic;&lt;/span&gt;
&lt;span style="color: #008080;"&gt;53&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;54&lt;/span&gt;                     controller.Init();&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;初始化&lt;/span&gt;
&lt;span style="color: #008080;"&gt;55&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="color: #000000;"&gt; controller;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;56&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;57&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;58&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;return&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;59&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;60&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;catch&lt;/span&gt;&lt;span style="color: #000000;"&gt; (Exception err)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;61&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;62&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;throw&lt;/span&gt;&lt;span style="color: #000000;"&gt; err;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;63&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;64&lt;/span&gt;         }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei'; background-color: #ffff00;"&gt;总结一下Winform版调用控制器的过程，点击菜单按钮根据菜单的配置信息，ViewCreator对象创建对应的控制器，显示控制器自定义标签包含的界面；接着界面可以通过InvokeController方法执行控制器中的代码；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;h1 class="p0"&gt;&lt;span style="font-size: 18pt; font-family: 'Microsoft YaHei';"&gt;三、Wcf版系统启动入口&lt;/span&gt;&lt;/h1&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;Wcf版是三层结构的程序，包括客户端、中间件和数据库，其中客户端的启动入口与上面Winform版的差不多，实现的方式一样的，用配置参数ClientType进行区分；重点讲一下中间件WCFHosting服务主机的启动入口；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;查看WCFHosting程序点击启动按钮的事件代码，代码打开一个WCF的ServiceHost，绑定WCFHandlerService对象；&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('29181e46-a52d-462b-8ab3-615b98b38cc7')"&gt;&lt;img id="code_img_closed_29181e46-a52d-462b-8ab3-615b98b38cc7" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_29181e46-a52d-462b-8ab3-615b98b38cc7" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('29181e46-a52d-462b-8ab3-615b98b38cc7',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_29181e46-a52d-462b-8ab3-615b98b38cc7" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt;  &lt;span style="color: #0000ff;"&gt;private&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; StartAppHost()
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 2&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 3&lt;/span&gt;             Loader.hostwcfclientinfoList = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; HostWCFClientInfoListHandler(BindGridClient);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 4&lt;/span&gt;             Loader.hostwcfMsg = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; HostWCFMsgHandler(AddMsg);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 5&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 6&lt;/span&gt;             mAppHost = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; ServiceHost(&lt;span style="color: #0000ff;"&gt;typeof&lt;/span&gt;&lt;span style="color: #000000;"&gt;(WCFHandlerService));
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 7&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 8&lt;/span&gt;             ServiceMetadataBehavior smb = mAppHost.Description.Behaviors.Find&amp;lt;ServiceMetadataBehavior&amp;gt;&lt;span style="color: #000000;"&gt;();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 9&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (smb == &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;10&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;11&lt;/span&gt;                 mAppHost.Description.Behaviors.Add(&lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; ServiceMetadataBehavior());
&lt;/span&gt;&lt;span style="color: #008080;"&gt;12&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;13&lt;/span&gt;             mAppHost.AddServiceEndpoint(&lt;span style="color: #0000ff;"&gt;typeof&lt;/span&gt;(IMetadataExchange), MetadataExchangeBindings.CreateMexTcpBinding(), &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;mex&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;14&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;15&lt;/span&gt; &lt;span style="color: #000000;"&gt;            mAppHost.Open();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;16&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;17&lt;/span&gt;             AddMsg(DateTime.Now, &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;WCF主机启动完成&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;18&lt;/span&gt;            
&lt;span style="color: #008080;"&gt;19&lt;/span&gt;         }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;接着查看WCFHandlerService服务对象代码，执行构造函数调用了&amp;nbsp;AppGlobal.AppStart(AppGlobalType.WCF)进行系统初始化；&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('632828ca-f9d7-4430-8df3-aba829891d35')"&gt;&lt;img id="code_img_closed_632828ca-f9d7-4430-8df3-aba829891d35" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_632828ca-f9d7-4430-8df3-aba829891d35" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('632828ca-f9d7-4430-8df3-aba829891d35',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_632828ca-f9d7-4430-8df3-aba829891d35" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt;  &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt;&lt;span style="color: #000000;"&gt; WCFHandlerService()
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 2&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 3&lt;/span&gt;             &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;mCallBackList = new List&amp;lt;IClientService&amp;gt;();&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 4&lt;/span&gt;             Loader.ShowHostMsg(DateTime.Now, &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;WCFHandlerService服务正在初始化...&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 5&lt;/span&gt;             AppGlobal.AppRootPath = System.Windows.Forms.Application.StartupPath + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;\\&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 6&lt;/span&gt; &lt;span style="color: #000000;"&gt;            AppGlobal.AppStart(AppGlobalType.WCF);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 7&lt;/span&gt;             Loader.ShowHostMsg(DateTime.Now, &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;WCFHandlerService服务初始化完成&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 8&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 9&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (Convert.ToInt32(HostSettingConfig.GetValue(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;heartbeat&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;)) == &lt;span style="color: #800080;"&gt;1&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;10&lt;/span&gt; &lt;span style="color: #000000;"&gt;                Loader.StartListenClients();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;11&lt;/span&gt;         }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&lt;span style="background-color: #ffff00;"&gt;服务主机的启动过程就是这样，接着我们再讲一下WCF版的客户端向WCFHosting中间件请求的流程&lt;/span&gt;；先看客户端控制器调用Wcf服务的代码，是通过InvokeWCFService方法指定后台wcf控制器的名称和方法名；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;img src="http://images.cnitblog.com/blog/79997/201409/160029413465718.jpg" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;接着看InvokeWCFService方法的实现代码，通过调用WCFService对象的ProcessRequest来执行WCFHandlerService服务；这段代码利用wcf服务实现了客户端和中间件之间的通讯；&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('363af6c9-8ad1-4673-a702-961136c61e80')"&gt;&lt;img id="code_img_closed_363af6c9-8ad1-4673-a702-961136c61e80" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_363af6c9-8ad1-4673-a702-961136c61e80" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('363af6c9-8ad1-4673-a702-961136c61e80',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_363af6c9-8ad1-4673-a702-961136c61e80" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt;  &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;virtual&lt;/span&gt; Object InvokeWCFService(&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; controller, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; method, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="color: #000000;"&gt; jsondata)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 2&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 3&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 4&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="color: #000000;"&gt; retJson;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 5&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;using&lt;/span&gt; (&lt;span style="color: #0000ff;"&gt;var&lt;/span&gt; scope = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; OperationContextScope(WCFService &lt;span style="color: #0000ff;"&gt;as&lt;/span&gt;&lt;span style="color: #000000;"&gt; IContextChannel))
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 6&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 7&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;var&lt;/span&gt; router = System.ServiceModel.Channels.MessageHeader.CreateHeader(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;routerID&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;, myNamespace, AppGlobal.cache.GetData(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;routerID&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;).ToString());
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 8&lt;/span&gt; &lt;span style="color: #000000;"&gt;                OperationContext.Current.OutgoingMessageHeaders.Add(router);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 9&lt;/span&gt;                 retJson =&lt;span style="color: #000000;"&gt; WCFService.ProcessRequest(ClientID, controller, method, jsondata);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;10&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;11&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;object&lt;/span&gt; Result =&lt;span style="color: #000000;"&gt; JavaScriptConvert.DeserializeObject(retJson);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;12&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;int&lt;/span&gt; ret = Convert.ToInt32(((Newtonsoft.Json.JavaScriptObject)(Result))[&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;flag&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;]);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;13&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; msg = ((Newtonsoft.Json.JavaScriptObject)(Result))[&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;msg&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;].ToString();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;14&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (ret == &lt;span style="color: #800080;"&gt;1&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;15&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;16&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; Exception(msg);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;17&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;18&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt;19&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;20&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;return&lt;/span&gt; ((Newtonsoft.Json.JavaScriptObject)(Result))[&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;data&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;];
&lt;/span&gt;&lt;span style="color: #008080;"&gt;21&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;22&lt;/span&gt;         }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;再接着看WCFHandlerService服务对于ProcessRequest方法的实现，通过参数传递的控制器名称和方法名称利用反射机制执行wcf控制器中的代码；&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('d3e1cd91-525c-411c-b339-91efb941c51b')"&gt;&lt;img id="code_img_closed_d3e1cd91-525c-411c-b339-91efb941c51b" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_d3e1cd91-525c-411c-b339-91efb941c51b" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('d3e1cd91-525c-411c-b339-91efb941c51b',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_d3e1cd91-525c-411c-b339-91efb941c51b" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; ProcessRequest(&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; mProxyID, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; controller, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; method, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="color: #000000;"&gt; jsondata)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 2&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 3&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;try&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 4&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 5&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (Convert.ToInt32(HostSettingConfig.GetValue(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;debug&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;)) == &lt;span style="color: #800080;"&gt;1&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 6&lt;/span&gt;                     Loader.ShowHostMsg(DateTime.Now, &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;客户端[&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + mProxyID + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;]正在执行：&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + controller + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;.&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + method + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;(&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + jsondata + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;)&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 7&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; retJson =&lt;span style="color: #000000;"&gt; Loader.ProcessRequest(mProxyID, controller, method, jsondata);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 8&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;return&lt;/span&gt; &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;{\"flag\":0,\"msg\":&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;\"\"&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;,\"data\":&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + retJson + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;}&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 9&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;10&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;catch&lt;/span&gt;&lt;span style="color: #000000;"&gt; (Exception err)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;11&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;12&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (err.InnerException == &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;13&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;14&lt;/span&gt;                     Loader.ShowHostMsg(DateTime.Now, &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;客户端[&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + mProxyID + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;]执行失败：&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + controller + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;.&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + method + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;(&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + jsondata + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;)\n错误原因：&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; +&lt;span style="color: #000000;"&gt; err.Message);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;15&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;return&lt;/span&gt; &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;{\"flag\":1,\"msg\":&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;\"&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + err.Message + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;\"&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;}&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;16&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;17&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt;18&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;19&lt;/span&gt;                     Loader.ShowHostMsg(DateTime.Now, &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;客户端[&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + mProxyID + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;]执行失败：&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + controller + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;.&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + method + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;(&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + jsondata + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;)\n错误原因：&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; +&lt;span style="color: #000000;"&gt; err.InnerException.Message);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;20&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;return&lt;/span&gt; &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;{\"flag\":1,\"msg\":&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;\"&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + err.InnerException.Message + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;\"&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;}&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;21&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;22&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;23&lt;/span&gt;         }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('c762a53f-165a-40c1-9ee0-b6a0251cea94')"&gt;&lt;img id="code_img_closed_c762a53f-165a-40c1-9ee0-b6a0251cea94" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_c762a53f-165a-40c1-9ee0-b6a0251cea94" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('c762a53f-165a-40c1-9ee0-b6a0251cea94',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_c762a53f-165a-40c1-9ee0-b6a0251cea94" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt;1&lt;/span&gt;  &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; ProcessRequest(&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; mProxyID, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; controller, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; method, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="color: #000000;"&gt; jsondata)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;2&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;3&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (remoteLoaderDic[mProxyID] != &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;4&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;5&lt;/span&gt;                 RemoteLoaderController mRemoteLoader =&lt;span style="color: #000000;"&gt; remoteLoaderDic[mProxyID];
&lt;/span&gt;&lt;span style="color: #008080;"&gt;6&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="color: #000000;"&gt; mRemoteLoader.InvokeController(wcfClientDic[mProxyID], controller, method, jsondata);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;7&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;8&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;return&lt;/span&gt; &lt;span style="color: #800000;"&gt;""&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;9&lt;/span&gt;         }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('95ca1bcf-13aa-42d1-8e79-65b6bca56030')"&gt;&lt;img id="code_img_closed_95ca1bcf-13aa-42d1-8e79-65b6bca56030" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_95ca1bcf-13aa-42d1-8e79-65b6bca56030" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('95ca1bcf-13aa-42d1-8e79-65b6bca56030',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_95ca1bcf-13aa-42d1-8e79-65b6bca56030" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; InvokeController(WCFClientInfo clientinfo, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; controller, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; method, &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="color: #000000;"&gt; jsondata)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 2&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 3&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;try&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 4&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 5&lt;/span&gt;                 &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;ViewHandler = _viewH;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 6&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;object&lt;/span&gt;[] paramValue = &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;jsondata?&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 7&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;object&lt;/span&gt; retObj = &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 8&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; retJson = &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 9&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;10&lt;/span&gt;                 List&amp;lt;Cmd_WCFController&amp;gt; cmd = (List&amp;lt;Cmd_WCFController&amp;gt;)AppGlobal.cache.GetData(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;cmdWcfController&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;11&lt;/span&gt;                 Cmd_WCFController cmdC = cmd.Find(x =&amp;gt; x.controllerName ==&lt;span style="color: #000000;"&gt; controller);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;12&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (cmdC != &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;13&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;14&lt;/span&gt;                     cmdC.wcfController.ParamJsonData =&lt;span style="color: #000000;"&gt; jsondata;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;15&lt;/span&gt;                     cmdC.wcfController.ClientInfo =&lt;span style="color: #000000;"&gt; clientinfo;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;16&lt;/span&gt;                     Cmd_WCFMethod cmdM = cmdC.cmdMethod.Find(x =&amp;gt; x.methodName ==&lt;span style="color: #000000;"&gt; method);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;17&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (cmdM != &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;18&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;19&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (controller == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;LoginController&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; || controller == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;TestWCFController&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;20&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;21&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;22&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt;23&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;24&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (System.Configuration.ConfigurationManager.AppSettings[&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;TurnOnLoginRight&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;] == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;true&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; &amp;amp;&amp;amp; clientinfo.LoginRight == &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;25&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;26&lt;/span&gt;                                 &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;context.Response.Write("nologin");&lt;/span&gt;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;没登陆&lt;/span&gt;
&lt;span style="color: #008080;"&gt;27&lt;/span&gt;                                 &lt;span style="color: #0000ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; Exception(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;没登陆&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;28&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;29&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;30&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;31&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;每次请求控制器必须创建一个新的数据库链接&lt;/span&gt;
&lt;span style="color: #008080;"&gt;32&lt;/span&gt;                         EFWCoreLib.CoreFrame.DbProvider.AbstractDatabase Rdb =&lt;span style="color: #000000;"&gt; EFWCoreLib.CoreFrame.DbProvider.FactoryDatabase.GetDatabase();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;33&lt;/span&gt;                         Rdb.WorkId =&lt;span style="color: #000000;"&gt; cmdC.wcfController.GetSysLoginRight.WorkId;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;34&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;创建数据库连接&lt;/span&gt;
&lt;span style="color: #008080;"&gt;35&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        cmdC.wcfController.BindDb(Rdb, AppGlobal.container);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;36&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;37&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (cmdM.dbkeys != &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt; &amp;amp;&amp;amp; cmdM.dbkeys.Count &amp;gt; &lt;span style="color: #800080;"&gt;0&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;38&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;39&lt;/span&gt;                             cmdC.wcfController.BindMoreDb(Rdb, &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;default&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;40&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;foreach&lt;/span&gt; (&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt; dbkey &lt;span style="color: #0000ff;"&gt;in&lt;/span&gt;&lt;span style="color: #000000;"&gt; cmdM.dbkeys)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;41&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;42&lt;/span&gt;                                 EFWCoreLib.CoreFrame.DbProvider.AbstractDatabase _Rdb =&lt;span style="color: #000000;"&gt; EFWCoreLib.CoreFrame.DbProvider.FactoryDatabase.GetDatabase(dbkey);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;43&lt;/span&gt;                                 _Rdb.WorkId =&lt;span style="color: #000000;"&gt; cmdC.wcfController.GetSysLoginRight.WorkId;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;44&lt;/span&gt;                                 &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;创建数据库连接&lt;/span&gt;
&lt;span style="color: #008080;"&gt;45&lt;/span&gt; &lt;span style="color: #000000;"&gt;                                cmdC.wcfController.BindMoreDb(_Rdb, dbkey);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;46&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;47&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;48&lt;/span&gt;                         retObj =&lt;span style="color: #000000;"&gt; cmdM.methodInfo.Invoke(cmdC.wcfController, paramValue);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;49&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;50&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt;51&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;52&lt;/span&gt;                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;context.Response.Write("error");&lt;/span&gt;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;命令错误&lt;/span&gt;
&lt;span style="color: #008080;"&gt;53&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; Exception(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;控制器[&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + cmdC.controllerName + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;]，没有[&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + cmdM.methodName + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;]方法！&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;54&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;55&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;56&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt;57&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;58&lt;/span&gt;                     &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;context.Response.Write("error");&lt;/span&gt;&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;命令错误&lt;/span&gt;
&lt;span style="color: #008080;"&gt;59&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; Exception(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;没有控制器[&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + cmdC.controllerName + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;]&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;60&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;61&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (retObj != &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;62&lt;/span&gt;                     retJson =&lt;span style="color: #000000;"&gt; retObj.ToString();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;63&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;return&lt;/span&gt;&lt;span style="color: #000000;"&gt; retJson;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;64&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;65&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;catch&lt;/span&gt;&lt;span style="color: #000000;"&gt; (Exception ex)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;66&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;67&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (ex.InnerException == &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;68&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; Exception(ex.Message);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;69&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt;70&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; Exception(ex.InnerException.Message);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;71&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;72&lt;/span&gt;         }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei'; background-color: #ffff00;"&gt;总结一下wcf版的客户端向中间件发送请求的过程，客户端控制器利用WCFHandlerService服务通讯中间件，并发送需要执行的控制器名称和方法，中间件WCFHandlerService服务接收请求并根据参数利用反射调用wcf控制器的代码返回执行结果；&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;h1 class="p0"&gt;&lt;span style="font-size: 18pt; font-family: 'Microsoft YaHei';"&gt;四、启动后初始化内容&lt;/span&gt;&lt;/h1&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 通过上面对系统启动入口的讲解我们知道所有模式的初始化内容都是封装在AppGlobal对象中的，初始化的类型包括四种Web、Winform、WCF、WCFClient；WCFClient类型最简单，只要创建EntLib中的缓存对象；另外三种类型内容包括：&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;1）EntLib中的Unity对象、Cache对象&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;2）定义定时任务、委托代码对象&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;3）配置信息，BusinessDll、IsSaas、EFWUnity&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;4）Web类型加载实体、web控制器、WebService服务&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;5）WCF类型加载实体、wcf控制器&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;6）Winform类型加载实体&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;7）初始化定时任务、委托代码和系统启动停止扩展&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;8）测试数据库连接&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;再就是对启动的过程进行了日志记录，还有整个过程在系统中只能执行一次；&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;enum&lt;/span&gt;&lt;span style="color: #000000;"&gt; AppGlobalType

    {

        Web,Winform,WCF,WCFClient

    }&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;AppGlobal对象代码&lt;/span&gt;&lt;/p&gt;
&lt;div class="cnblogs_code" onclick="cnblogs_code_show('e95cc643-28eb-43b2-b786-2bc15271d684')"&gt;&lt;img id="code_img_closed_e95cc643-28eb-43b2-b786-2bc15271d684" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""&gt;&lt;img id="code_img_opened_e95cc643-28eb-43b2-b786-2bc15271d684" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide('e95cc643-28eb-43b2-b786-2bc15271d684',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""&gt;
&lt;div id="cnblogs_code_open_e95cc643-28eb-43b2-b786-2bc15271d684" class="cnblogs_code_hide"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt;  1&lt;/span&gt;  &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt;  2&lt;/span&gt;     &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 系统启动前初始化环境
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  3&lt;/span&gt;     &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt;  4&lt;/span&gt;     &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;class&lt;/span&gt;&lt;span style="color: #000000;"&gt; AppGlobal
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  5&lt;/span&gt; &lt;span style="color: #000000;"&gt;    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  6&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt;  7&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 应用程序根目录
&lt;/span&gt;&lt;span style="color: #008080;"&gt;  8&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt;  9&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="color: #000000;"&gt; AppRootPath;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 10&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 11&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 12&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 逻辑层程序集
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 13&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 14&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; List&amp;lt;&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&amp;gt;&lt;span style="color: #000000;"&gt; BusinessDll;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 15&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 16&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 17&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 是否启动成功
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 18&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 19&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;bool&lt;/span&gt; IsRun = &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 20&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 21&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 是否Saas模式，where条件是否加workid
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 22&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 23&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;bool&lt;/span&gt; IsSaas = &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 24&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 25&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 26&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; Unity对象容器
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 27&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 28&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt;&lt;span style="color: #000000;"&gt; IUnityContainer container;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 29&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 30&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 企业库缓存
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 31&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 32&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt;&lt;span style="color: #000000;"&gt; ICacheManager cache;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 33&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 34&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 35&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 定制任务
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 36&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 37&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; List&amp;lt;TimingTask&amp;gt;&lt;span style="color: #000000;"&gt; taskList;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 38&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 39&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 40&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt;&lt;span style="color: #008000;"&gt; 委托代码
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 41&lt;/span&gt;         &lt;span style="color: #808080;"&gt;///&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 42&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt;&lt;span style="color: #000000;"&gt; Hashtable codeList;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 43&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 44&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 45&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;private&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;bool&lt;/span&gt; _isCalled = &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 46&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 47&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;private&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;object&lt;/span&gt; locker = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;object&lt;/span&gt;&lt;span style="color: #000000;"&gt;();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 48&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 49&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; AppStart(AppGlobalType appType)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 50&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 51&lt;/span&gt;             &lt;span style="color: #0000ff;"&gt;lock&lt;/span&gt;&lt;span style="color: #000000;"&gt; (locker)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 52&lt;/span&gt; &lt;span style="color: #000000;"&gt;            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 53&lt;/span&gt;                 &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (_isCalled == &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 54&lt;/span&gt; &lt;span style="color: #000000;"&gt;                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 55&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;try&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 56&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 57&lt;/span&gt;                         WriterLog(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;--------------------------------&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 58&lt;/span&gt;                         WriterLog(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;应用开始启动！&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 59&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (appType ==&lt;span style="color: #000000;"&gt; AppGlobalType.WCFClient)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 60&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 61&lt;/span&gt;                             cache =&lt;span style="color: #000000;"&gt; ZhyContainer.CreateCache();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 62&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 63&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;else&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 64&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 65&lt;/span&gt;                             &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;初始化静态变量&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 66&lt;/span&gt;                             container =&lt;span style="color: #000000;"&gt; ZhyContainer.CreateUnity();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 67&lt;/span&gt;                             cache =&lt;span style="color: #000000;"&gt; ZhyContainer.CreateCache();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 68&lt;/span&gt;                             taskList = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; List&amp;lt;TimingTask&amp;gt;&lt;span style="color: #000000;"&gt;();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 69&lt;/span&gt;                             codeList = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt;&lt;span style="color: #000000;"&gt; Hashtable();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 70&lt;/span&gt;                             &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;加载引用业务程序集&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 71&lt;/span&gt;                             BusinessDll = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; List&amp;lt;&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&amp;gt;&lt;span style="color: #000000;"&gt;();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 72&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;[] dllfiles = System.Configuration.ConfigurationManager.AppSettings[&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;BusinessDll&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;].Split(&lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;char&lt;/span&gt;[] { &lt;span style="color: #800000;"&gt;'&lt;/span&gt;&lt;span style="color: #800000;"&gt;|&lt;/span&gt;&lt;span style="color: #800000;"&gt;'&lt;/span&gt;&lt;span style="color: #000000;"&gt; });
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 73&lt;/span&gt;                             BusinessDll =&lt;span style="color: #000000;"&gt; dllfiles.ToList();
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 74&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 75&lt;/span&gt;                             IsSaas = System.Configuration.ConfigurationManager.AppSettings[&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;IsSaas&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;] == &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;true&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; ? &lt;span style="color: #0000ff;"&gt;true&lt;/span&gt; : &lt;span style="color: #0000ff;"&gt;false&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 76&lt;/span&gt;                             &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;加载Unity配置&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 77&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;var&lt;/span&gt; fileMap = &lt;span style="color: #0000ff;"&gt;new&lt;/span&gt; ExeConfigurationFileMap { ExeConfigFilename = AppRootPath + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;Config/EFWUnity.config&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt; };
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 78&lt;/span&gt;                             System.Configuration.Configuration configuration =&lt;span style="color: #000000;"&gt; ConfigurationManager.OpenMappedExeConfiguration(fileMap, ConfigurationUserLevel.None);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 79&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;var&lt;/span&gt; unitySection = (UnityConfigurationSection)configuration.GetSection(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;unity&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 80&lt;/span&gt;                             ZhyContainer.AddUnity(unitySection);&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;判断EntLib的路径对不对&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 81&lt;/span&gt;                             
&lt;span style="color: #008080;"&gt; 82&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 83&lt;/span&gt;                             &lt;span style="color: #0000ff;"&gt;if&lt;/span&gt; (BusinessDll.Count &amp;gt; &lt;span style="color: #800080;"&gt;0&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 84&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 85&lt;/span&gt;                                 &lt;span style="color: #0000ff;"&gt;switch&lt;/span&gt;&lt;span style="color: #000000;"&gt; (appType)
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 86&lt;/span&gt; &lt;span style="color: #000000;"&gt;                                {
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 87&lt;/span&gt;                                     &lt;span style="color: #0000ff;"&gt;case&lt;/span&gt;&lt;span style="color: #000000;"&gt; AppGlobalType.Web:
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 88&lt;/span&gt;                                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;加载Entity自定义配置&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 89&lt;/span&gt;                                         EFWCoreLib.CoreFrame.BusinessArchitecture.Entity_Attribute.LoadEntityAttribute(AppRootPath+&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;bin/&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;,BusinessDll, cache);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 90&lt;/span&gt;                                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;加载WebController到缓存(此地方可能存在并发BUG)&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 91&lt;/span&gt; &lt;span style="color: #000000;"&gt;                                        EFWCoreLib.WebFrame.Controller.Cmd_Controller.LoadCmdController(BusinessDll, cache);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 92&lt;/span&gt; &lt;span style="color: #000000;"&gt;                                        EFWCoreLib.WebFrame.HttpHandler.WebServiceInvoker.LoadWebService(BusinessDll, cache);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 93&lt;/span&gt;                                         &lt;span style="color: #0000ff;"&gt;break&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 94&lt;/span&gt;                                     &lt;span style="color: #0000ff;"&gt;case&lt;/span&gt;&lt;span style="color: #000000;"&gt; AppGlobalType.WCF:
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 95&lt;/span&gt;                                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;加载Entity自定义配置&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 96&lt;/span&gt; &lt;span style="color: #000000;"&gt;                                        EFWCoreLib.CoreFrame.BusinessArchitecture.Entity_Attribute.LoadEntityAttribute(AppRootPath, BusinessDll, cache);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 97&lt;/span&gt; &lt;span style="color: #000000;"&gt;                                        EFWCoreLib.WCFHandler.Cmd_WCFController.LoadCmdController(BusinessDll, cache);
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 98&lt;/span&gt;                                         &lt;span style="color: #0000ff;"&gt;break&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 99&lt;/span&gt;                                     &lt;span style="color: #0000ff;"&gt;case&lt;/span&gt;&lt;span style="color: #000000;"&gt; AppGlobalType.Winform:
&lt;/span&gt;&lt;span style="color: #008080;"&gt;100&lt;/span&gt;                                         &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;加载Entity自定义配置&lt;/span&gt;
&lt;span style="color: #008080;"&gt;101&lt;/span&gt; &lt;span style="color: #000000;"&gt;                                        EFWCoreLib.CoreFrame.BusinessArchitecture.Entity_Attribute.LoadEntityAttribute(AppRootPath, BusinessDll, cache);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;102&lt;/span&gt;                                         &lt;span style="color: #0000ff;"&gt;break&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;103&lt;/span&gt; &lt;span style="color: #000000;"&gt;                                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;104&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;105&lt;/span&gt;                             &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;初始化Web定制任务&lt;/span&gt;
&lt;span style="color: #008080;"&gt;106&lt;/span&gt;                             MultiTask.Init(container, taskList);&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;任务                       
&lt;/span&gt;&lt;span style="color: #008080;"&gt;107&lt;/span&gt;                             &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;是否开启Web控制器请求权限认证
&lt;/span&gt;&lt;span style="color: #008080;"&gt;108&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;109&lt;/span&gt;                             &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;扩展Global，网站程序启动、停止可自定义代码&lt;/span&gt;
&lt;span style="color: #008080;"&gt;110&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            GlobalExtend.StartInit();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;111&lt;/span&gt;                             &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;初始化委托代码&lt;/span&gt;
&lt;span style="color: #008080;"&gt;112&lt;/span&gt;                             ExecuteFun.Init(container, codeList);&lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;执行函数
&lt;/span&gt;&lt;span style="color: #008080;"&gt;113&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;114&lt;/span&gt;                             &lt;span style="color: #008000;"&gt;//&lt;/span&gt;&lt;span style="color: #008000;"&gt;测试数据库连接&lt;/span&gt;
&lt;span style="color: #008080;"&gt;115&lt;/span&gt; &lt;span style="color: #000000;"&gt;                            EFWCoreLib.CoreFrame.DbProvider.FactoryDatabase.TestDbConnection();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;116&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;117&lt;/span&gt; &lt;span style="color: #000000;"&gt;                        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;118&lt;/span&gt;                         _isCalled = &lt;span style="color: #0000ff;"&gt;true&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;119&lt;/span&gt;                         WriterLog(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;应用启动成功！&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;120&lt;/span&gt;                         WriterLog(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;--------------------------------&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;121&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;122&lt;/span&gt;                         IsRun = &lt;span style="color: #0000ff;"&gt;true&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;123&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;124&lt;/span&gt;                     &lt;span style="color: #0000ff;"&gt;catch&lt;/span&gt;&lt;span style="color: #000000;"&gt;(Exception err)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;125&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;126&lt;/span&gt;                         AppGlobal.WriterLog(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;应用启动失败！&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;127&lt;/span&gt;                         AppGlobal.WriterLog(&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;--------------------------------&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;128&lt;/span&gt;                         &lt;span style="color: #0000ff;"&gt;throw&lt;/span&gt;&lt;span style="color: #000000;"&gt; err;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;129&lt;/span&gt; &lt;span style="color: #000000;"&gt;                    }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;130&lt;/span&gt; &lt;span style="color: #000000;"&gt;                }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;131&lt;/span&gt; &lt;span style="color: #000000;"&gt;            }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;132&lt;/span&gt; &lt;span style="color: #000000;"&gt;        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;133&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;134&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; AppStart()
&lt;/span&gt;&lt;span style="color: #008080;"&gt;135&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;136&lt;/span&gt; &lt;span style="color: #000000;"&gt;            AppStart(AppGlobalType.WCF);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;137&lt;/span&gt; &lt;span style="color: #000000;"&gt;        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;138&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;139&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt;&lt;span style="color: #000000;"&gt; AppEnd()
&lt;/span&gt;&lt;span style="color: #008080;"&gt;140&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;141&lt;/span&gt; &lt;span style="color: #000000;"&gt;            GlobalExtend.EndInit();
&lt;/span&gt;&lt;span style="color: #008080;"&gt;142&lt;/span&gt; &lt;span style="color: #000000;"&gt;        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;143&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;144&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;public&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;static&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;void&lt;/span&gt; WriterLog(&lt;span style="color: #0000ff;"&gt;string&lt;/span&gt;&lt;span style="color: #000000;"&gt; info)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;145&lt;/span&gt; &lt;span style="color: #000000;"&gt;        {
&lt;/span&gt;&lt;span style="color: #008080;"&gt;146&lt;/span&gt;             info = &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;时间：&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + DateTime.Now.ToString() + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;\t\t&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;内容：&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt; + info + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;\r\n&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;147&lt;/span&gt;             File.AppendAllText(AppRootPath + &lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #800000;"&gt;startlog.txt&lt;/span&gt;&lt;span style="color: #800000;"&gt;"&lt;/span&gt;&lt;span style="color: #000000;"&gt;, info);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;148&lt;/span&gt; &lt;span style="color: #000000;"&gt;        }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;149&lt;/span&gt;       
&lt;span style="color: #008080;"&gt;150&lt;/span&gt;     }&lt;/pre&gt;
&lt;/div&gt;
&lt;span class="cnblogs_code_collapse"&gt;View Code&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h1 class="p0"&gt;&lt;span style="font-size: 18pt; font-family: 'Microsoft YaHei';"&gt;五、系统启动入口与操作请求流程&lt;/span&gt;&lt;/h1&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;img src="http://images.cnitblog.com/blog/79997/201409/160015520652236.png" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&lt;img src="http://images.cnitblog.com/blog/79997/201409/160016105814280.png" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="p0"&gt;&lt;span style="font-size: 14px; font-family: 'Microsoft YaHei';"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;div id="MySignature"&gt;&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="blog_post_info_block"&gt;
&lt;div id="BlogPostCategory"&gt;&lt;/div&gt;
&lt;div id="EntryTag"&gt;&lt;/div&gt;
&lt;div id="blog_post_info"&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="post_next_prev"&gt;&lt;/div&gt;
&lt;/div&gt;


		&lt;/div&gt;
		&lt;div class="postDesc"&gt;posted @ &lt;span id="post-date"&gt;2014-09-16 00:33&lt;/span&gt; &lt;a href='http://www.cnblogs.com/kakake/'&gt;kakake&lt;/a&gt; 阅读(&lt;span id="post_view_count"&gt;...&lt;/span&gt;) 评论(&lt;span id="post_comment_count"&gt;...&lt;/span&gt;)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3974044" rel="nofollow"&gt;编辑&lt;/a&gt; &lt;a href="#" onclick="AddToWz(3974044);return false;"&gt;收藏&lt;/a&gt;&lt;/div&gt;
	&lt;/div&gt;
	&lt;script type="text/javascript"&gt;var allowComments=true,isLogined=false,cb_blogId=59278,cb_entryId=3974044,cb_blogApp=currentBlogApp,cb_blogUserGuid='6a61e6f0-0180-de11-be36-001cf0cd104b',cb_entryCreatedDate='2014/9/16 0:33:00';loadViewCount(cb_entryId);&lt;/script&gt;
	
&lt;/div&gt;&lt;!--end: topics 文章、评论容器--&gt;
&lt;a name="!comments"&gt;&lt;/a&gt;&lt;div id="blog-comments-placeholder"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var commentManager = new blogCommentManager();commentManager.renderComments(0);&lt;/script&gt;
&lt;div id="comment_form" class="commentform"&gt;
&lt;a name="commentform"&gt;&lt;/a&gt;
&lt;div id="divCommentShow"&gt;&lt;/div&gt;
&lt;div id="comment_nav"&gt;&lt;span id="span_refresh_tips"&gt;&lt;/span&gt;&lt;a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();"&gt;刷新评论&lt;/a&gt;&lt;a href="#" onclick="return RefreshPage();"&gt;刷新页面&lt;/a&gt;&lt;a href="#top"&gt;返回顶部&lt;/a&gt;&lt;/div&gt;
&lt;div id="comment_form_container"&gt;&lt;/div&gt;
&lt;div class="ad_text_commentbox" id="ad_text_under_commentbox"&gt;&lt;/div&gt;
&lt;div id="site_nav_under"&gt;&lt;a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园"&gt;博客园首页&lt;/a&gt;&lt;a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区"&gt;博问&lt;/a&gt;&lt;a href="http://news.cnblogs.com/" target="_blank" title="IT新闻"&gt;新闻&lt;/a&gt;&lt;a href="http://home.cnblogs.com/ing/" target="_blank"&gt;闪存&lt;/a&gt;&lt;a href="http://job.cnblogs.com/" target="_blank"&gt;程序员招聘&lt;/a&gt;&lt;a href="http://kb.cnblogs.com/" target="_blank"&gt;知识库&lt;/a&gt;&lt;/div&gt;
&lt;div id="opt_under_post"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    var enableGoogleAd = canShowAdsense(); var googletag = googletag || {}; googletag.cmd = googletag.cmd || [];
    fixPostBodyFormat();
&lt;/script&gt;
&lt;div id="ad_under_post_holder"&gt;
&lt;script type='text/javascript'&gt;
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        if (enableGoogleAd) {
            var gads = document.createElement('script');
            gads.async = true;
            gads.type = 'text/javascript';
            var useSSL = 'https:' == document.location.protocol;
            gads.src = (useSSL ? 'https:' : 'http:') + '//www.googletagservices.com/tag/js/gpt.js';
            var node = document.getElementsByTagName('script')[0];
            node.parentNode.insertBefore(gads, node);
        }
    })();
&lt;/script&gt;
&lt;script type='text/javascript'&gt;
    try {
        if (enableGoogleAd) {
            googletag.cmd.push(function () {
                googletag.defineSlot('/1090369/cnblogs_blogpost_C1_sitehome', [300, 250], 'div-gpt-ad-1346480159711-0').addService(googletag.pubads());
                googletag.pubads().enableSingleRequest();
                googletag.enableServices();
            });
        };
    } catch (e) { }
&lt;/script&gt;
&lt;div id="google_ad_c1" class="c_ad_block"&gt;
    &lt;div id='div-gpt-ad-1346480159711-0' style='width:300px; height:250px;'&gt;
    &lt;script type='text/javascript'&gt;
        try {
            if (enableGoogleAd) {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1346480159711-0'); });            
            } else {
                $('#div-gpt-ad-1346480159711-0').hide();
            }
    } catch (e) { }
    &lt;/script&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="blog_news_kb"&gt;&lt;/div&gt;
&lt;div id="HistoryToday" class="c_ad_block"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
&lt;/script&gt;
&lt;/div&gt;

	&lt;/div&gt;&lt;!--end: forFlow --&gt;
	&lt;/div&gt;&lt;!--end: mainContent 主体内容容器--&gt;

	&lt;div id="sideBar"&gt;
		&lt;div id="sideBarMain"&gt;
			
&lt;!--done--&gt;
&lt;div class="newsItem"&gt;
&lt;h3 class="catListTitle"&gt;公告&lt;/h3&gt;
	&lt;div id="blog-news"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogNews();&lt;/script&gt;
&lt;/div&gt;

			&lt;div id="blog-calendar" style="display:none"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogDefaultCalendar();&lt;/script&gt;
			
			&lt;div id="leftcontentcontainer"&gt;
				&lt;div id="blog-sidecolumn"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogSideColumn();&lt;/script&gt;
			&lt;/div&gt;
			
		&lt;/div&gt;&lt;!--end: sideBarMain --&gt;
	&lt;/div&gt;&lt;!--end: sideBar 侧边栏容器 --&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;/div&gt;&lt;!--end: main --&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="footer"&gt;
		
&lt;!--done--&gt;
Copyright &amp;copy;2014 kakake
	&lt;/div&gt;&lt;!--end: footer --&gt;
&lt;/div&gt;&lt;!--end: home 自定义的最大容器 --&gt;
&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-kakake-p-3974044.html</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/kakake/p/3974044.html</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-kakake-p-3974044.html</UUID>
</Page>