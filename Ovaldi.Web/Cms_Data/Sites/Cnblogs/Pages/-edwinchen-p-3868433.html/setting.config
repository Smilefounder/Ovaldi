<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-edwinchen-p-3868433.html</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html&gt;
&lt;html lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;数据库存储过程 — Sql Server - @瞪着太阳的乌鸦 - 博客园&lt;/title&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/bundles/blog-common.css"&gt;
&lt;link id="MainCss" type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/skins/facebook/bundle-facebook.css"&gt;
&lt;link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/edwinchen/rss"&gt;
&lt;link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/edwinchen/rsd.xml"&gt;
&lt;link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/edwinchen/wlwmanifest.xml"&gt;
&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;  
&lt;script type="text/javascript"&gt;var currentBlogApp = 'edwinchen', cb_enable_mathjax=false;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/blog-common.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a name="top"&gt;&lt;/a&gt;

&lt;div id="home"&gt;
&lt;div id="header"&gt;
	&lt;div id="blogTitle"&gt;
		
&lt;!--done--&gt;
&lt;h1&gt;&lt;a id="Header2_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/edwinchen/"&gt;瞪着太阳的乌鸦&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;The man shoud know when to leave the party!&lt;/h2&gt;



		
	&lt;/div&gt;&lt;!--end: blogTitle 博客的标题和副标题 --&gt;
	&lt;div id="navigator"&gt;
		
&lt;!--done--&gt;
			&lt;ul id="navList"&gt;
				&lt;li&gt;&lt;a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/"&gt;博客园&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;&lt;a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/edwinchen/"&gt;首页&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;&lt;a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1"&gt;新随笔&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;&lt;a id="MyLinks1_ContactLink" accesskey="9" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/%40%e7%9e%aa%e7%9d%80%e5%a4%aa%e9%98%b3%e7%9a%84%e4%b9%8c%e9%b8%a6"&gt;联系&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;&lt;a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/"&gt;管理&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;&lt;a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/edwinchen/rss"&gt;订阅&lt;/a&gt;
				&lt;a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/edwinchen/rss"&gt;&lt;img src="/preview~Cnblogs/Images/images/xml.gif" alt="订阅"&gt;&lt;/a&gt;&lt;/li&gt;
			&lt;/ul&gt;


		&lt;div class="blogStats"&gt;
			
			
&lt;!--done--&gt;
随笔- 5&amp;nbsp;
文章- 0&amp;nbsp;
评论- 8&amp;nbsp;

			
		&lt;/div&gt;&lt;!--end: blogStats --&gt;
	&lt;/div&gt;&lt;!--end: navigator 博客导航栏 --&gt;
&lt;/div&gt;&lt;!--end: header 头部 --&gt;

&lt;div id="main"&gt;
	&lt;div id="mainContent"&gt;
	&lt;div class="forFlow"&gt;
		

&lt;!--done--&gt;
&lt;div id="topics"&gt;
	&lt;div class="post"&gt;
		&lt;h1 class="postTitle"&gt;
			&lt;a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/edwinchen/p/3868433.html"&gt;数据库存储过程 — Sql Server&lt;/a&gt;
		&lt;/h1&gt;
		&lt;div class="clear"&gt;&lt;/div&gt;
		&lt;div class="postBody"&gt;
			&lt;div id="cnblogs_post_body"&gt;&lt;p&gt;Mysql、Oracle等主流关系型数据库基本都支持存储过程，这里使用Sql Server为例进行说明。&lt;/p&gt;
&lt;h2&gt;存储过程的概念：&lt;/h2&gt;
&lt;p&gt;Sql Server存储过程&lt;/p&gt;
&lt;p&gt;SQL Server 中的存储过程是由一个或多个 Transact-SQL 语句或对 Microsoft .NET Framework 公共语言运行时 (CLR) 方法的引用构成的一个组。 简单的说，非常类似与java中的方法，&lt;span style="background-color: #ffff99;"&gt;实质就是部署在数据库端的一组定义代码以及SQL&lt;/span&gt;。&lt;/p&gt;
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt;
&lt;h2&gt;存储过程的作用（优点）：&lt;/h2&gt;
&lt;p&gt;1.代码的重复使用&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 任何重复的数据库操作的代码都非常适合于在过程中进行封装。 这消除了不必要地重复编写相同的代码、降低了代码不一致性，并且允许拥有所需权限的任何用户或应用程序访问和执行代码。&lt;/p&gt;
&lt;p&gt;2.更强的安全性&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 多个用户和客户端程序可以通过过程对基础数据库对象执行操作，即使用户和程序对这些基础对象没有直接权限。 过程控制执行哪些进程和活动，并且保护基础数据库对象。 这消除在了单独的对象级别授予权限的要求，并且简化了安全层。&lt;/p&gt;
&lt;p&gt;3.更容易维护&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在客户端应用程序调用过程并且将数据库操作保持在数据层中时，对于基础数据库中的任何更改，只有过程是必须更新的。 应用程序层保持独立，并且不必知道对数据库布局、关系或进程的任何更改的情况。&lt;/p&gt;
&lt;p&gt;4.改进的性能&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 默认情况下，在首次执行过程时将编译过程，并且创建一个执行计划，供以后的执行重复使用。 因为查询处理器不必创建新计划，所以，它通常用更少的时间来处理过程。&lt;/p&gt;
&lt;p&gt;5.减少了服务器/客户端网络流量&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 过程中的命令作为代码的单个批处理执行。 这可以显著减少服务器和客户端之间的网络流量，因为只有对执行过程的调用才会跨网络发送。 如果没有过程提供的代码封装，每个单独的代码行都不得不跨网络发送。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color: #ffff99;"&gt;可以类比成java中的基础类库。总之就是高性能、安全、复用、易维护。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;存储过程的类型：&lt;/h2&gt;
&lt;p&gt;1.用户定义&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 用户定义的过程可在用户定义的数据库中创建，或者在除了 Resource 数据库之外的所有系统数据库中创建。&lt;/p&gt;
&lt;p&gt;2.临时&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 临时过程是用户定义过程的一种形式。 临时过程与永久过程相似，只是临时过程存储于 tempdb 中。&lt;/p&gt;
&lt;p&gt;3.系统&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 系统过程是 SQL Server 随附的。 它们物理上存储在内部隐藏的 Resource 数据库中，但逻辑上出现在每个系统定义数据库和用户定义数据库的 sys 架构中。&lt;/p&gt;
&lt;p&gt;4.扩展的用户定义过程（Deprecated，将被CLR存储过程替代，以后再专门开贴）&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 通过扩展的过程，可以使用 Java 之类的编程语言创建外部例程。 这些过程是 SQL Server 实例可以动态加载和运行的 DLL。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;创建表(Sql Server 2005)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;打开Microsoft SQL Server Management Studio&lt;/li&gt;
&lt;li&gt;建表表Sql语句：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #0000ff;"&gt;CREATE&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;TABLE&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;user&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;(userId &lt;span style="color: #0000ff;"&gt;int&lt;/span&gt;,userName &lt;span style="color: #0000ff;"&gt;NVARCHAR&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;20&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;,password &lt;span style="color: #0000ff;"&gt;NVARCHAR&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;20&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;);&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;　　3. &amp;nbsp;再随便填入一些数据。&lt;/p&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/i/644226/201407/251641419946101.png" alt="" width="190" height="224"&gt;&lt;/p&gt;
&lt;p&gt;　　4. &amp;nbsp;打开查询分析器，创建存储过程，如图。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;img src="http://images.cnitblog.com/i/644226/201407/251642169633319.png" alt="" width="274" height="333"&gt;&lt;/p&gt;
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt;
&lt;h2&gt;使用存储过程：&lt;/h2&gt;
&lt;p&gt;先来看一个简单的存储过程定义（我个人认为先看实例，再看语法是最好的学习方式，因为一开始上来就看语法，会让人摸不着北）：&lt;/p&gt;
&lt;h3&gt;1.不带参数&lt;/h3&gt;
&lt;p&gt;存储过程Name = select_del，获取user表中的全部记录。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt;1&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;CREATE&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;PROCEDURE&lt;/span&gt;&lt;span style="color: #000000;"&gt; proc_select_user
&lt;/span&gt;&lt;span style="color: #008080;"&gt;2&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;AS&lt;/span&gt;
&lt;span style="color: #008080;"&gt;3&lt;/span&gt;     &lt;span style="color: #0000ff;"&gt;BEGIN&lt;/span&gt;
&lt;span style="color: #008080;"&gt;4&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;SELECT&lt;/span&gt; &lt;span style="color: #808080;"&gt;*&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;FROM&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;user&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt;5&lt;/span&gt;     &lt;span style="color: #0000ff;"&gt;END&lt;/span&gt;
&lt;span style="color: #008080;"&gt;6&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;GO&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #0000ff;"&gt;EXECUTE&lt;/span&gt; proc_select_user;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3&gt;2.带输入参数&lt;/h3&gt;
&lt;p&gt;存储过程Name = proc_find_by_id_range，获取user表中Id在给定范围内的所有记录。&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt;1&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;CREATE&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;PROCEDURE&lt;/span&gt; proc_find_by_id_range(&lt;span style="color: #008000;"&gt;@startId&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;INT&lt;/span&gt;, &lt;span style="color: #008000;"&gt;@endId&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;INT&lt;/span&gt;&lt;span style="color: #000000;"&gt;)
&lt;/span&gt;&lt;span style="color: #008080;"&gt;2&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;AS&lt;/span&gt;
&lt;span style="color: #008080;"&gt;3&lt;/span&gt;     &lt;span style="color: #0000ff;"&gt;BEGIN&lt;/span&gt;
&lt;span style="color: #008080;"&gt;4&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;SELECT&lt;/span&gt; &lt;span style="color: #808080;"&gt;*&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;FROM&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;user&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;WHERE&lt;/span&gt; userId &lt;span style="color: #808080;"&gt;BETWEEN&lt;/span&gt; &lt;span style="color: #008000;"&gt;@startId&lt;/span&gt; &lt;span style="color: #808080;"&gt;AND&lt;/span&gt; &lt;span style="color: #008000;"&gt;@endId&lt;/span&gt;
&lt;span style="color: #008080;"&gt;5&lt;/span&gt;     &lt;span style="color: #0000ff;"&gt;END&lt;/span&gt;
&lt;span style="color: #008080;"&gt;6&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;GO&lt;/span&gt; &lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #0000ff;"&gt;EXECUTE&lt;/span&gt; proc_find_by_id_range &lt;span style="color: #008000;"&gt;@startId&lt;/span&gt; &lt;span style="color: #808080;"&gt;=&lt;/span&gt; &lt;span style="color: #800000; font-weight: bold;"&gt;10000&lt;/span&gt;,&lt;span style="color: #008000;"&gt;@endId&lt;/span&gt; &lt;span style="color: #808080;"&gt;=&lt;/span&gt; &lt;span style="color: #800000; font-weight: bold;"&gt;10100&lt;/span&gt;;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;3.带输入输出参数&lt;/h3&gt;
&lt;p&gt;存储过程Name = proc_find_userName_by_id,通过id获取userName。&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;CREATE&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;PROCEDURE&lt;/span&gt;&lt;span style="color: #000000;"&gt; proc_find_userName_by_id
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 2&lt;/span&gt;    &lt;span style="color: #008000;"&gt;@userId&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;INT&lt;/span&gt;&lt;span style="color: #000000;"&gt;,
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 3&lt;/span&gt;    &lt;span style="color: #008000;"&gt;@userName&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;NVARCHAR&lt;/span&gt;(&lt;span style="color: #800000; font-weight: bold;"&gt;20&lt;/span&gt;&lt;span style="color: #000000;"&gt;) OUTPUT
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 4&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;AS&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 5&lt;/span&gt;     &lt;span style="color: #0000ff;"&gt;BEGIN&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 6&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;SELECT&lt;/span&gt; &lt;span style="color: #008000;"&gt;@userName&lt;/span&gt; &lt;span style="color: #808080;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; userName
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 7&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;FROM&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;user&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 8&lt;/span&gt;         &lt;span style="color: #0000ff;"&gt;WHERE&lt;/span&gt; userId &lt;span style="color: #808080;"&gt;=&lt;/span&gt; &lt;span style="color: #008000;"&gt;@userId&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 9&lt;/span&gt;     &lt;span style="color: #0000ff;"&gt;END&lt;/span&gt;
&lt;span style="color: #008080;"&gt;10&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;GO&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt;1&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;DECLARE&lt;/span&gt; &lt;span style="color: #008000;"&gt;@userName&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;NVARCHAR&lt;/span&gt;(&lt;span style="color: #800000; font-weight: bold;"&gt;20&lt;/span&gt;&lt;span style="color: #000000;"&gt;);
&lt;/span&gt;&lt;span style="color: #008080;"&gt;2&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;EXECUTE&lt;/span&gt; proc_find_userName_by_id &lt;span style="color: #800000; font-weight: bold;"&gt;10004&lt;/span&gt;,&lt;span style="color: #008000;"&gt;@userName&lt;/span&gt; OUTPUT;&lt;span style="background-color: #ffff99;"&gt;（这边如果用&lt;span style="color: #008000;"&gt;@变量&lt;/span&gt; &lt;span style="color: #808080;"&gt;=&lt;/span&gt;&lt;span style="color: #000000;"&gt; OUTPUT会报错，所以换一种写法）
&lt;/span&gt;&lt;/span&gt;&lt;span style="color: #008080;"&gt;3&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;SELECT&lt;/span&gt; &lt;span style="color: #008000;"&gt;@userName&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;as&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;'&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;result&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;'&lt;/span&gt;;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;img src="http://images.cnitblog.com/i/644226/201407/251642527139663.png" alt=""&gt;&lt;/h3&gt;
&lt;h3&gt;4.带返回状态&lt;/h3&gt;
&lt;p&gt;存储过程Name = proc_check_password_isnull,查询某Id的用户是否设了密码。&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;CREATE&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;PROCEDURE&lt;/span&gt;&lt;span style="color: #000000;"&gt; proc_check_password_isnull
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 2&lt;/span&gt; &lt;span style="color: #008000;"&gt;@userId&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;int&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 3&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;AS&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 4&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;BEGIN&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 5&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;IF&lt;/span&gt;(&lt;span style="color: #0000ff;"&gt;select&lt;/span&gt; password &lt;span style="color: #0000ff;"&gt;FROM&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;user&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 6&lt;/span&gt;      &lt;span style="color: #0000ff;"&gt;WHERE&lt;/span&gt; userId &lt;span style="color: #808080;"&gt;=&lt;/span&gt; &lt;span style="color: #008000;"&gt;@userId&lt;/span&gt;) &lt;span style="color: #808080;"&gt;=&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;null&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 7&lt;/span&gt;      &lt;span style="color: #0000ff;"&gt;RETURN&lt;/span&gt; &lt;span style="color: #800000; font-weight: bold;"&gt;0&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 8&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;ELSE&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 9&lt;/span&gt;      &lt;span style="color: #0000ff;"&gt;RETURN&lt;/span&gt; &lt;span style="color: #800000; font-weight: bold;"&gt;1&lt;/span&gt;
&lt;span style="color: #008080;"&gt;10&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;END&lt;/span&gt;
&lt;span style="color: #008080;"&gt;11&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;GO&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt;1&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;DECLARE&lt;/span&gt; &lt;span style="color: #008000;"&gt;@status&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;int&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;2&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;EXECUTE&lt;/span&gt; &lt;span style="color: #008000;"&gt;@status&lt;/span&gt; &lt;span style="color: #808080;"&gt;=&lt;/span&gt; proc_check_password_isnull &lt;span style="color: #008000;"&gt;@userId&lt;/span&gt; &lt;span style="color: #808080;"&gt;=&lt;/span&gt; &lt;span style="color: #800000; font-weight: bold;"&gt;10000&lt;/span&gt;&lt;span style="color: #000000;"&gt;;
&lt;/span&gt;&lt;span style="color: #008080;"&gt;3&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;SELECT&lt;/span&gt; &lt;span style="color: #008000;"&gt;@status&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;as&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;'&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;result&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;'&lt;/span&gt;;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/i/644226/201407/251643017138114.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;通过上面几个例子基本上也能明白存储过程的用法了，下面再给出存储过程语法的定义：&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt; 1&lt;/span&gt; &lt;span style="color: #008080;"&gt;--&lt;/span&gt;&lt;span style="color: #008080;"&gt;SQL Server Stored Procedure Syntax&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 2&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;CREATE&lt;/span&gt; { &lt;span style="color: #0000ff;"&gt;PROC&lt;/span&gt; &lt;span style="color: #808080;"&gt;|&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;PROCEDURE&lt;/span&gt; } &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;schema_name.&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt; procedure_name &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; ; number &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 3&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 4&lt;/span&gt;     &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; { @parameter [ type_schema_name. &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;&lt;span style="color: #000000;"&gt; data_type }
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 5&lt;/span&gt;         &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; VARYING &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; = default &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; OUT | OUTPUT | [READONLY&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 6&lt;/span&gt;     ] &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; ,...n &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt; 7&lt;/span&gt; 
&lt;span style="color: #008080;"&gt; 8&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; WITH &amp;lt;procedure_option&amp;gt; [ ,...n &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;&lt;span style="color: #000000;"&gt; ]
&lt;/span&gt;&lt;span style="color: #008080;"&gt; 9&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; FOR REPLICATION &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt;10&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;11&lt;/span&gt; &lt;span style="color: #0000ff;"&gt;AS&lt;/span&gt; { &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; BEGIN &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt; sql_statement &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;;&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; ...n &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; END &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;&lt;span style="color: #000000;"&gt; }
&lt;/span&gt;&lt;span style="color: #008080;"&gt;12&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;13&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;;&lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt;14&lt;/span&gt; 
&lt;span style="color: #008080;"&gt;15&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;&lt;/span&gt;procedure_option&lt;span style="color: #808080;"&gt;&amp;gt;&lt;/span&gt; ::&lt;span style="color: #808080;"&gt;=&lt;/span&gt;
&lt;span style="color: #008080;"&gt;16&lt;/span&gt;     &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; ENCRYPTION &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt;17&lt;/span&gt;     &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; RECOMPILE &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt;18&lt;/span&gt;     &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; EXECUTE AS Clause &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;其中大部分关键字都在上面的四个例子中出现过，也比较好理解，下面再解释一些没展示过的关键字：&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #008080;"&gt;1&lt;/span&gt; &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; WITH &amp;lt;procedure_option&amp;gt; [ ,...n &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;&lt;span style="color: #000000;"&gt; ]
&lt;/span&gt;&lt;span style="color: #008080;"&gt;2&lt;/span&gt; &lt;span style="color: #808080;"&gt;&amp;lt;&lt;/span&gt;procedure_option&lt;span style="color: #808080;"&gt;&amp;gt;&lt;/span&gt; ::&lt;span style="color: #808080;"&gt;=&lt;/span&gt;
&lt;span style="color: #008080;"&gt;3&lt;/span&gt;     &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; ENCRYPTION &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt;4&lt;/span&gt;     &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; RECOMPILE &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;
&lt;span style="color: #008080;"&gt;5&lt;/span&gt;     &lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; EXECUTE AS Clause &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;这个是可以为存储过程定义一些特性，ENCRYPTION是可以为存储过程加密，RECOMPILE是不缓存，每次调用存储过程需要重新编译，EXECUTE AS Clause是否作为语句块执行。&lt;/p&gt;
&lt;div class="cnblogs_code"&gt;
&lt;pre&gt;&lt;span style="color: #ff0000;"&gt;[&lt;/span&gt;&lt;span style="color: #ff0000;"&gt; FOR REPLICATION &lt;/span&gt;&lt;span style="color: #ff0000;"&gt;]&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;指定不能在订阅服务器上执行为复制创建的存储过程。.使用 FOR REPLICATION 选项创建的存储过程可用作存储过程筛选，且只能在复制过程中执行。本选项不能和 WITH RECOMPILE 选项一起使用。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;ELSE&lt;/h2&gt;
&lt;p&gt;其实每个数据库都有很多系统定义的存储过程，如user表中的存储过程：&lt;/p&gt;
&lt;p&gt;如果有兴趣可以去研究下系统的存储过程，既可以熟练存储过程的使用，也能对数据库里面的机制理解的更深。&lt;/p&gt;
&lt;p&gt;其实存储过程中还有很多用法没有介绍，如通配符、CLR、以及游标。以后如有时间再深入研究。有不对的地方，请大家指正：）&lt;/p&gt;&lt;/div&gt;&lt;div id="MySignature"&gt;&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="blog_post_info_block"&gt;
&lt;div id="BlogPostCategory"&gt;&lt;/div&gt;
&lt;div id="EntryTag"&gt;&lt;/div&gt;
&lt;div id="blog_post_info"&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="post_next_prev"&gt;&lt;/div&gt;
&lt;/div&gt;


		&lt;/div&gt;
		&lt;div class="postDesc"&gt;posted @ &lt;span id="post-date"&gt;2014-07-25 16:53&lt;/span&gt; &lt;a href='http://www.cnblogs.com/edwinchen/'&gt;@瞪着太阳的乌鸦&lt;/a&gt; 阅读(&lt;span id="post_view_count"&gt;...&lt;/span&gt;) 评论(&lt;span id="post_comment_count"&gt;...&lt;/span&gt;)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3868433" rel="nofollow"&gt;编辑&lt;/a&gt; &lt;a href="#" onclick="AddToWz(3868433);return false;"&gt;收藏&lt;/a&gt;&lt;/div&gt;
	&lt;/div&gt;
	&lt;script type="text/javascript"&gt;var allowComments=true,isLogined=false,cb_blogId=189271,cb_entryId=3868433,cb_blogApp=currentBlogApp,cb_blogUserGuid='a9fcebd9-1ef8-e311-8d02-90b11c0b17d6',cb_entryCreatedDate='2014/7/25 16:53:00';loadViewCount(cb_entryId);&lt;/script&gt;
	
&lt;/div&gt;
&lt;!--end: topics 文章、评论容器--&gt;
&lt;a name="!comments"&gt;&lt;/a&gt;&lt;div id="blog-comments-placeholder"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var commentManager = new blogCommentManager();commentManager.renderComments(0);&lt;/script&gt;
&lt;div id="comment_form" class="commentform"&gt;
&lt;a name="commentform"&gt;&lt;/a&gt;
&lt;div id="divCommentShow"&gt;&lt;/div&gt;
&lt;div id="comment_nav"&gt;&lt;span id="span_refresh_tips"&gt;&lt;/span&gt;&lt;a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();"&gt;刷新评论&lt;/a&gt;&lt;a href="#" onclick="return RefreshPage();"&gt;刷新页面&lt;/a&gt;&lt;a href="#top"&gt;返回顶部&lt;/a&gt;&lt;/div&gt;
&lt;div id="comment_form_container"&gt;&lt;/div&gt;
&lt;div class="ad_text_commentbox" id="ad_text_under_commentbox"&gt;&lt;/div&gt;
&lt;div id="site_nav_under"&gt;&lt;a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园"&gt;博客园首页&lt;/a&gt;&lt;a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区"&gt;博问&lt;/a&gt;&lt;a href="http://news.cnblogs.com/" target="_blank" title="IT新闻"&gt;新闻&lt;/a&gt;&lt;a href="http://home.cnblogs.com/ing/" target="_blank"&gt;闪存&lt;/a&gt;&lt;a href="http://job.cnblogs.com/" target="_blank"&gt;程序员招聘&lt;/a&gt;&lt;a href="http://kb.cnblogs.com/" target="_blank"&gt;知识库&lt;/a&gt;&lt;/div&gt;
&lt;div id="opt_under_post"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    var enableGoogleAd = canShowAdsense(); var googletag = googletag || {}; googletag.cmd = googletag.cmd || [];
    fixPostBodyFormat();
&lt;/script&gt;
&lt;div id="ad_under_post_holder"&gt;
&lt;script type='text/javascript'&gt;
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        if (enableGoogleAd) {
            var gads = document.createElement('script');
            gads.async = true;
            gads.type = 'text/javascript';
            var useSSL = 'https:' == document.location.protocol;
            gads.src = (useSSL ? 'https:' : 'http:') + '//www.googletagservices.com/tag/js/gpt.js';
            var node = document.getElementsByTagName('script')[0];
            node.parentNode.insertBefore(gads, node);
        }
    })();
&lt;/script&gt;
&lt;script type='text/javascript'&gt;
    try {
        if (enableGoogleAd) {
            googletag.cmd.push(function () {
                googletag.defineSlot('/1090369/cnblogs_blogpost_C1_sitehome', [300, 250], 'div-gpt-ad-1346480159711-0').addService(googletag.pubads());
                googletag.pubads().enableSingleRequest();
                googletag.enableServices();
            });
        };
    } catch (e) { }
&lt;/script&gt;
&lt;div id="google_ad_c1" class="c_ad_block"&gt;
    &lt;div id='div-gpt-ad-1346480159711-0' style='width:300px; height:250px;'&gt;
    &lt;script type='text/javascript'&gt;
        try {
            if (enableGoogleAd) {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1346480159711-0'); });            
            } else {
                $('#div-gpt-ad-1346480159711-0').hide();
            }
    } catch (e) { }
    &lt;/script&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="blog_news_kb"&gt;&lt;/div&gt;
&lt;div id="HistoryToday" class="c_ad_block"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
&lt;/script&gt;
&lt;/div&gt;

	&lt;/div&gt;&lt;!--end: forFlow --&gt;
	&lt;/div&gt;&lt;!--end: mainContent 主体内容容器--&gt;

	&lt;div id="sideBar"&gt;
		&lt;div id="sideBarMain"&gt;
		&lt;div id="calendar"&gt;&lt;div id="blog-calendar" style="display:none"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogDefaultCalendar();&lt;/script&gt;&lt;/div&gt;
			
&lt;!--done--&gt;
&lt;div class="newsItem"&gt;
&lt;h3 class="catListTitle"&gt;公告&lt;/h3&gt;
	&lt;div id="blog-news"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogNews();&lt;/script&gt;
&lt;/div&gt;
			
			
			&lt;div id="leftcontentcontainer"&gt;
				&lt;div id="blog-sidecolumn"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogSideColumn();&lt;/script&gt;
			&lt;/div&gt;
			
		&lt;/div&gt;&lt;!--end: sideBarMain --&gt;
	&lt;/div&gt;&lt;!--end: sideBar 侧边栏容器 --&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;/div&gt;&lt;!--end: main --&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="footer"&gt;
		
&lt;!--done--&gt;
Copyright &amp;copy;2014 @瞪着太阳的乌鸦
	&lt;/div&gt;&lt;!--end: footer --&gt;
&lt;/div&gt;&lt;!--end: home 自定义的最大容器 --&gt;
&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-edwinchen-p-3868433.html</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/edwinchen/p/3868433.html</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-edwinchen-p-3868433.html</UUID>
</Page>