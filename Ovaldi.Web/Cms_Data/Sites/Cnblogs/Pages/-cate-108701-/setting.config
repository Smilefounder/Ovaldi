<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-cate-108701-</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html&gt;
&lt;html lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;软件设计 - 网站分类 - 博客园&lt;/title&gt;
&lt;link rel="shortcut icon" href="http://static.cnblogs.com/favicon.ico" type="image/x-icon"&gt;
&lt;link rel="Stylesheet" type="text/css" href="/preview~Cnblogs/Styles/bundles/aggsite.css"&gt;
&lt;link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://feed.cnblogs.com/blog/sitecateogry/108701/rss"&gt;&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/aggsite.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id="wrapper"&gt;
&lt;div id="hd_info"&gt;
&lt;div id="cnts"&gt;
    &lt;div id="site_nav_top"&gt;代码改变世界&lt;/div&gt;
    &lt;div id="login_area"&gt;&lt;span id="span_userinfo"&gt;&lt;/span&gt;&lt;/div&gt;
    &lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;    
&lt;div id="header"&gt;  
    &lt;p class="h_r_3"&gt;&lt;p class="h_r_2"&gt;&lt;p class="h_r_1"&gt;
    &lt;div id="header_block"&gt;
    &lt;div id="logo"&gt;
        &lt;h1&gt;
            &lt;a href="http://www.cnblogs.com/" title="开发者的网上家园"&gt;
                &lt;img src="http://static.cnblogs.com/images/logo_small.gif" alt="博客园Logo" width="142" height="55"&gt;
            &lt;/a&gt;
        &lt;/h1&gt;
    &lt;/div&gt; 
    &lt;div class="clear"&gt;&lt;/div&gt;
    &lt;/div&gt; 
    &lt;p class="h_r_1"&gt;&lt;p class="h_r_2"&gt;&lt;p class="h_r_3"&gt;        
&lt;/div&gt;
&lt;div id="nav_menu"&gt;&lt;a href="http://home.cnblogs.com/"&gt;园子&lt;/a&gt;&lt;a href="http://news.cnblogs.com"&gt;新闻&lt;/a&gt;&lt;a href="http://q.cnblogs.com/"&gt;博问&lt;/a&gt;&lt;a href="http://home.cnblogs.com/ing/"&gt;闪存&lt;/a&gt;&lt;a href="http://home.cnblogs.com/group/"&gt;小组&lt;/a&gt;&lt;a href="http://home.cnblogs.com/wz/"&gt;收藏&lt;/a&gt;&lt;a href="http://job.cnblogs.com/"&gt;招聘&lt;/a&gt;&lt;a href="http://kb.cnblogs.com/"&gt;知识库&lt;/a&gt;&lt;a href="http://zzk.cnblogs.com/"&gt;找找看&lt;/a&gt;&lt;/div&gt;
&lt;div id="main"&gt;
    &lt;div class="post_nav_block_wrapper"&gt;
    &lt;ul class="post_nav_block"&gt;
    &lt;li&gt;&lt;a href="/"&gt;首页&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/cate/108701/" class="current_nav"&gt;软件设计&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt; 
    &lt;div class="clear"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="rss_link" id="rss_block"&gt;        
&lt;span id="posts_refresh_tips"&gt;&lt;/span&gt;&lt;a id="posts_refresh" href="#" class="refresh" title="刷新博文列表" onclick="aggSite.loadCategoryPostList();return false"&gt;刷新&lt;/a&gt;        &lt;a href="http://feed.cnblogs.com/blog/sitecateogry/108701/rss"&gt;&lt;img src="http://static.cnblogs.com/images/icon_rss.gif" alt="点击订阅" style="position:relative;top:2px;" title="订阅博客园文章"&gt;&lt;/a&gt;    &lt;/div&gt;
    &lt;div id="headline_block" class="headline"&gt;&lt;ul&gt;&lt;li class="editor_pick"&gt;&lt;a href="http://www.cnblogs.com/kenshincui/p/3972100.html" id="editor_pick_lnk" target="_blank"&gt;【编辑推荐】iOS开发系列--让你的应用“动”起来&lt;span id="editor_pick_count"&gt;&lt;/span&gt;&lt;/a&gt; &lt;a href="/aggsite/headline" title="查看更多编辑推荐" class="right_more"&gt;»&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.cnblogs.com/justnow/p/3974416.html" target="_blank" title="阅读1524, 评论9, 推荐29"&gt;[最多推荐]可在广域网部署运行的QQ高仿版 -- GG叽叽V3.7，优化视频聊天、控制更多相关细节(9/1524)&lt;/a&gt; &lt;a href="/aggsite/topdigged24h" title="查看24小时推荐排行" class="right_more"&gt;»&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.cnblogs.com/ttrjba/p/3974055.html" target="_blank" title="阅读2109, 评论21, 推荐3"&gt;[最多评论]7行代码看EntityFramework是如何运行(21/2109)&lt;/a&gt; &lt;a href="/aggsite/topcommented24h" title="查看24小时评论排行" class="right_more"&gt;»&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://news.cnblogs.com/n/503758/" target="_blank" title="阅读2935, 评论19, 推荐6"&gt;[新闻头条]纯银：优秀的人才，没一个开口就问“贵司薪水几何”(19/2935)&lt;/a&gt; &lt;a href="http://news.cnblogs.com/" title="查看更多新闻" class="right_more"&gt;»&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://news.cnblogs.com/n/503824/" target="_blank" title="阅读698, 评论0, 推荐3"&gt;[推荐新闻]马云创业过程中的10次失败(0/698)&lt;/a&gt; &lt;a href="http://news.cnblogs.com/n/recommend" title="查看更多推荐新闻" class="right_more"&gt;»&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
    &lt;div id="pager_top" style="display:none"&gt;&lt;/div&gt;  
    &lt;div id="post_list_tips" class="hide"&gt;&lt;/div&gt;
               
    &lt;div id="post_list"&gt;          
    
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('coderkian',3973774,164324,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3973774"&gt;2&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3973774" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/coderkian/archive/2014/09/15/3973774.html" target="_blank"&gt;设计模式系列之单例模式&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    单例模式是使用最广泛，也最简单的设计模式之一，作用是保证一个类只有一个实例。单例模式是对全局变量的一种改进，避免全局变量污染命名空间。因为以下几个原因，全局变量不能作为单例的实现方式：1. 不能保证只有一个全局变量2. 静态初始化时可能没有足够的信息创建对象3. c++中全局对象的构造顺序是未定义的... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/coderkian/" class="lightblue"&gt;coderkian&lt;/a&gt; 
    发布于 2014-09-15 21:41 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/coderkian/archive/2014/09/15/3973774.html#commentform" title="2014-09-16 09:40" class="gray"&gt;
        评论(2)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/coderkian/archive/2014/09/15/3973774.html" class="gray"&gt;阅读(338)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('KoalaAPI',3972839,197852,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3972839"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3972839" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/KoalaAPI/archive/2014/09/15/3972839.html" target="_blank"&gt;浅谈分布式计算系统和集群系统的区别&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    随着时间和项目经验的积累笔者对分布式计算的了解是越来越深入，那么接下来笔者就和大家浅谈下分布式系统的特点吧，可以这样理解，分布式系统是将多个子任务分布在不同的物理机上并行工作。是以空间换时间并行计算来提高程序的可靠性和性能。分布式系统的高性能计算属于MIMD的范畴领域。它是按不同的业务分配不同的节点... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/KoalaAPI/" class="lightblue"&gt;KoalaAPI&lt;/a&gt; 
    发布于 2014-09-15 15:01 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/KoalaAPI/archive/2014/09/15/3972839.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/KoalaAPI/archive/2014/09/15/3972839.html" class="gray"&gt;阅读(202)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('lianyue',3972702,105111,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3972702"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3972702" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/lianyue/archive/2014/09/15/3972702.html" target="_blank"&gt;MMORGP大型游戏设计与开发（客户端架构 part2 of vgui）&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    这一节我将讲解vgui的基础系统部分，也是该库提供给外部使用的一些重要接口。作为UI部分比较重要的部分，该节有着至关重要的部分，如果没有看到上一节内容，请留意下面的连接。我们现在可以猜想一下在客户端UI部分，要设计到哪些东西呢？首先UI的大部分操作便是窗口的显示，那么窗口中又有哪些元素呢？链接、文字... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/lianyue/" class="lightblue"&gt;恋月&lt;/a&gt; 
    发布于 2014-09-15 14:07 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/lianyue/archive/2014/09/15/3972702.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/lianyue/archive/2014/09/15/3972702.html" class="gray"&gt;阅读(149)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('lianyue',3972492,105111,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3972492"&gt;1&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3972492" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/lianyue/archive/2014/09/15/3972492.html" target="_blank"&gt;plain framework 1（简约框架）一款主要用于网络（游戏）开发的C/C++框架 即将开源发布&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    在我们的日常开发中，我们往往会遇到这种情况，当我们换了一个开发环境时很可能会重新利用一套新的框架进行开发。由于不同框架有着不同的接口，所以我们不得不花时间再次熟悉这些接口，这将造成开发时间上的重复，而对于一个程序来说又经历了一段重复造轮子的过程。在游戏开发领域，我介入的时间并不太长，大约三年时间。抱... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/lianyue/" class="lightblue"&gt;恋月&lt;/a&gt; 
    发布于 2014-09-15 11:31 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/lianyue/archive/2014/09/15/3972492.html#commentform" title="2014-09-15 11:54" class="gray"&gt;
        评论(1)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/lianyue/archive/2014/09/15/3972492.html" class="gray"&gt;阅读(219)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('xiyang1011',3972118,58255,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3972118"&gt;2&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3972118" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/xiyang1011/archive/2014/09/15/3972118.html" target="_blank"&gt;Navi.Soft20.WinForm操作手册&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    尽管互联网高速发展,互联网软件也随之越来越多,但桌面应用程序在某些领域中还是不可替代,如MIS,ERP,CRM等软件产品,同时,这类软件均包括一些通用的功能,如:与数据库操作,日志管理,权限管理等
    本框架指在解决这些问题,并将通用的功能抽离并实现.使在开发过程中,将更多的精力放在业务逻辑 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/xiyang1011/" class="lightblue"&gt;Vincent.Q&lt;/a&gt; 
    发布于 2014-09-15 08:03 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/xiyang1011/archive/2014/09/15/3972118.html#commentform" title="2014-09-15 08:53" class="gray"&gt;
        评论(3)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/xiyang1011/archive/2014/09/15/3972118.html" class="gray"&gt;阅读(360)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('zhili',3970563,111157,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3970563"&gt;4&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3970563" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/zhili/archive/2014/09/14/StatePattern.html" target="_blank"&gt;C#设计模式(19)——状态者模式（State Pattern）&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    一、引言 在上一篇文章介绍到可以使用状态者模式和观察者模式来解决中介者模式存在的问题，在本文中将首先通过一个银行账户的例子来解释状态者模式，通过这个例子使大家可以对状态者模式有一个清楚的认识，接着，再使用状态者模式来解决上一篇文章中提出的问题。二、状态者模式的介绍 每个对象都有其对应的状态，而每..... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/zhili/" class="lightblue"&gt;Learning hard&lt;/a&gt; 
    发布于 2014-09-14 20:08 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/zhili/archive/2014/09/14/StatePattern.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/zhili/archive/2014/09/14/StatePattern.html" class="gray"&gt;阅读(601)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('wintersun',3971072,18730,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3971072"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3971072" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/wintersun/archive/2014/09/14/3971072.html" target="_blank"&gt;软件代码生成之Codesmith模板.netTiers&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    .netTiers模板到2006年就诞生了, 到今天最后一次更新是12/17/2013, 支持.NET 4.5 and Visual Studio 2012 and 2013. netTiers是基于微软企业库的模板项目. 在今天各种PC端应用软件横行天下, 使用代码生成工具来提高开发效率是经常的事... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/wintersun/" class="lightblue"&gt;PetterLiu&lt;/a&gt; 
    发布于 2014-09-14 15:28 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/wintersun/archive/2014/09/14/3971072.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/wintersun/archive/2014/09/14/3971072.html" class="gray"&gt;阅读(45)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('netfocus',3896118,17223,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3896118"&gt;15&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3896118" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/netfocus/archive/2014/09/14/3896118.html" target="_blank"&gt;分享我对代码命名的一点思考和理解&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    一个软件最后都会落实到代码。而代码，其背后的架构设计或设计思想或模式固然重要，但我觉得更重要的东西则是良好的命名。混乱或错误的命名不仅让我们对代码难以理解，更糟糕的是，会误导我们的思维，导致对代码的理解完全错误。相反，良好的命名，则可以让我们的代码非常容易读懂，也能向读者正确表达事物以及逻辑的本质，... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/netfocus/" class="lightblue"&gt;netfocus&lt;/a&gt; 
    发布于 2014-09-14 00:29 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/netfocus/archive/2014/09/14/3896118.html#commentform" title="2014-09-16 08:26" class="gray"&gt;
        评论(61)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/netfocus/archive/2014/09/14/3896118.html" class="gray"&gt;阅读(3467)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('i4oolish',3970402,197955,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3970402"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3970402" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/i4oolish/archive/2014/09/13/3970402.html" target="_blank"&gt;基于管道通知的百万并发长连接server模型&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    0、前言最近突然想了解怎样设计一个支持百万连接的后台server架构。要设计一个支持百万连接的后台server，我们首先要知道会有哪些因素限制后台server的高并发连接，这里想到的因素有以下几点：1、操作系统的参数设置能否支持百万并发连接；2、操作系统维持百万并发长连接需要多少内存；3、应用层面上... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/i4oolish/" class="lightblue"&gt;i4oolish&lt;/a&gt; 
    发布于 2014-09-13 22:00 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/i4oolish/archive/2014/09/13/3970402.html#commentform" title="2014-09-15 16:17" class="gray"&gt;
        评论(1)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/i4oolish/archive/2014/09/13/3970402.html" class="gray"&gt;阅读(267)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('oufu',3971242,198012,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3971242"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3971242" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/oufu/archive/2014/09/13/3971242.html" target="_blank"&gt;hibernate对象关系映射（ 一对一，一对多，多对一，多对多的单向，双向映射 ——）&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    对象之间的关系：关系映射之间的关系只的是对象之间的关系，并不指数据库表的关系(外键关系)这儿解决的问题是当对象之间的关系之一时，数据库表该如何映射，编程上如何对待。一对一（主键关联，和单向的外键关联）①单向（主键，外键）Husband和Wife表，a,主键关联b，外键关联（wife为parent），... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/oufu/" class="lightblue"&gt;冏冏冏&lt;/a&gt; 
    发布于 2014-09-13 19:19 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/oufu/archive/2014/09/13/3971242.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/oufu/archive/2014/09/13/3971242.html" class="gray"&gt;阅读(22)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('zhili',3965502,111157,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3965502"&gt;1&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3965502" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/zhili/archive/2014/09/13/MediatorPattern.html" target="_blank"&gt;C#设计模式(18)——中介者模式（Mediator Pattern）&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    一、引言 在现实生活中，有很多中介者模式的身影，例如QQ游戏平台，聊天室、QQ群和短信平台，这些都是中介者模式在现实生活中的应用，下面就具体分享下我对中介者模式的理解。二、 中介者模式的介绍2.1 中介者模式的定义 从生活中的例子可以看出，不论是QQ游戏还是QQ群，它们都是充当一个中间平台，QQ..... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/zhili/" class="lightblue"&gt;Learning hard&lt;/a&gt; 
    发布于 2014-09-13 18:35 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/zhili/archive/2014/09/13/MediatorPattern.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/zhili/archive/2014/09/13/MediatorPattern.html" class="gray"&gt;阅读(68)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('zhili',3965500,111157,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3965500"&gt;4&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3965500" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/zhili/archive/2014/09/13/ObserverPattern.html" target="_blank"&gt;C#设计模式(17)——观察者模式（Observer Pattern）&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    一、引言 在现实生活中，处处可见观察者模式，例如，微信中的订阅号，订阅博客和QQ微博中关注好友，这些都属于观察者模式的应用。在这一章将分享我对观察者模式的理解，废话不多说了，直接进入今天的主题。二、 观察者模式的介绍2.1 观察者模式的定义 从生活中的例子可以看出，只要对订阅号进行关注的客户端，..... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/zhili/" class="lightblue"&gt;Learning hard&lt;/a&gt; 
    发布于 2014-09-13 15:10 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/zhili/archive/2014/09/13/ObserverPattern.html#commentform" title="2014-09-14 18:53" class="gray"&gt;
        评论(3)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/zhili/archive/2014/09/13/ObserverPattern.html" class="gray"&gt;阅读(490)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('zeeman',3969720,94346,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3969720"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3969720" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/zeeman/archive/2014/09/13/3969720.html" target="_blank"&gt;kafka的一些认识&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    原创文章转载请注明出处：@协思,http://zeeman.cnblogs.com近来无事研究了一下kafka，并且用golang连接kafka做了producer和consumer的简单测试，对kafka有了一些基本的认识。kafka不同于activemq和rabbitmq等这种符合AMQP协议的... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/zeeman/" class="lightblue"&gt;协思&lt;/a&gt; 
    发布于 2014-09-13 13:11 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/zeeman/archive/2014/09/13/3969720.html#commentform" title="2014-09-13 21:20" class="gray"&gt;
        评论(1)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/zeeman/archive/2014/09/13/3969720.html" class="gray"&gt;阅读(36)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('zeeman',3969521,94346,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3969521"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3969521" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/zeeman/archive/2014/09/13/3969521.html" target="_blank"&gt;软件工程中的依赖管理&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    原创文章转载请注明出处：@协思,http://zeeman.cnblogs.com软件工程是多人合作的结果，我们做项目的时候，经常需要使用前人的成果或者成熟的第三方包，而这些第三方包又可能再引用第四方包，并且可能存在版本上的区别，这就形成了依赖链。手工管理依赖是相当麻烦且易出错，因此各大平台都有自己... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/zeeman/" class="lightblue"&gt;协思&lt;/a&gt; 
    发布于 2014-09-13 10:19 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/zeeman/archive/2014/09/13/3969521.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/zeeman/archive/2014/09/13/3969521.html" class="gray"&gt;阅读(40)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('zhi-hao',3969355,168816,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3969355"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3969355" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/zhi-hao/archive/2014/09/12/3969355.html" target="_blank"&gt;单例模式&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    java设计模式中有一个模式叫单例模式，单例的意思就是该类只能产生一个实例，平时我们定义类可以随自己的意愿创建任意多的实例，但有些情况下，我们必须只能让某些类产生一个实例，像打印机一次只能执行一个打印进程，否则就会乱了。定义单例类我们就不能像普通定义类那样去定义该类了。从例子开始讲解怎么定义产生单例... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/zhi-hao/" class="lightblue"&gt;CIACs&lt;/a&gt; 
    发布于 2014-09-12 23:52 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/zhi-hao/archive/2014/09/12/3969355.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/zhi-hao/archive/2014/09/12/3969355.html" class="gray"&gt;阅读(34)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('iamppz',3968708,95618,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3968708"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3968708" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/iamppz/archive/2014/09/12/3968708.html" target="_blank"&gt;什么是聚合根?&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    原文链接：http://stackoverflow.com/questions/1958621/whats-an-aggregate-root回答一：In the context of the repository pattern, aggregate roots are the only obje... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/iamppz/" class="lightblue"&gt;iamppz&lt;/a&gt; 
    发布于 2014-09-12 16:56 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/iamppz/archive/2014/09/12/3968708.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/iamppz/archive/2014/09/12/3968708.html" class="gray"&gt;阅读(18)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('phenixyu',3968332,197505,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3968332"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3968332" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/phenixyu/archive/2014/09/12/3968332.html" target="_blank"&gt;MEF编程模型&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    Contract由Contract name和Contract type组成，Contract两个参数可以省略可以implicit也可以explicit,implicit时name和type会自动推断 某些情况必须要指定contract name,最常见的情况是一个类export多个相同类型的成员，... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/phenixyu/" class="lightblue"&gt;哨兵&lt;/a&gt; 
    发布于 2014-09-12 14:24 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/phenixyu/archive/2014/09/12/3968332.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/phenixyu/archive/2014/09/12/3968332.html" class="gray"&gt;阅读(20)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('coderkian',3967278,164324,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3967278"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3967278" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/coderkian/archive/2014/09/11/3967278.html" target="_blank"&gt;设计模式系列之生成器模式&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    builder模式主要用于创建复杂对象，着重于复杂对象的内部构建。通过将构建过程与表示分离，同一个构建过程可以生产不同的外部表示。builder模式由导向器和生成器构成，导向器负责构建过程，生成器负责生产对象的外部表示。导向器包含有一个生成器，当需要更换对象表示时，只需要换一个生成器即可。上篇文章设... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/coderkian/" class="lightblue"&gt;coderkian&lt;/a&gt; 
    发布于 2014-09-11 21:27 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/coderkian/archive/2014/09/11/3967278.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/coderkian/archive/2014/09/11/3967278.html" class="gray"&gt;阅读(395)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('oshine',3966212,193496,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3966212"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3966212" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/oshine/archive/2014/09/11/3966212.html" target="_blank"&gt;面向对象的认识----类的转化&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    ---恢复内容开始---概述： 为了更好的掌握面向对象的编程思维，推荐几种常用的小技巧，来快速提升面向对象的编程。 1. 告别常量 2. 告别变量 3. 告别静态变量 4. 告别函数 5. 告别全局变量 6. 告别Map数组 其它文章 同类文章介绍篇：面向对... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/oshine/" class="lightblue"&gt;oShine.Q&lt;/a&gt; 
    发布于 2014-09-11 12:27 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/oshine/archive/2014/09/11/3966212.html#commentform" title="2014-09-12 09:06" class="gray"&gt;
        评论(2)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/oshine/archive/2014/09/11/3966212.html" class="gray"&gt;阅读(668)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post_item"&gt;
&lt;div class="digg"&gt;
    &lt;div class="diggit" onclick="DiggPost('lianyue',3965911,105111,1)"&gt; 
	&lt;span class="diggnum" id="digg_count_3965911"&gt;0&lt;/span&gt;
	&lt;/div&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="digg_tip_3965911" class="digg_tip"&gt;&lt;/div&gt;
&lt;/div&gt;      
&lt;div class="post_item_body"&gt;
	&lt;h3&gt;&lt;a class="titlelnk" href="http://www.cnblogs.com/lianyue/archive/2014/09/11/3965911.html" target="_blank"&gt;MMORGP大型游戏设计与开发（客户端架构 part1 of vgui）&lt;/a&gt;&lt;/h3&gt;               	
    &lt;p class="post_item_summary"&gt;
    作为客户端的重要装饰，UI扮演着极为重要的角色，是客户端中核心的组成。vgui（微GUI）中，提供了核心的接口封装，实现了客户端中常见的界面操作，并结合lua脚本，使得控制界面更加的方便。构架总结 在整个UI的接口封装中，vgui提供了直接的界面操作接口，开发者不必再次封装，这使得该库的封装变得同虚... 
    &lt;/p&gt;              
    &lt;div class="post_item_foot"&gt;                    
    &lt;a href="http://www.cnblogs.com/lianyue/" class="lightblue"&gt;恋月&lt;/a&gt; 
    发布于 2014-09-11 10:36 
    &lt;span class="article_comment"&gt;&lt;a href="http://www.cnblogs.com/lianyue/archive/2014/09/11/3965911.html#commentform" title="" class="gray"&gt;
        评论(0)&lt;/a&gt;&lt;/span&gt;&lt;span class="article_view"&gt;&lt;a href="http://www.cnblogs.com/lianyue/archive/2014/09/11/3965911.html" class="gray"&gt;阅读(59)&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;/div&gt;
   

    &lt;/div&gt;
    &lt;script&gt;editorPickStat();aggSite.user.getUserInfo();&lt;/script&gt; 
    &lt;script type="text/javascript"&gt;
        var aggSiteModel = {"CategoryType":"TopSiteCategory","ParentCategoryId":0,"CategoryId":108701,"PageIndex":1,"ItemListActionName":"PostList"};
    &lt;/script&gt;
    &lt;div id="pager_bottom"&gt;&lt;div id="paging_block"&gt;&lt;div class="pager"&gt;&lt;a href="/cate/108701/" class="p_1 current" onclick="aggSite.loadCategoryPostList(1,20);buildPaging(1);return false;"&gt;1&lt;/a&gt;&lt;a href="/cate/108701/2" class="p_2" onclick="aggSite.loadCategoryPostList(2,20);buildPaging(2);return false;"&gt;2&lt;/a&gt;&lt;a href="/cate/108701/3" class="p_3" onclick="aggSite.loadCategoryPostList(3,20);buildPaging(3);return false;"&gt;3&lt;/a&gt;&lt;a href="/cate/108701/4" class="p_4" onclick="aggSite.loadCategoryPostList(4,20);buildPaging(4);return false;"&gt;4&lt;/a&gt;&lt;a href="/cate/108701/5" class="p_5" onclick="aggSite.loadCategoryPostList(5,20);buildPaging(5);return false;"&gt;5&lt;/a&gt;&lt;a href="/cate/108701/6" class="p_6" onclick="aggSite.loadCategoryPostList(6,20);buildPaging(6);return false;"&gt;6&lt;/a&gt;&lt;a href="/cate/108701/2" onclick="aggSite.loadCategoryPostList(2,20);buildPaging(2);return false;"&gt;Next &amp;gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var pagingBuider={"OnlyLinkText":false,"TotalCount":108,"PageIndex":1,"PageSize":20,"ShowPageCount":5,"SkipCount":0,"UrlFormat":"/cate/108701/{0}","OnlickJsFunc":"aggSite.loadCategoryPostList()","FirstPageLink":"/cate/108701/","AjaxUrl":"/mvc/ToolkitPaging/load.aspx","AjaxCallbak":null,"TopPagerId":"pager_top","IsRenderScript":true};function buildPaging(pageIndex){pagingBuider.PageIndex=pageIndex;$.ajax({url:pagingBuider.AjaxUrl,data:JSON.stringify(pagingBuider),type:'post',dataType:'text',contentType:'application/json; charset=utf-8',success:function (data) { $('#paging_block').html(data); var pagerTop=$('#pager_top');if(pageIndex&gt;1){$(pagerTop).html(data).show();}else{$(pagerTop).hide();}}});}&lt;/script&gt;
&lt;/div&gt; 
    &lt;div id="side_nav"&gt; 
    
&lt;div id="cate_title_block"&gt;
&lt;div id="cate_title_title"&gt;&lt;div class="cate_title"&gt;网站分类&lt;/div&gt;&lt;/div&gt;
&lt;ul id="cate_item"&gt;
&lt;li id="cate_item_108698" onmouseover="cateShow(108698)" onmouseout="cateHidden(108698)"&gt;
&lt;a href="/cate/108698/"&gt;.NET技术(20)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_2" onmouseover="cateShow(2)" onmouseout="cateHidden(2)"&gt;
&lt;a href="/cate/2/"&gt;编程语言(19)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_108701" onmouseover="cateShow(108701)" onmouseout="cateHidden(108701)"&gt;
&lt;a href="/cate/108701/"&gt;软件设计(0)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_108703" onmouseover="cateShow(108703)" onmouseout="cateHidden(108703)"&gt;
&lt;a href="/cate/108703/"&gt;Web前端(12)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_108704" onmouseover="cateShow(108704)" onmouseout="cateHidden(108704)"&gt;
&lt;a href="/cate/108704/"&gt;企业信息化(1)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_108705" onmouseover="cateShow(108705)" onmouseout="cateHidden(108705)"&gt;
&lt;a href="/cate/108705/"&gt;手机开发(10)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_108709" onmouseover="cateShow(108709)" onmouseout="cateHidden(108709)"&gt;
&lt;a href="/cate/108709/"&gt;软件工程(0)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_108712" onmouseover="cateShow(108712)" onmouseout="cateHidden(108712)"&gt;
&lt;a href="/cate/108712/"&gt;数据库技术(1)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_108724" onmouseover="cateShow(108724)" onmouseout="cateHidden(108724)"&gt;
&lt;a href="/cate/108724/"&gt;操作系统(2)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_4" onmouseover="cateShow(4)" onmouseout="cateHidden(4)"&gt;
&lt;a href="/cate/4/"&gt;其他分类(13)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_0" onmouseover="cateShow(0)" onmouseout="cateHidden(0)"&gt;
&lt;a href="/cate/all/"&gt;所有随笔(847)&lt;/a&gt;
&lt;/li&gt;
&lt;li id="cate_item_-1" onmouseover="cateShow(-1)" onmouseout="cateHidden(-1)"&gt;
&lt;a href="/comment/"&gt;所有评论(400)&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="cate_bottom"&gt;&lt;/div&gt;
&lt;div id="cate_sub_block"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;var cateIdList = '108698,2,108701,108703,108704,108705,108709,108712,108724,4';aggSite.loadSubCategories();&lt;/script&gt;
&lt;/div&gt;
&lt;div class="l_s"&gt;&lt;/div&gt;
&lt;p class="r_l_3"&gt;&lt;p class="r_l_2"&gt;&lt;p class="r_l_1"&gt;
&lt;div class="w_l"&gt;
&lt;h4&gt;相关分类&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/cate/108698/"&gt;.NET技术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/cate/2/"&gt;编程语言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/cate/108703/"&gt;Web前端&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/cate/108704/"&gt;企业信息化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/cate/108705/"&gt;手机开发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/cate/108709/"&gt;软件工程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/cate/108712/"&gt;数据库技术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/cate/108724/"&gt;操作系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/cate/4/"&gt;其他分类&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p class="r_l_1"&gt;&lt;p class="r_l_2"&gt;&lt;p class="r_l_3"&gt;    &lt;div class="l_s"&gt;&lt;/div&gt;
&lt;p class="r_l_3"&gt;&lt;p class="r_l_2"&gt;&lt;p class="r_l_1"&gt;
&lt;div class="w_l"&gt;
&lt;h4&gt;链接&lt;/h4&gt;        
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://space.cnblogs.com/forum/public" target="_blank"&gt;反馈或建议&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="http://www.cnblogs.com/cmt/" target="_blank"&gt;官方博客&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="/skins.aspx" target="_blank"&gt;博客模板&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.blogjava.net/"&gt;Java博客&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.cppblog.com/"&gt;C++博客&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.cnblogs.com/cmt/archive/2009/09/26/1574616.html"&gt;手机版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p class="r_l_1"&gt;&lt;p class="r_l_2"&gt;&lt;p class="r_l_3"&gt;
&lt;div class="l_s"&gt;&lt;/div&gt;
&lt;div id="user_stats"&gt;&lt;/div&gt;
&lt;div class="l_s"&gt;&lt;/div&gt;        
&lt;p class="r_l_3"&gt;&lt;p class="r_l_2"&gt;&lt;p class="r_l_1"&gt;
&lt;div class="w_l"&gt;                
&lt;h4&gt;统计信息&lt;/h4&gt;
&lt;div id="site_stats"&gt;&lt;/div&gt;      
&lt;/div&gt;
&lt;p class="r_l_1"&gt;&lt;p class="r_l_2"&gt;&lt;p class="r_l_3"&gt;

    &lt;/div&gt;
    &lt;div id="side_right"&gt;
        &lt;div id="search_block"&gt;
            &lt;div class="side_search"&gt;        
            &lt;input type="text" id="zzk_q" class="search_input" onkeydown="return zzk_go_enter(event);" tabindex="3"&gt;&lt;input onclick="zzk_go()" type="button" class="search_btn" value="找找看"&gt;
            &lt;/div&gt;
            &lt;div id="google_search" class="side_search"&gt;        
            &lt;input type="text" id="google_search_q" class="search_input" onkeydown="return google_search_enter(event);"&gt;&lt;input type="button" value="Google" class="search_btn" onclick="return google_search();"&gt;
            &lt;/div&gt;
        &lt;/div&gt;  
        &lt;div class="ad_right"&gt;
        &lt;!-- cnblogs_home_B1 --&gt;
        &lt;div id='div-gpt-ad-1320928704644-1' style='width:300px; height:250px;'&gt;
            &lt;script type='text/javascript'&gt;
            try {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1320928704644-1'); });
            } catch (e) { }
            &lt;/script&gt;
        &lt;/div&gt;
        &lt;/div&gt;
        &lt;div id="banner_right"&gt;
        &lt;!-- cnblogs_home_A1 --&gt;
        &lt;div id='div-gpt-ad-1320928704644-0' style='width:468px; height:60px;'&gt;
        &lt;script type='text/javascript'&gt;
            try {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1320928704644-0'); });
            } catch (e) { }
        &lt;/script&gt;
        &lt;/div&gt;
        &lt;/div&gt;
        &lt;div id="ad_right_text" class="ad_right_text"&gt;&lt;/div&gt;
        &lt;div id="side_right_block"&gt;&lt;/div&gt;
        &lt;script&gt;
            aggSite.loadSideRight();    
            aggSite.loadUserStats();
            aggSite.loadAggStats();
            google_ga();
        &lt;/script&gt;        
    &lt;/div&gt; 
&lt;/div&gt;
&lt;div id="footer"&gt;
&lt;div class="footer_block"&gt;
&lt;p class="r_b_3"&gt;&lt;p class="r_b_2"&gt;&lt;p class="r_b_1"&gt;&lt;div id="friend_link"&gt;
站内导航：&lt;a href="http://zzk.cnblogs.com"&gt;找找看&lt;/a&gt;&lt;a href="http://kb.cnblogs.com"&gt;知识库&lt;/a&gt;&lt;a href="http://kb.cnblogs.com/zt/"&gt;技术专题&lt;/a&gt;&lt;a href="http://job.cnblogs.com"&gt;程序员招聘&lt;/a&gt;&lt;a href="http://job.cnblogs.com/cate-.net/" target="_blank"&gt;.NET招聘&lt;/a&gt;&lt;a href="http://job.cnblogs.com/cate-java_programmer/" target="_blank"&gt;Java招聘&lt;/a&gt;&lt;a href="http://job.cnblogs.com/cate-cpp_programmer/" target="_blank"&gt;C++招聘&lt;/a&gt;&lt;a href="http://job.cnblogs.com/cate-php_programmer/" target="_blank"&gt;PHP招聘&lt;/a&gt;&lt;a href="http://job.cnblogs.com/cate-front_end_engineer/" target="_blank"&gt;Web前端招聘&lt;/a&gt;&lt;br&gt;
友情连接：&lt;a href="http://www.aliyun.com/cps/channel?channel_id=2244&amp;user=0&amp;lv=1" target="_blank"&gt;&lt;img src="http://static.cnblogs.com/images/friend_link/logo_aliyun.jpg" alt="阿里云"&gt;&lt;/a&gt;&lt;a href="http://www.hujiang.com" target="_blank"&gt;沪江网&lt;/a&gt;&lt;a href="http://www.hjenglish.com " target="_blank"&gt;沪江英语&lt;/a&gt;&lt;a href="http://www.chinaz.com/" target="_blank"&gt;站长之家&lt;/a&gt;&lt;a href="http://dev.yesky.com" target="_blank"&gt;天极开发者网络&lt;/a&gt;&lt;a href="http://down.admin5.com" target="_blank"&gt;A5源码下载&lt;/a&gt;&lt;a href="http://www.gcpowertools.com.cn" target="_blank"&gt;葡萄城控件&lt;/a&gt;&lt;a href="https://www.upyun.com/?md=cnblogs" target="_blank"&gt;又拍云存储&lt;/a&gt;&lt;a href="http://gaokao.xdf.cn/" target="_blank"&gt;高考查分&lt;/a&gt;&lt;a href="http://zt.cnblogs.com/tingyun/" target="_blank"&gt;听云APP性能监测&lt;/a&gt;
&lt;/div&gt;&lt;p class="r_b_1"&gt;&lt;p class="r_b_2"&gt;&lt;p class="r_b_3"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footer_bottom"&gt;
&lt;a href="/AboutUS.aspx"&gt;关于博客园&lt;/a&gt;&lt;a href="/ContactUs.aspx"&gt;联系我们&lt;/a&gt;&lt;a href="/about/ad.aspx"&gt;广告服务&lt;/a&gt;&lt;a href="http://www.miitbeian.gov.cn" target="_blank"&gt;沪ICP备09004260号&lt;/a&gt;&amp;copy;2004-2014 &lt;a href="http://www.cnblogs.com/"&gt;博客园&lt;/a&gt;保留所有权利 &lt;a href="https://ss.knet.cn/verifyseal.dll?sn=e131108110100433392itm000000&amp;ct=df&amp;a=1&amp;pa=0.25787803245785335" rel="nofollow" target="_blank"&gt;&lt;img id="cnnic_img" src="http://static.cnblogs.com/images/cnnic.png" alt="" width="64" height="23"&gt;&lt;/a&gt; 
&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-cate-108701-</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/cate/108701/</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-cate-108701-</UUID>
</Page>