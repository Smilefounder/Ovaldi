<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-Wayou-p-chrome-console-tips-and-tricks.html</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html&gt;
&lt;html lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;Chrome 控制台不完全指南 - 哇勇 - 博客园&lt;/title&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/bundles/blog-common.css"&gt;
&lt;link id="MainCss" type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/skins/ThinkInside/bundle-ThinkInside.css"&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/blog/customcss/123544.css"&gt;
&lt;link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/Wayou/rss"&gt;
&lt;link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/Wayou/rsd.xml"&gt;
&lt;link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/Wayou/wlwmanifest.xml"&gt;
&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;  
&lt;script type="text/javascript"&gt;var currentBlogApp = 'Wayou', cb_enable_mathjax=false;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/blog-common.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a name="top"&gt;&lt;/a&gt;
&lt;!--PageBeginHtml Block Begin--&gt;
&lt;link rel="stylesheet" type="text/css" href="http://files.cnblogs.com/Wayou/pace.css"&gt;
&lt;link href="http://files.cnblogs.com/Wayou/not.css" media="screen" rel="stylesheet" type="text/css"&gt;
&lt;script type="text/javascript" src="http://files.cnblogs.com/Wayou/pace.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="http://files.cnblogs.com/Wayou/not.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript"&gt;
window.onload = function() {
    $("#MyLinks1_MyHomeLink").attr("href", "http://www.cnblogs.com/wayou/p/");
    $("#cnblogs_post_body em").parent("p").addClass("emphasis_block");
    $("#cnblogs_post_body a").attr("target", "_blank");
    $('&lt;a class="fastCom" id="fastCom"  title="快速评论" href="#comment_form_container"&gt;&lt;/a&gt;').appendTo("#cnblogs_post_body");
    $(window).scroll(function() {
        if ($(this).scrollTop()) {
            $("#toTop").stop(true, true).fadeIn()
        } else {
            $("#toTop").stop(true, true).fadeOut()
        }
    });
    var e = ["感谢推荐！顶贴的都是好人  \\(^______^)/", "欢迎参与评论，博主很激动  \\(^______^)/", "要登陆了才能进行操作哦~"];
    $(".diggit").bind("click", function() {
        $.notific8($(".login_tips").length == 0 ? e[0] : e[2], {
            life: 3e3,
            heading: "来自博主的问候:",
            theme: "smoke",
            sticky: false,
            horizontalEdge: "top",
            verticalEdge: "right",
            zindex: 1500
        })
    });
    $("#btn_comment_submit").bind("click", function() {
        $.notific8(e[1], {
            life: 3e3,
            heading: "来自博主的问候:",
            theme: "smoke",
            sticky: false,
            horizontalEdge: "top",
            verticalEdge: "right",
            zindex: 1500
        })
    });
    if ($(".login_tips").length != 0) {
        $("#fastCom").bind("click", function() {
            $.notific8(e[2], {
                life: 3e3,
                heading: "来自博主的问候:",
                theme: "smoke",
                sticky: false,
                horizontalEdge: "top",
                verticalEdge: "right",
                zindex: 1500
            })
        })
    }

    ;(function() {
        (function(e) {
            return $.fn.wanker = function(e) {
                var t;
                t = $.extend({
                    delay: 1e3,
                    duration: 1500
                }, e);
                return this.each(function() {
                    var e, n, r, i, s, o, u;
                    e = $(this);
                    i = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
                    if (!i) {
                        r = false;
                        o = null;
                        n = null;
                        u = null;
                        s = function() {
                            r = false;
                            return n = null
                        };
                        return $(window).resize(function() {
                            if (r) {
                                n = Math.abs(new Date - o)
                            } else {
                                o = new Date;
                                r = true
                            } if (n &gt; t.delay) {
                                e.fadeIn()
                            }
                            if (u) {
                                clearTimeout(u)
                            }
                            return u = setTimeout(function() {
                                e.fadeOut();
                                return s()
                            }, t.duration)
                        })
                    }
                })
            }
        })($)
    }).call(this);
    $("[data-wanker]").wanker();

    $('#tbCommentBody').attr('placeholder','来吧~少年，消灭零回复！');


}
&lt;/script&gt;
&lt;!--PageBeginHtml Block End--&gt;

&lt;!--done--&gt;
&lt;div id="home"&gt;
&lt;div id="header"&gt;
	&lt;div id="blogTitle"&gt;
	&lt;a id="lnkBlogLogo" href="http://www.cnblogs.com/Wayou/"&gt;&lt;img id="blogLogo" src="/preview~Cnblogs/Images/Skins/custom/images/logo.gif" alt="返回主页"&gt;&lt;/a&gt;			
		
&lt;!--done--&gt;
&lt;h1&gt;&lt;a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/Wayou/"&gt;刘哇勇的部落格&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;/h2&gt;



		
	&lt;/div&gt;&lt;!--end: blogTitle 博客的标题和副标题 --&gt;
	&lt;div id="navigator"&gt;
		
&lt;ul id="navList"&gt;
&lt;li&gt;&lt;a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/"&gt;博客园&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/Wayou/"&gt;首页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="menu" href="http://q.cnblogs.com/"&gt;博问&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="menu" href="http://home.cnblogs.com/ing/"&gt;闪存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/Wayou/rss"&gt;订阅&lt;/a&gt;
&lt;!--&lt;a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/Wayou/rss"&gt;&lt;img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /&gt;&lt;/a&gt;--&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/"&gt;管理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
		&lt;div class="blogStats"&gt;
			
			
&lt;!--done--&gt;
随笔- 72&amp;nbsp;
文章- 1&amp;nbsp;
评论- 1145&amp;nbsp;

			
		&lt;/div&gt;&lt;!--end: blogStats --&gt;
	&lt;/div&gt;&lt;!--end: navigator 博客导航栏 --&gt;
&lt;/div&gt;&lt;!--end: header 头部 --&gt;

&lt;div id="main"&gt;
	&lt;div id="mainContent"&gt;
	&lt;div class="forFlow"&gt;
		

&lt;!--done--&gt;
&lt;div id="topics"&gt;
	&lt;div class="post"&gt;
		&lt;h1 class="postTitle"&gt;
			&lt;a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html"&gt;Chrome 控制台不完全指南&lt;/a&gt;
		&lt;/h1&gt;
		&lt;div class="clear"&gt;&lt;/div&gt;
		&lt;div class="postBody"&gt;
			&lt;div id="cnblogs_post_body" class="cnblogs-markdown"&gt;&lt;p&gt;Chrome的开发者工具已经强大到没朋友的地步了，特别是其功能丰富界面友好的console，使用得当可以有如下功效：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更高「逼格」更快「开发调试」更强「进阶级的Frontender」&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Bug无处遁形「Console大法好」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="console.log"&gt;console.log&lt;/h2&gt;
&lt;p&gt;大家都会用log，但鲜有人很好地利用&lt;code&gt;console.error&lt;/code&gt; , &lt;code&gt;console.warn&lt;/code&gt; 等将输出到控制台的信息进行分类整理。&lt;br&gt;他们功能区别不大，意义在于将输出到控制台的信息进行归类，或者说让它们更语义化。&lt;br&gt;各个所代表的语义如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;console.log&lt;/code&gt;：普通信息&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;console.info&lt;/code&gt;：提示类信息&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;console.error&lt;/code&gt;：错误信息&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;console.warn&lt;/code&gt;：警示信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当合理使用上述log方法后，可以很方便地在控制台选择查看特定类型的信息。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;console.log(&amp;#39;一颗红心向太阳&amp;#39;,&amp;#39;吼吼~&amp;#39;);
console.info(&amp;#39;楼上药不能停！&amp;#39;);
console.warn(&amp;#39;楼上嘴太贱！&amp;#39;);
console.error(&amp;#39;楼上关你毛事？&amp;#39;);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132229309815739.jpg"&gt;&lt;/p&gt;
&lt;p&gt;如果再配合&lt;code&gt;console.group&lt;/code&gt; 与&lt;code&gt;console.groupEnd&lt;/code&gt;，可以将这种分类管理的思想发挥到极致。这适合于在开发一个规模很大模块很多很复杂的Web APP时，将各自的log信息分组到以各自命名空间为名称的组里面。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;console.group(&amp;quot;app.foo&amp;quot;);
console.log(&amp;quot;来自foo模块的信息 blah blah blah...&amp;quot;);
console.groupEnd();
console.group(&amp;quot;app.bar&amp;quot;);
console.log(&amp;quot;来自bar模块的信息 blah blah blah...&amp;quot;);
console.groupEnd();&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132229568097548.jpg"&gt;&lt;/p&gt;
&lt;p&gt;而关于&lt;code&gt;console.log&lt;/code&gt;，早已被玩儿坏了。一切都源于Chrome提供了这么一个API：第一个参数可以包含一些格式化的指令比如&lt;code&gt;%c&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;比如给&lt;code&gt;hello world&lt;/code&gt; 做件漂亮的嫁衣再拉出来见人：&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;console.log(&amp;#39;%chello world&amp;#39;,&amp;#39;font-size:25px;color:red;&amp;#39;);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132230086379767.jpg"&gt;&lt;/p&gt;
&lt;p&gt;如果你觉得不够过瘾，那就把你能写出来的最华丽的CSS样式都应用上吧，比如渐变。于是你可以得到如下华丽丽的效果：&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;console.log(&amp;#39;%chello world&amp;#39;, &amp;#39;background-image:-webkit-gradient( linear, left top, right top, color-stop(0, #f22), color-stop(0.15, #f2f), color-stop(0.3, #22f), color-stop(0.45, #2ff), color-stop(0.6, #2f2),color-stop(0.75, #2f2), color-stop(0.9, #ff2), color-stop(1, #f22) );color:transparent;-webkit-background-clip: text;font-size:5em;&amp;#39;);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132232012151843.jpg"&gt;&lt;/p&gt;
&lt;p&gt;各种招大招的节奏啊~&lt;/p&gt;
&lt;p&gt;看着上面密集的代码不用惊慌，上面&lt;code&gt;console.log()&lt;/code&gt;第二个参数全是纯CSS用来控制样式的，你不会陌生。而第一个参数里可以带用百分号开头的转义指令，如上面输出带样式的文字时使用的&lt;code&gt;%c&lt;/code&gt;指令。更详细的指令参见官方API文档的&lt;a href="https://developer.chrome.com/devtools/docs/console-api#consolelogobject-object"&gt;这个表格&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果还不够过瘾，那咱们来log一些图片吧，甚至。。。动图？&lt;br&gt;对，你得先有图，我们拿&lt;a href="http://wayou.github.io/2014/09/10/chrome-console-tips-and-tricks/rabbit.gif"&gt;这张图&lt;/a&gt;为例。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;console.log(&amp;quot;%c&amp;quot;, &amp;quot;padding:50px 300px;line-height:120px;background:url(&amp;#39;http://wayou.github.io/2014/09/10/chrome-console-tips-and-tricks/rabbit.gif&amp;#39;) no-repeat;&amp;quot;);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132234240277278.gif"&gt;&lt;/p&gt;
&lt;p&gt;看着上面摇摆的豆比兔是不是有种抽它一脸的冲动。&lt;/p&gt;
&lt;p&gt;除此，&lt;code&gt;console.table&lt;/code&gt; 更是直接以表格的形式将数据输出，不能赞得太多！&lt;br&gt;借用之前写过的&lt;a href="http://www.cnblogs.com/Wayou/p/things_you_dont_know_about_frontend.html"&gt;一篇博文&lt;/a&gt;里的例子：&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;var data = [{&amp;#39;品名&amp;#39;: &amp;#39;杜雷斯&amp;#39;, &amp;#39;数量&amp;#39;: 4}, {&amp;#39;品名&amp;#39;: &amp;#39;冈本&amp;#39;, &amp;#39;数量&amp;#39;: 3}];
console.table(data);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132234369961284.jpg"&gt;&lt;/p&gt;
&lt;p&gt;另外，&lt;code&gt;console.log()&lt;/code&gt; 接收不定参数，参数间用逗号分隔，最终会输出会将它们以空白字符连接。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;console.log(&amp;#39;%c你好&amp;#39;,&amp;#39;color:red;&amp;#39;,&amp;#39;小明&amp;#39;,&amp;#39;你知道小红被妈妈打了么&amp;#39;);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132235244185362.jpg"&gt;&lt;/p&gt;
&lt;h2 id="console.assert"&gt;console.assert&lt;/h2&gt;
&lt;p&gt;当你想代码满足某些条件时才输出信息到控制台，那么你大可不必写&lt;code&gt;if&lt;/code&gt;或者三元表达式来达到目的，&lt;code&gt;cosole.assert&lt;/code&gt;便是这样场景下一种很好的工具，它会先对传入的表达式进行断言，只有表达式为假时才输出相应信息到控制台。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;var isDebug=false;
console.assert(isDebug,&amp;#39;开发中的log信息。。。&amp;#39;);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132236228718304.jpg"&gt;&lt;/p&gt;
&lt;h2 id="console.count"&gt;console.count&lt;/h2&gt;
&lt;p&gt;除了条件输出的场景，还有常见的场景是计数。&lt;br&gt;当你想统计某段代码执行了多少次时也大可不必自己去写相关逻辑，内置的&lt;code&gt;console.count&lt;/code&gt;可以很地胜任这样的任务。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;function foo(){
	//其他函数逻辑blah blah。。。
	console.count(&amp;#39;foo 被执行的次数：&amp;#39;);
}
foo();
foo();
foo();&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132237076372627.jpg"&gt;&lt;/p&gt;
&lt;h2 id="console.dir"&gt;console.dir&lt;/h2&gt;
&lt;p&gt;将DOM结点以JavaScript对象的形式输出到控制台&lt;br&gt;而&lt;code&gt;console.log&lt;/code&gt;是直接将该DOM结点以DOM树的结构进行输出，与在元素审查时看到的结构是一致的。不同的展现形式，同样的优雅，各种体位任君选择反正就是方便与体贴。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;console.dir(document.body);
console.log(document.body);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132237186211206.jpg"&gt;&lt;/p&gt;
&lt;h2 id="console.time-console.timeend"&gt;console.time &amp;amp; console.timeEnd&lt;/h2&gt;
&lt;p&gt;输出一些调试信息是控制台最常用的功能，当然，它的功能远不止于此。当做一些性能测试时，同样可以在这里很方便地进行。&lt;br&gt;比如需要考量一段代码执行的耗时情况时，可以用&lt;code&gt;console.time&lt;/code&gt;与 &lt;code&gt;console.timeEnd&lt;/code&gt;来做此事。&lt;/p&gt;
&lt;p&gt;这里借用官方文档的例子：&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;console.time(&amp;quot;Array initialize&amp;quot;);
var array= new Array(1000000);
for (var i = array.length - 1; i &amp;gt;= 0; i--) {
    array[i] = new Object();
};
console.timeEnd(&amp;quot;Array initialize&amp;quot;);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132237326066566.jpg"&gt;&lt;/p&gt;
&lt;p&gt;当然，我们也可以选择自己写代码来计时：&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;var start=new Date().getTime();
var array= new Array(1000000);
for (var i = array.length - 1; i &amp;gt;= 0; i--) {
    array[i] = new Object();
};
console.log(new Date().getTime()-start);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132238176687033.jpg"&gt;&lt;/p&gt;
&lt;p&gt;相信你也看到了，用内置的&lt;code&gt;console.time&lt;/code&gt;是多么地方便，省去了自己写代码来计算的工作量。另外值得一提的是，通过调用内置的&lt;code&gt;console.time&lt;/code&gt;得到的结果要比自己手动计算的时间差更精确可靠。&lt;/p&gt;
&lt;h2 id="console.profile-console.timelime"&gt;console.profile &amp;amp; console.timeLime&lt;/h2&gt;
&lt;p&gt;当想要查看CPU使用相关的信息时，可以使用&lt;code&gt;console.profile&lt;/code&gt;配合 &lt;code&gt;console.profileEnd&lt;/code&gt;来完成这个需求。&lt;br&gt;这一功能可以通过UI界面来完成，Chrome 开发者工具里面有个tab便是&lt;code&gt;Profile&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;与此类似的功能还有&lt;code&gt;console.timeLine&lt;/code&gt;配合 &lt;code&gt;console.timeLineEnd&lt;/code&gt;,它的作用是开始记录一段时间轴，同样可以通过Chrome开发者工具里的&lt;code&gt;Timeline&lt;/code&gt; 标签来进行相应操作。&lt;/p&gt;
&lt;p&gt;所以在我看来这两个方法有点鸡肋，因为都可以通过操作界面来完成。但至少他提供了一种命令行方式的交互，还是多了种姿势供选择吧。&lt;/p&gt;
&lt;h2 id="console.trace"&gt;console.trace&lt;/h2&gt;
&lt;p&gt;堆栈跟踪相关的调试可以使用&lt;code&gt;console.trace&lt;/code&gt;。这个同样可以通过UI界面完成。当代码被打断点后，可以在&lt;code&gt;Call Stack&lt;/code&gt;面板中查看相关堆栈信息。&lt;/p&gt;
&lt;p&gt;上面介绍的都是挂在&lt;code&gt;window.console&lt;/code&gt;这个对象下面的方法，统称为&lt;a href="https://developer.chrome.com/devtools/docs/console-api"&gt;Console API&lt;/a&gt;，接下来的这些方法确切地说应该叫命令，是Chrome内置提供，在控制台中使用的，他们统称为&lt;a href="https://developer.chrome.com/devtools/docs/commandline-api"&gt;Command Line API&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id="section"&gt;$&lt;/h2&gt;
&lt;p&gt;似乎美刀总是被程序员及各种编程语言所青睐「你看看PHP代码就知道PHPer有多爱钱了」，在Chrome的控制台里，$用处还真是蛮多且方便的。&lt;br&gt;&lt;code&gt;$_&lt;/code&gt;命令返回最近一次表达式执行的结果，功能跟按向上的方向键再回车是一样的，但它可以做为一个变量使用在你接下来的表达式中：&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;2+2//回车，再
$_+1//回车得5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132238592773388.jpg"&gt;&lt;/p&gt;
&lt;p&gt;上面的&lt;code&gt;$_&lt;/code&gt;需要领悟其奥义才能使用得当，而$0~$4则代表了最近5个你选择过的DOM节点。&lt;br&gt;什么意思？在页面右击选择&lt;code&gt;审查元素&lt;/code&gt;，然后在弹出来的DOM结点树上面随便点选，这些被点过的节点会被记录下来，而&lt;code&gt;$0&lt;/code&gt;会返回最近一次点选的DOM结点，以此类推，$1返回的是上上次点选的DOM节点，最多保存了5个，如果不够5个，则返回&lt;code&gt;undefined&lt;/code&gt;。&lt;br&gt; &lt;img src="http://images.cnitblog.com/blog/431064/201409/132239377465002.gif"&gt;&lt;/p&gt;
&lt;p&gt;另外值得一赞的是，Chrome 控制台中原生支持类jQuery的选择器，也就是说你可以用&lt;code&gt;$&lt;/code&gt;加上熟悉的css选择器来选择DOM节点，多么滴熟悉。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;$(&amp;#39;body&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132239563875073.jpg"&gt;&lt;/p&gt;
&lt;p&gt;$(selector)返回的是满足选择条件的首个DOM元素。&lt;br&gt;剥去她伪善的外衣，其实&lt;code&gt;$(selector)&lt;/code&gt;是原生JavaScript &lt;code&gt;document.querySelector()&lt;/code&gt; 的封装。&lt;br&gt;同时另一个命令&lt;code&gt;$$(selector)&lt;/code&gt;返回的是所有满足选择条件的元素的一个集合，是对&lt;code&gt;document.querySelectorAll()&lt;/code&gt; 的封装。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;$$(&amp;#39;div&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132240118246891.jpg"&gt;&lt;/p&gt;
&lt;h2 id="copy"&gt;copy&lt;/h2&gt;
&lt;p&gt;通过此命令可以将在控制台获取到的内容复制到剪贴板。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;copy(document.body)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后你就可以到处粘了：&lt;/p&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132240325274833.jpg"&gt;&lt;/p&gt;
&lt;p&gt;看完此条命令行，机智的你是不是跟脑洞全开的我一样，冒出了这样一个想法：那就是通过这个命令可以在JavaScript里进行复制操作从而不用依赖Flash插件了。&lt;br&gt;But现实是残酷的，如之前所述的，这里的控制台命令只能在控制台中环境中执行，因为他不依附于任何全局变量比如&lt;code&gt;window&lt;/code&gt;，所以其实在JS代码里是访问不了这个&lt;code&gt;copy&lt;/code&gt;方法的，所以从代码层面来调用复制功能也就无从谈起。但愿有天浏览器会提供相应的JS实现吧~&lt;/p&gt;
&lt;h2 id="keys-values"&gt;keys &amp;amp; values&lt;/h2&gt;
&lt;p&gt;这是一对基友。前者返回传入对象所有属性名组成的数据，后者返回所有属性值组成的数组。具体请看下面的例子：&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;var tboy={name:&amp;#39;wayou&amp;#39;,gender:&amp;#39;unknown&amp;#39;,hobby:&amp;#39;opposite to the gender&amp;#39;};
keys(tboy);
values(tboy);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132240472158279.jpg"&gt;&lt;/p&gt;
&lt;h2 id="monitor-unmonitor"&gt;monitor &amp;amp; unmonitor&lt;/h2&gt;
&lt;p&gt;monitor(function)，它接收一个函数名作为参数，比如&lt;code&gt;function a&lt;/code&gt;,每次&lt;code&gt;a&lt;/code&gt;被执行了，都会在控制台输出一条信息，里面包含了函数的名称&lt;code&gt;a&lt;/code&gt;及执行时所传入的参数。&lt;/p&gt;
&lt;p&gt;而unmonitor(function)便是用来停止这一监听。&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;function sayHello(name){
	alert(&amp;#39;hello,&amp;#39;+name);
}
monitor(sayHello);
sayHello(&amp;#39;wayou&amp;#39;);
unmonitor(sayHello);
sayHello(&amp;#39;wayou&amp;#39;);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/431064/201409/132241035742481.jpg"&gt;&lt;/p&gt;
&lt;h2 id="debug-undebug"&gt;debug &amp;amp; undebug&lt;/h2&gt;
&lt;p&gt;debug同样也是接收一个函数名作为参数。当该函数执行时自动断下来以供调试，类似于在该函数的入口处打了个断点，可以通过debugger来做到，同时也可以通过在Chrome开发者工具里找到相应源码然后手动打断点。&lt;br&gt;而&lt;code&gt;undebug&lt;/code&gt; 则是解除该断点。&lt;/p&gt;
&lt;p&gt;而其他还有好些命令则让人没有说的欲望，因为好些都可以通过Chrome开发者工具的UI界面来操作并且比用在控制台输入要方便。&lt;/p&gt;
&lt;h2 id="reference"&gt;REFERENCE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/+AddyOsmani/posts/TanDFKEN9Kn"&gt;Styled console logging in the Chrome DevTools (Canary)&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/devtools/docs/console-api"&gt;Chrome Console API&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/devtools/docs/commandline-api"&gt;Chrome Console Command Line API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;div id="MySignature"&gt;&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="blog_post_info_block"&gt;
&lt;div id="BlogPostCategory"&gt;&lt;/div&gt;
&lt;div id="EntryTag"&gt;&lt;/div&gt;
&lt;div id="blog_post_info"&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="post_next_prev"&gt;&lt;/div&gt;
&lt;/div&gt;


		&lt;/div&gt;
		&lt;div class="postDesc"&gt;posted @ &lt;span id="post-date"&gt;2014-09-13 22:44&lt;/span&gt; &lt;a href='http://www.cnblogs.com/Wayou/'&gt;哇勇&lt;/a&gt; 阅读(&lt;span id="post_view_count"&gt;...&lt;/span&gt;) 评论(&lt;span id="post_comment_count"&gt;...&lt;/span&gt;)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3970451" rel="nofollow"&gt;编辑&lt;/a&gt; &lt;a href="#" onclick="AddToWz(3970451);return false;"&gt;收藏&lt;/a&gt;&lt;/div&gt;
	&lt;/div&gt;
	&lt;script src="http://cdn.cnblogs.com/highlight/highlight.min.js"&gt;&lt;/script&gt;&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;&lt;script type="text/javascript"&gt;var allowComments=true,isLogined=false,cb_blogId=123544,cb_entryId=3970451,cb_blogApp=currentBlogApp,cb_blogUserGuid='c5e8573b-1ed6-e111-aa3f-842b2b196315',cb_entryCreatedDate='2014/9/13 22:44:00';loadViewCount(cb_entryId);&lt;/script&gt;
	
&lt;/div&gt;&lt;!--end: topics 文章、评论容器--&gt;
&lt;a name="!comments"&gt;&lt;/a&gt;&lt;div id="blog-comments-placeholder"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var commentManager = new blogCommentManager();commentManager.renderComments(0);&lt;/script&gt;
&lt;div id="comment_form" class="commentform"&gt;
&lt;a name="commentform"&gt;&lt;/a&gt;
&lt;div id="divCommentShow"&gt;&lt;/div&gt;
&lt;div id="comment_nav"&gt;&lt;span id="span_refresh_tips"&gt;&lt;/span&gt;&lt;a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();"&gt;刷新评论&lt;/a&gt;&lt;a href="#" onclick="return RefreshPage();"&gt;刷新页面&lt;/a&gt;&lt;a href="#top"&gt;返回顶部&lt;/a&gt;&lt;/div&gt;
&lt;div id="comment_form_container"&gt;&lt;/div&gt;
&lt;div class="ad_text_commentbox" id="ad_text_under_commentbox"&gt;&lt;/div&gt;
&lt;div id="site_nav_under"&gt;&lt;a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园"&gt;博客园首页&lt;/a&gt;&lt;a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区"&gt;博问&lt;/a&gt;&lt;a href="http://news.cnblogs.com/" target="_blank" title="IT新闻"&gt;新闻&lt;/a&gt;&lt;a href="http://home.cnblogs.com/ing/" target="_blank"&gt;闪存&lt;/a&gt;&lt;a href="http://job.cnblogs.com/" target="_blank"&gt;程序员招聘&lt;/a&gt;&lt;a href="http://kb.cnblogs.com/" target="_blank"&gt;知识库&lt;/a&gt;&lt;/div&gt;
&lt;div id="opt_under_post"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    var enableGoogleAd = canShowAdsense(); var googletag = googletag || {}; googletag.cmd = googletag.cmd || [];
    fixPostBodyFormat();
&lt;/script&gt;
&lt;div id="ad_under_post_holder"&gt;
&lt;script type='text/javascript'&gt;
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        if (enableGoogleAd) {
            var gads = document.createElement('script');
            gads.async = true;
            gads.type = 'text/javascript';
            var useSSL = 'https:' == document.location.protocol;
            gads.src = (useSSL ? 'https:' : 'http:') + '//www.googletagservices.com/tag/js/gpt.js';
            var node = document.getElementsByTagName('script')[0];
            node.parentNode.insertBefore(gads, node);
        }
    })();
&lt;/script&gt;
&lt;script type='text/javascript'&gt;
    try {
        if (enableGoogleAd) {
            googletag.cmd.push(function () {
                googletag.defineSlot('/1090369/cnblogs_blogpost_C1_sitehome', [300, 250], 'div-gpt-ad-1346480159711-0').addService(googletag.pubads());
                googletag.pubads().enableSingleRequest();
                googletag.enableServices();
            });
        };
    } catch (e) { }
&lt;/script&gt;
&lt;div id="google_ad_c1" class="c_ad_block"&gt;
    &lt;div id='div-gpt-ad-1346480159711-0' style='width:300px; height:250px;'&gt;
    &lt;script type='text/javascript'&gt;
        try {
            if (enableGoogleAd) {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1346480159711-0'); });            
            } else {
                $('#div-gpt-ad-1346480159711-0').hide();
            }
    } catch (e) { }
    &lt;/script&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="blog_news_kb"&gt;&lt;/div&gt;
&lt;div id="HistoryToday" class="c_ad_block"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
&lt;/script&gt;
&lt;/div&gt;

	&lt;/div&gt;&lt;!--end: forFlow --&gt;
	&lt;/div&gt;&lt;!--end: mainContent 主体内容容器--&gt;

	&lt;div id="sideBar"&gt;
		&lt;div id="sideBarMain"&gt;
			
&lt;!--done--&gt;
&lt;div class="newsItem"&gt;
&lt;h3 class="catListTitle"&gt;公告&lt;/h3&gt;
	&lt;div id="blog-news"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogNews();&lt;/script&gt;
&lt;/div&gt;

			&lt;div id="blog-calendar" style="display:none"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogDefaultCalendar();&lt;/script&gt;
			
			&lt;div id="leftcontentcontainer"&gt;
				&lt;div id="blog-sidecolumn"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogSideColumn();&lt;/script&gt;
			&lt;/div&gt;
			
		&lt;/div&gt;&lt;!--end: sideBarMain --&gt;
	&lt;/div&gt;&lt;!--end: sideBar 侧边栏容器 --&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;/div&gt;&lt;!--end: main --&gt;
	&lt;div class="clear"&gt;&lt;/div&gt;
	&lt;div id="footer"&gt;
		
&lt;!--done--&gt;
Copyright &amp;copy;2014 哇勇
	&lt;/div&gt;&lt;!--end: footer --&gt;
&lt;/div&gt;&lt;!--end: home 自定义的最大容器 --&gt;
&lt;!--PageEndHtml Block Begin--&gt;
&lt;a id="toTop" title="电梯直达顶部！" href="#home" style="position:fixed;bottom:0;right:0;display:none;opacity:.5;"&gt;
&lt;img title='' alt='' src='http://images.cnblogs.com/cnblogs_com/Wayou/399998/o_up.png'&gt;
&lt;/a&gt;

&lt;div class="wanker" data-wanker=""&gt;
  &lt;div class="wanker-content"&gt;
    &lt;h1&gt;嘿，你闲得吧~&lt;/h1&gt;
    &lt;p&gt;既然你已经试了，那就告诉你吧，本页面不是响应式的 :(&lt;/p&gt;
&lt;p&gt;关注我的&lt;a href="http://weibo.com/liuwayong" target="_blank"&gt;新浪微博&lt;/a&gt;，分享幽默及前端资讯 &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;!--PageEndHtml Block End--&gt;
&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-Wayou-p-chrome-console-tips-and-tricks.html</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/Wayou/p/chrome-console-tips-and-tricks.html</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-Wayou-p-chrome-console-tips-and-tricks.html</UUID>
</Page>