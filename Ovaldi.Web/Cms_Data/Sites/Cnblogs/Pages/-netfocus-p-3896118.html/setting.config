<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-netfocus-p-3896118.html</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
&lt;title&gt;分享我对代码命名的一点思考和理解 - netfocus - 博客园&lt;/title&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/bundles/blog-common.css"&gt;
&lt;link id="MainCss" type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/skins/KJC/bundle-KJC.css"&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/blog/customcss/17223.css"&gt;
&lt;link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/netfocus/rss"&gt;
&lt;link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/netfocus/rsd.xml"&gt;
&lt;link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/netfocus/wlwmanifest.xml"&gt;
&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;  
&lt;script type="text/javascript"&gt;var currentBlogApp = 'netfocus', cb_enable_mathjax=false;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/blog-common.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a name="top"&gt;&lt;/a&gt;

&lt;table class="Framework" cellspacing="0" cellpadding="0" width="100%"&gt;
	&lt;tr&gt;
		&lt;td colspan="3"&gt;
			
&lt;div id="top"&gt;
&lt;table cellpadding="10" cellspacing="0"&gt;
	&lt;tr&gt;
		&lt;td nowrap=""&gt;
			&lt;h1&gt;&lt;a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/netfocus/"&gt;欢迎光临汤雪华的博客&lt;/a&gt;&lt;/h1&gt;
			一个人一辈子能做好一件事情就够了！DDD、ENode、EQueue交流群：185916873
		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id="sub"&gt;
	&lt;div id="sub-right"&gt;
&lt;div class="BlogStats"&gt;posts - 81, comments - 974, trackbacks - 0, articles - 0&lt;/div&gt;&lt;/div&gt;
	
&amp;nbsp;
&lt;a id="Header1_MyLinks1_HomeLink" href="http://www.cnblogs.com/"&gt;博客园&lt;/a&gt;&amp;nbsp;::
&lt;a id="Header1_MyLinks1_MyHomeLink" href="http://www.cnblogs.com/netfocus/"&gt;首页&lt;/a&gt;&amp;nbsp;::
&lt;a id="Header1_MyLinks1_NewPostLink" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1"&gt;新随笔&lt;/a&gt;&amp;nbsp;::
&lt;a id="Header1_MyLinks1_ContactLink" accesskey="9" rel="nofollow" href="http://space.cnblogs.com/msg/send/netfocus"&gt;联系&lt;/a&gt;&amp;nbsp;::
&lt;a id="Header1_MyLinks1_Syndication" href="http://www.cnblogs.com/netfocus/rss"&gt;订阅&lt;/a&gt;
&lt;a id="Header1_MyLinks1_XMLLink" class="XMLLink" href="http://www.cnblogs.com/netfocus/rss"&gt;&lt;img src="/preview~Cnblogs/Images/images/xml.gif" alt="订阅"&gt;&lt;/a&gt;&amp;nbsp;::
&lt;a id="Header1_MyLinks1_Admin" rel="nofollow" href="http://i.cnblogs.com/"&gt;管理&lt;/a&gt;

&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td class="LeftCell"&gt;
			&lt;div id="leftmenu"&gt;
            	
		            &lt;div id="blog-calendar" style="display:none"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogDefaultCalendar();&lt;/script&gt;
		            
&lt;div id="cell"&gt;
&lt;img src="/preview~Cnblogs/Images/Skins/KJC/Images/icon-group.jpg" hspace="5" align="left" vspace="2"&gt;&lt;h3&gt;公告&lt;/h3&gt;
&lt;div id="news"&gt;
	&lt;div id="blog-news"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogNews();&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;

	            
	            &lt;div id="blog-sidecolumn"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogSideColumn();&lt;/script&gt;
			&lt;/div&gt;
		&lt;/td&gt;
		&lt;td class="MainCell"&gt;
			&lt;div id="main"&gt;
				

	&lt;div class="post"&gt;
		&lt;div class="posthead"&gt;
			&lt;h2&gt;
				&lt;a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/netfocus/p/3896118.html"&gt;分享我对代码命名的一点思考和理解&lt;/a&gt;
			&lt;/h2&gt;
 			Posted on &lt;span id="post-date"&gt;2014-09-14 00:29&lt;/span&gt; &lt;a href='http://www.cnblogs.com/netfocus/'&gt;netfocus&lt;/a&gt; 阅读(&lt;span id="post_view_count"&gt;...&lt;/span&gt;) 评论(&lt;span id="post_comment_count"&gt;...&lt;/span&gt;)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3896118" rel="nofollow"&gt;编辑&lt;/a&gt; &lt;a href="#" onclick="AddToWz(3896118);return false;"&gt;收藏&lt;/a&gt;
			&lt;script type="text/javascript"&gt;var allowComments=true,isLogined=false,cb_blogId=17223,cb_entryId=3896118,cb_blogApp=currentBlogApp,cb_blogUserGuid='b04f360b-63cf-dd11-9e4d-001cf0cd104b',cb_entryCreatedDate='2014/9/14 0:29:00';loadViewCount(cb_entryId);&lt;/script&gt;
			
		&lt;/div&gt;
		&lt;div class="postbody"&gt;&lt;div id="cnblogs_post_body"&gt;&lt;p&gt;一个软件最后都会落实到代码。而代码，其背后的架构设计或设计思想或模式固然重要，但我觉得更重要的东西则是良好的命名。混乱或错误的命名不仅让我们对代码难以理解，更糟糕的是，会误导我们的思维，导致对代码的理解完全错误。相反，良好的命名，则可以让我们的代码非常容易读懂，也能向读者正确表达事物以及逻辑的本质，从而使得代码的可维护性就大大增强，读命名好的文章是非常流畅的，会有一种享受的感觉。&lt;/p&gt;
&lt;p&gt;另外一点也许大家还没感受到，那就是良好的命名，以及良好的命名习惯，由于我们总是对每个概念的名称要求非常苛刻，我们会思考这个名称所表达的概念是否正确，该名称是否正确表达了事物的本质或正确反映了某个行为的逻辑。所以，这种对命名的良好思考习惯，可以反过来帮助我们纠正之前的一些错误设计和代码实现；比如，你之前有一个地方可能命名不太准确，然后你发现后面有另一个地方需要用这个名字，且更合理。所以你会发现这个名字对前面的地方就不适合了，从而你会去思考前面的地方可能需要用其他的名字，或者你会发现前面的地方的设计根本就是有问题的。这种就是名字可以促使你思考你的设计是否正确的例子。&lt;/p&gt;
&lt;h2&gt;代码命名混乱或错误的主要原因：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;没理解事物的本质；&lt;/li&gt;
&lt;li&gt;理解了事物的本质，但不知道命名的重要性或者根本不屑于做好命名；&lt;/li&gt;
&lt;li&gt;理解了事物的本质，也知道命名的重要性，但没能力命名好事物；&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;养成良好的命名习惯的一些想法：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;对自己的严格自律，自己写代码时要有一种希望把每个名称都命名好的强烈意识和严格的自律意识；&lt;/li&gt;
&lt;li&gt;要努力分析和思考当前被你命名的事物或逻辑的本质；这点非常关键，思考不深入，就会导致最后对这个事物的命名错误，因为你还没想清楚被你命名的事物是个什么东西；&lt;/li&gt;
&lt;li&gt;在有自律意识和一定的分析能力基础之上，注意命名的方法技巧；要知道何时用动词，何时用名词；以及形容词放哪里，动词放哪里，名词放哪里；也就是小学时的主谓宾要会用；&lt;/li&gt;
&lt;li&gt;你的任何一个属性的名字都要和其实际所代表的含义一致；你的任何一个方法所做的事情都要和该方法的名字的含义一致；&lt;/li&gt;
&lt;li&gt;从代码的命名可以看出写代码的人编程时思路是否清晰，如果你对一个名字的命名不准确，很可能体现出你还没有理解这个名字背后的东西；&lt;/li&gt;
&lt;li&gt;要让你的程序的每个相似的地方的命名风格总是一致的。不要一会儿大写，一会儿小写；一会儿全称一会儿简写；一会儿Pascal命名法，一会儿camel命名法或匈牙利命名法；&lt;/li&gt;
&lt;li&gt;不要出现重复的命名；因为通常名称都有嵌套关系，比如类在命名空间里，方法在类里，所有如果一个概念在命名空间里表达了，那就不必再类上再表达一次；&lt;/li&gt;
&lt;li&gt;对于属性或类名，应该总是名词在最后面，名词决定了这个属性代表什么，前面的部分都是用于修饰这个名词；比如，假如现在你有一个服务，然后又是一个关于订单的服务，那就可以命名为OrderService，这样命名就是告诉我们这是一个服务，然后是一个订单服务；再比如CancelOrderCommand，看到这个我们就知道这是一个Command，即命令，然后是什么命令呢？就是一个取消订单的命令，CancelOrder表示取消订单；&lt;/li&gt;
&lt;li&gt;对于方法，应该总是动词开头，名词结尾；比如Order.AddItem(orderItem);这个，表示订单类有一个添加订单项的方法，Add是动词，表示添加，Item是名词表示订单项；&lt;/li&gt;
&lt;li&gt;在C#中，我们一般用camel以及Pascal命名法，而不是匈牙利命名法。我觉得主要是两个原因：1）VS强大的智能感知提示的存在，我们没有必要突出变量的类型了，但这个我觉得只是一个次要原因；2）真正的原因，我上面有提到，一个变量，名词是放在最后的，这个名词决定了这个变量代表什么。比如有个变量叫totalCount，我们一看就知道这是一个count，然后count一定是一个int或者long，所以就不需要在强调它的类型了。再比如，remotingRequest, httpRequest，这种，我们也一看就知道他们是请求，一个是remoting的请求，一个是http的请求。remoting,http是用来修饰request的。request决定了这个变量是什么（同时就意味着我们知道了他的类型了），然后remoting,http这种是进一步说明该request的业务含义或当前上下文。就像disabledButton，我们一看就知道这是一个button，然后是一个什么Button呢，就是一个已禁用的button。所以，好的名称，本身就会让我们很容易知道该名称是什么东西，它的类型是什么，具有什么业务含义，所以没有必要再加类型缩写作为前缀；&lt;/li&gt;
&lt;li&gt;多学习英文，多看国外优秀开源项目中的命名技巧，会对我们命名有很大帮助；&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;通过一些不太好的代码命名来分析一些简单的命名问题&lt;/h2&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/13665/201409/132318412159759.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;以上代码中，有很多问题，我们来一一分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方法的参数，第一个字母，一会儿大写的P，一会儿小写的p，不一致；&lt;/li&gt;
&lt;li&gt;第二个参数后面出现多余的空格，不应该；&lt;/li&gt;
&lt;li&gt;_paramsTable这个参数为什么要出现下划线，而其他参数没有下划线，不一致；&lt;/li&gt;
&lt;li&gt;publishRequest属于camel命名法，而iSignCounter, sStageIsOK这种属于另一种命名法，这种命名c++中用的多，不一致；&lt;/li&gt;
&lt;li&gt;foreach循环中，参数名叫instParam，但是后面的集合叫arrParams4SignActions，更对称一点的，应该叫arrInstParam；&lt;/li&gt;
&lt;li&gt;方法的最后两行，出现多余的空格，导致代码格式排版混乱；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从上面的代码我们可以知道，仅仅是通过这些细节，就能发现很多问题。我们写代码时，只要多细心点，多注意点排版是否美观一致、命名是否统一，那代码写出来就会漂亮很多了。下面我们再看看其他的代码：&lt;/p&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/13665/201409/132332351682183.png" alt=""&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;上面的代码中，两个参数的命名也不一致，projectid中，i是小写，但是publishId参数，i却是大写，应该都统一为大写；&lt;/li&gt;
&lt;li&gt;ViewData中的key，一会儿是全部大写的UPDATE，一会儿是另一种命名，不一致；&lt;/li&gt;
&lt;li&gt;上面的两个红框标出来的if，虽然都是只有一行代码，但是一个有括号，一个没有括号，不一致；且第二个if里出现了多余的空行，格式混乱；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/13665/201409/132340191685294.png" alt=""&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;上面的代码中，函数中，一会儿用IList，是一个接口，一会儿用Dictionary，非接口，不一致；应该都用接口，或者都不用接口；&lt;/li&gt;
&lt;li&gt;listOriginal和receiverList命名不一致，要么全部list开头，要么全部List结尾；&lt;/li&gt;
&lt;li&gt;foreach循环中，变量的类型叫TDMSOriginalRequirement，但是变量名却叫originalItem，而集合名称又叫listOriginal，应该三者统一；比如foreach (Assembly assembly in assemblies)&lt;/li&gt;
&lt;li&gt;+&amp;ldquo;...&amp;rdquo;这个地方没有用空格，加号两边应该要空格，这属于格式混乱，不严谨；&lt;/li&gt;
&lt;li&gt;createUser这个变量取的很不理想，create是动词，createUser合起来就是创建用户的意思，而他这里要表达的意思是创建人的意思，所以应该叫createdUser或者creator；&lt;/li&gt;
&lt;li&gt;为何originalItemFormat和originalItem的意思可以等价，不合理，如果等价，一开始就要命名为originalItemFormat；而且format是一个东西，动词放在最后，算个啥？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/13665/201409/132358057626942.png" alt=""&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;上面这个类的几个私有字段中，有些带命名空间，有些不带，要么都不带，要么都带；一般命名空间都是在上面声明，后续不需要出现；&lt;/li&gt;
&lt;li&gt;ILog logger；这一句有两个问题：1）logger为何没有下划线，不统一；2）为何类名叫ILog，而变量名叫logger，要统一，要么类名叫ILogger，要么变量名叫_log；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="http://images.cnitblog.com/blog/13665/201409/140002070901351.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;上面这两个私有方法，一个是大写开头，一个是小写开头，不一致，混乱；应该要一致；&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;通过上面的一些例子，我们知道，在我们不经意间，多写了一个空格或者一个空行，或者一个字母的大小写不一致了，都会导致命名的不一致；如果自己没有养成这种平时注重代码命名各种一致性的习惯，那写出来的代码很可能就是像上面那样。我觉得是非常糟糕的。上面我举的例子都只是简单的命名方面的，更深层次的命名问题，比如如何做到名称和其背后的实现内容一致，这个是需要我们平时不断修炼的。不是短时间内就可以做到那个程度。&lt;/p&gt;
&lt;p&gt;我觉得，要做好命名，归根结底：&lt;/p&gt;
&lt;p&gt;1）先要意识到命名的重要性；2）要端正态度，要认真的写代码；3）要努力推敲每个名称和其实际做的事情是否一致，也就是命名的准确性；4）要时刻注意命名的各种一致性；&lt;/p&gt;
&lt;p&gt;养成良好的命名习惯不是为了别人，不是为了公司，而是为了提高自己的编程修养，提高自己认识事物的能力。&lt;/p&gt;&lt;/div&gt;&lt;div id="MySignature"&gt;&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="blog_post_info_block"&gt;
&lt;div id="BlogPostCategory"&gt;&lt;/div&gt;
&lt;div id="EntryTag"&gt;&lt;/div&gt;
&lt;div id="blog_post_info"&gt;
&lt;/div&gt;
&lt;div class="clear"&gt;&lt;/div&gt;
&lt;div id="post_next_prev"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
	&lt;/div&gt;&lt;a name="!comments"&gt;&lt;/a&gt;&lt;div id="blog-comments-placeholder"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var commentManager = new blogCommentManager();commentManager.renderComments(0);&lt;/script&gt;
&lt;div id="comment_form" class="commentform"&gt;
&lt;a name="commentform"&gt;&lt;/a&gt;
&lt;div id="divCommentShow"&gt;&lt;/div&gt;
&lt;div id="comment_nav"&gt;&lt;span id="span_refresh_tips"&gt;&lt;/span&gt;&lt;a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();"&gt;刷新评论&lt;/a&gt;&lt;a href="#" onclick="return RefreshPage();"&gt;刷新页面&lt;/a&gt;&lt;a href="#top"&gt;返回顶部&lt;/a&gt;&lt;/div&gt;
&lt;div id="comment_form_container"&gt;&lt;/div&gt;
&lt;div class="ad_text_commentbox" id="ad_text_under_commentbox"&gt;&lt;/div&gt;
&lt;div id="site_nav_under"&gt;&lt;a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园"&gt;博客园首页&lt;/a&gt;&lt;a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区"&gt;博问&lt;/a&gt;&lt;a href="http://news.cnblogs.com/" target="_blank" title="IT新闻"&gt;新闻&lt;/a&gt;&lt;a href="http://home.cnblogs.com/ing/" target="_blank"&gt;闪存&lt;/a&gt;&lt;a href="http://job.cnblogs.com/" target="_blank"&gt;程序员招聘&lt;/a&gt;&lt;a href="http://kb.cnblogs.com/" target="_blank"&gt;知识库&lt;/a&gt;&lt;/div&gt;
&lt;div id="opt_under_post"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    var enableGoogleAd = canShowAdsense(); var googletag = googletag || {}; googletag.cmd = googletag.cmd || [];
    fixPostBodyFormat();
&lt;/script&gt;
&lt;div id="ad_under_post_holder"&gt;
&lt;script type='text/javascript'&gt;
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        if (enableGoogleAd) {
            var gads = document.createElement('script');
            gads.async = true;
            gads.type = 'text/javascript';
            var useSSL = 'https:' == document.location.protocol;
            gads.src = (useSSL ? 'https:' : 'http:') + '//www.googletagservices.com/tag/js/gpt.js';
            var node = document.getElementsByTagName('script')[0];
            node.parentNode.insertBefore(gads, node);
        }
    })();
&lt;/script&gt;
&lt;script type='text/javascript'&gt;
    try {
        if (enableGoogleAd) {
            googletag.cmd.push(function () {
                googletag.defineSlot('/1090369/cnblogs_blogpost_C1_sitehome', [300, 250], 'div-gpt-ad-1346480159711-0').addService(googletag.pubads());
                googletag.pubads().enableSingleRequest();
                googletag.enableServices();
            });
        };
    } catch (e) { }
&lt;/script&gt;
&lt;div id="google_ad_c1" class="c_ad_block"&gt;
    &lt;div id='div-gpt-ad-1346480159711-0' style='width:300px; height:250px;'&gt;
    &lt;script type='text/javascript'&gt;
        try {
            if (enableGoogleAd) {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1346480159711-0'); });            
            } else {
                $('#div-gpt-ad-1346480159711-0').hide();
            }
    } catch (e) { }
    &lt;/script&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="blog_news_kb"&gt;&lt;/div&gt;
&lt;div id="HistoryToday" class="c_ad_block"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
&lt;/script&gt;
&lt;/div&gt;

			&lt;/div&gt;
		&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td colspan="2" class="FooterCell"&gt;
			
&lt;p id="footer"&gt;
	Powered by: 
	&lt;br&gt;
	
	&lt;a id="Footer1_Hyperlink3" name="Hyperlink1" href="http://www.cnblogs.com/"&gt;&lt;font face="Verdana"&gt;博客园&lt;/font&gt;&lt;/a&gt;
	&lt;br&gt;
	Copyright &amp;copy; netfocus
&lt;/p&gt;

		&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;

&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-netfocus-p-3896118.html</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/netfocus/p/3896118.html</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-netfocus-p-3896118.html</UUID>
</Page>