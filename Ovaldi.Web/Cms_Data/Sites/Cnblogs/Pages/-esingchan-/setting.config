<?xml version="1.0" encoding="utf-8"?>
<Page xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Ovaldi.Core.Models">
	<AbsoluteName>-esingchan-</AbsoluteName>
	<CustomFields xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<EnableScript>true</EnableScript>
	<EnableTheming>true</EnableTheming>
	<Html>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
&lt;title&gt;esingchan - 博客园&lt;/title&gt;
&lt;link type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/bundles/blog-common.css"&gt;
&lt;link id="MainCss" type="text/css" rel="stylesheet" href="/preview~Cnblogs/Styles/skins/sea/bundle-sea.css"&gt;
&lt;link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/esingchan/rss"&gt;
&lt;link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/esingchan/rsd.xml"&gt;
&lt;link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/esingchan/wlwmanifest.xml"&gt;
&lt;script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"&gt;&lt;/script&gt;  
&lt;script type="text/javascript"&gt;var currentBlogApp = 'esingchan', cb_enable_mathjax=false;&lt;/script&gt;
&lt;script src="/preview~Cnblogs/Scripts/bundles/blog-common.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a name="top"&gt;&lt;/a&gt;

&lt;!--done--&gt;
&lt;div id="header"&gt;
	
&lt;!--done--&gt;
&lt;div class="header"&gt;
	&lt;div class="headerText"&gt;
		&lt;a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/esingchan/"&gt;esingchan&lt;/a&gt;&lt;br&gt;
		
	&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="mytopmenu"&gt;
	
		&lt;div id="mylinks"&gt;
&lt;!--done--&gt;
&lt;a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/"&gt;博客园&lt;/a&gt; &amp;nbsp;
&lt;a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/esingchan/"&gt;首页&lt;/a&gt; &amp;nbsp;
&lt;a href="http://q.cnblogs.com" class="menu"&gt;博问&lt;/a&gt; &amp;nbsp;
&lt;a href="http://home.cnblogs.com/ing/" class="menu"&gt;闪存&lt;/a&gt; &amp;nbsp;
&lt;a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1"&gt;新随笔&lt;/a&gt; &amp;nbsp;
&lt;a id="MyLinks1_ContactLink" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/esingchan"&gt;联系&lt;/a&gt; &amp;nbsp;
&lt;a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/esingchan/rss"&gt;订阅&lt;/a&gt;&lt;a id="MyLinks1_XMLLink" href="http://www.cnblogs.com/esingchan/rss"&gt;&lt;img src="/preview~Cnblogs/Images/images/xml.gif" alt="订阅"&gt;&lt;/a&gt;&amp;nbsp;
&lt;a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/"&gt;管理&lt;/a&gt;
&lt;/div&gt;
		&lt;div id="mystats"&gt;
&lt;!--done--&gt;
随笔-12&amp;nbsp;
评论-21&amp;nbsp;
文章-0&amp;nbsp;
trackbacks-0
&lt;/div&gt;
	
&lt;/div&gt;
&lt;div id="centercontent"&gt;
	

&lt;!--done--&gt;


&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl00_ImageLink" title="Day link" href="http://www.cnblogs.com/esingchan/archive/2014/09/07.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年9月7日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl00_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/esingchan/p/3917718.html"&gt;分布式理论之一：Paxos算法的通俗理解&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 维基的简介：Paxos算法是莱斯利&amp;#183;兰伯特（Leslie Lamport，就是 LaTeX 中的&amp;quot;La&amp;quot;，此人现在在微软研究院）于1990年提出的一种基于消息传递且具有高度容错特性的一致性算法。Paxos算法目前在Google的Chubby、MegaStore、Spanner等系统中得到了应用，Ha...&lt;a href="http://www.cnblogs.com/esingchan/p/3917718.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-09-07 12:38 esingchan 阅读(135) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3917718" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl01_ImageLink" title="Day link" href="http://www.cnblogs.com/esingchan/archive/2014/09/06.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年9月6日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl01_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/esingchan/p/3958962.html"&gt;ZIP压缩算法详细分析及解压实例解释&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 最近自己实现了一个ZIP压缩数据的解压程序，觉得有必要把ZIP压缩格式进行一下详细总结，数据压缩是一门通信原理和计算机科学都会涉及到的学科，在通信原理中，一般称为信源编码，在计算机科学里，一般称为数据压缩，两者本质上没啥区别，在数学家看来，都是映射。一方面在进行通信的时候，有必要将待传输的数据进行压...&lt;a href="http://www.cnblogs.com/esingchan/p/3958962.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-09-06 20:51 esingchan 阅读(3846) 评论(20)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3958962" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl02_ImageLink" title="Day link" href="http://www.cnblogs.com/esingchan/archive/2014/09/04.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年9月4日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl02_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/esingchan/p/3947156.html"&gt;MapReduce剖析笔记之八: Map输出数据的处理类MapOutputBuffer分析&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 在上一节我们分析了Child子进程启动，处理Map、Reduce任务的主要过程，但对于一些细节没有分析，这一节主要对MapOutputBuffer这个关键类进行分析。MapOutputBuffer顾名思义就是Map输出结果的一个Buffer，用户在编写map方法的时候有一个参数OutputColle...&lt;a href="http://www.cnblogs.com/esingchan/p/3947156.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-09-04 00:39 esingchan 阅读(309) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3947156" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl03_ImageLink" title="Day link" href="http://www.cnblogs.com/esingchan/archive/2014/08/31.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年8月31日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl03_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/esingchan/p/3946744.html"&gt;MapReduce剖析笔记之七：Child子进程处理Map和Reduce任务的主要流程&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 在上一节我们分析了TaskTracker如何对JobTracker分配过来的任务进行初始化，并创建各类JVM启动所需的信息，最终创建JVM的整个过程，本节我们继续来看，JVM启动后，执行的是Child类中的Main方法，这个方法是如何执行的。1，从命令参数中解析相应参数，获取JVMID、建立RPC连...&lt;a href="http://www.cnblogs.com/esingchan/p/3946744.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-08-31 00:18 esingchan 阅读(25) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3946744" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl04_ImageLink" title="Day link" href="http://www.cnblogs.com/esingchan/archive/2014/08/30.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年8月30日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl04_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/esingchan/p/3946616.html"&gt;MapReduce剖析笔记之六：TaskTracker初始化任务并启动JVM过程&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 在上面一节我们分析了JobTracker调用JobQueueTaskScheduler进行任务分配，JobQueueTaskScheduler又调用JobInProgress按照一定顺序查找任务的流程，获得了任务之后，将任务封装为TaskTrackerAction数组返回的整个过程。TaskTrac...&lt;a href="http://www.cnblogs.com/esingchan/p/3946616.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-08-30 18:52 esingchan 阅读(274) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3946616" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
			&lt;div class="postSeparator"&gt;&lt;/div&gt;
		
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl04_DayList_TitleUrl_1" class="postTitle2" href="http://www.cnblogs.com/esingchan/p/3940565.html"&gt;MapReduce剖析笔记之五：Map与Reduce任务分配过程&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 在上一节分析了TaskTracker和JobTracker之间通过周期的心跳消息获取任务分配结果的过程。中间留了一个问题，就是任务到底是怎么分配的。任务的分配自然是由JobTracker做出来的，具体来说，存在一个抽象类：TaskScheduler，主要负责分配任务，继承该类的有几个类：Capaci...&lt;a href="http://www.cnblogs.com/esingchan/p/3940565.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-08-30 04:49 esingchan 阅读(14) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3940565" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;

&lt;div class="day"&gt;
	&lt;div class="dayTitle"&gt;
		&lt;a id="homepage1_HomePageDays_DaysList_ctl05_ImageLink" title="Day link" href="http://www.cnblogs.com/esingchan/archive/2014/08/17.html"&gt;&lt;img src="/preview~Cnblogs/Images/skins/sea/images/title_post.gif" border="0" align="absmiddle"&gt;&lt;/a&gt;
		&amp;nbsp;
		2014年8月17日		  
	&lt;/div&gt;

	
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl05_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/esingchan/p/3918203.html"&gt;MapReduce剖析笔记之四：TaskTracker通过心跳机制获取任务的流程&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 上一节分析到了JobTracker把作业从队列里取出来并进行了初始化，所谓的初始化，主要是获取了Map、Reduce任务的数量，并统计了哪些DataNode所在的服务器可以处理哪些Split等等，将这些信息缓存起来，但还没有进行实质的分配。等待TaskTracker跟自己通信。TaskTracker...&lt;a href="http://www.cnblogs.com/esingchan/p/3918203.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-08-17 22:38 esingchan 阅读(19) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3918203" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
			&lt;div class="postSeparator"&gt;&lt;/div&gt;
		
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl05_DayList_TitleUrl_1" class="postTitle2" href="http://www.cnblogs.com/esingchan/p/3917369.html"&gt;Hadoop2.2.0安装过程记录&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 1 安装环境1.1 客户端1.2 服务端1.3 安装准备 2 操作系统安装2.1.1 BIOS打开虚拟化支持2.1.2 关闭防火墙2.1.3 安装VNC3 JAVA安装 3.1 配置目的3.2 配置过程3.3 结果验证4 主机名配置4.1 配置目的4.2 配置过程4.3 结果验证5 增加hadoop...&lt;a href="http://www.cnblogs.com/esingchan/p/3917369.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-08-17 05:37 esingchan 阅读(36) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3917369" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
			&lt;div class="postSeparator"&gt;&lt;/div&gt;
		
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl05_DayList_TitleUrl_2" class="postTitle2" href="http://www.cnblogs.com/esingchan/p/3917368.html"&gt;序列化笔记之一：Google的Protocol Buffer格式分析&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 从公开介绍来看，ProtocolBuffer(PB)是google 的一种数据交换的格式，它独立于语言，独立于平台。作为一个学了多年通信的人，ProtocolBuffer在我看来是一种信源编码。所谓信源编码，就是将待传输的信源符号经过某种变换，转换成码流进行传输的这个变换过程。信源编码可分为两类：有...&lt;a href="http://www.cnblogs.com/esingchan/p/3917368.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-08-17 05:00 esingchan 阅读(46) 评论(1)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3917368" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
			&lt;div class="postSeparator"&gt;&lt;/div&gt;
		
			&lt;div class="postTitle"&gt;
				&lt;a id="homepage1_HomePageDays_DaysList_ctl05_DayList_TitleUrl_3" class="postTitle2" href="http://www.cnblogs.com/esingchan/p/3917252.html"&gt;MapReduce剖析笔记之三：Job的Map/Reduce Task初始化&lt;/a&gt;
			&lt;/div&gt;
			&lt;div class="c_b_p_desc"&gt;摘要: 上一节分析了Job由JobClient提交到JobTracker的流程，利用RPC机制，JobTracker接收到Job ID和Job所在HDFS的目录，够早了JobInProgress对象，丢入队列，另一个线程从队列中取出JobInProgress对象，并丢入线程池中执行，执行JobInProgr...&lt;a href="http://www.cnblogs.com/esingchan/p/3917252.html" class="c_b_p_desc_readmore"&gt;阅读全文&lt;/a&gt;&lt;/div&gt;
			&lt;div class="postDesc"&gt;posted @ 2014-08-17 02:59 esingchan 阅读(13) 评论(0)  &lt;a href="http://i.cnblogs.com/EditPosts.aspx?postid=3917252" rel="nofollow"&gt;编辑&lt;/a&gt;&lt;/div&gt;
		
&lt;/div&gt;
&lt;div class="topicListFooter"&gt;&lt;a href="http://www.cnblogs.com/esingchan/default.html?OnlyTitle=1"&gt;仅列出标题&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="http://www.cnblogs.com/esingchan/default.html?page=2"&gt;下一页&lt;/a&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div id="leftcontent"&gt;
	
		&lt;div id="leftcontentcontainer"&gt;
			
&lt;!--done--&gt;
&lt;div class="newsItem"&gt;
	&lt;div id="blog-news"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogNews();&lt;/script&gt;
&lt;/div&gt;

			&lt;div id="blog-calendar" style="display:none"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogDefaultCalendar();&lt;/script&gt;&lt;br&gt;
			&lt;div id="blog-sidecolumn"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;loadBlogSideColumn();&lt;/script&gt;&lt;/div&gt;
	
&lt;/div&gt;

&lt;!--done--&gt;
&lt;div class="footer"&gt;
	Powered by: &lt;a href="http://www.cnblogs.com"&gt;博客园&lt;/a&gt;	模板提供：&lt;a href="http://blog.hjenglish.com"&gt;沪江博客&lt;/a&gt;
	Copyright &amp;copy;2014 esingchan
&lt;/div&gt;



&lt;/body&gt;
&lt;/html&gt;
</Html>
	<HtmlMetas i:nil="true" />
	<HtmlTitle i:nil="true" />
	<IsDefault>false</IsDefault>
	<Layout i:nil="true" />
	<Name>-esingchan-</Name>
	<OutputCache i:nil="true" />
	<PageContents xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
	<Plugins xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<Published>false</Published>
	<RequireHttps>false</RequireHttps>
	<Routes>
		<PageRoute>
			<Defaults xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" />
			<Identifier>/esingchan/</Identifier>
			<RoutePath i:nil="true" />
		</PageRoute>
	</Routes>
	<Scripts i:nil="true" />
	<Site>
		<AbsoluteName xmlns="Ovaldi.Core.Models">Cnblogs</AbsoluteName>
	</Site>
	<Styles i:nil="true" />
	<UUID>-esingchan-</UUID>
</Page>